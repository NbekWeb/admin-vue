{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '@/router';\n// import { _TOKEN } from '@/services/login'\n\n// Umumiy axios instance\nexport const axiosInstance = axios.create({\n  baseURL: `https://v.zesu.ru/`,\n  timeout: 20000,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\n\n// Auth uchun alohida instance\nexport const axiosAuthInstance = axios.create({\n  baseURL: `${import.meta.env.VITE_APP_AUTH_BASE_URL}/`,\n  timeout: 20000,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\n\n// Fallback response\nexport function getResponse_DEFAULT() {\n  return {\n    content: [],\n    size: 10,\n    page: 1,\n    totalPages: 0,\n    totalElements: 0,\n    number: 0\n  };\n}\nconst _TOKEN = localStorage.getItem('token');\n\n// Request interceptor (axiosInstance)\naxiosInstance.interceptors.request.use(config => {\n  if (config.url === '/auth/v1/login') {\n    return config;\n  }\n  if (config.url.includes('NO_TOKEN')) {\n    config.headers.authorization = '';\n  } else if (_TOKEN.value) {\n    config.headers.authorization = `Bearer ${_TOKEN.value}`;\n  }\n  config.url = config.url.replace('/NO_TOKEN', '');\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor (axiosInstance)\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response?.status === 401 || error.response?.status === 403) {\n    _TOKEN.value = '';\n    router.push('/login');\n  }\n  return Promise.reject(error);\n});\n\n// Request interceptor (axiosAuthInstance)\naxiosAuthInstance.interceptors.request.use(config => {\n  if (config.url === '/auth/v1/login') {\n    return config;\n  }\n  if (config.url.includes('NO_TOKEN')) {\n    config.headers.authorization = '';\n  } else if (_TOKEN.value) {\n    config.headers.authorization = `Bearer ${_TOKEN.value}`;\n  }\n  config.url = config.url.replace('/NO_TOKEN', '');\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor (axiosAuthInstance)\naxiosAuthInstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response?.status === 401 || error.response?.status === 403) {\n    _TOKEN.value = '';\n    router.push('/login');\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","router","axiosInstance","create","baseURL","timeout","headers","Accept","axiosAuthInstance","import","meta","env","VITE_APP_AUTH_BASE_URL","getResponse_DEFAULT","content","size","page","totalPages","totalElements","number","_TOKEN","localStorage","getItem","interceptors","request","use","config","url","includes","authorization","value","replace","error","Promise","reject","response","status","push"],"sources":["C:/Users/UMIDJON/Desktop/default2/src/service/axios.js"],"sourcesContent":["import axios from 'axios'\r\nimport router from '@/router'\r\n// import { _TOKEN } from '@/services/login'\r\n\r\n// Umumiy axios instance\r\nexport const axiosInstance = axios.create({\r\n  baseURL: `https://v.zesu.ru/`,\r\n  timeout: 20000,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\n// Auth uchun alohida instance\r\nexport const axiosAuthInstance = axios.create({\r\n  baseURL: `${import.meta.env.VITE_APP_AUTH_BASE_URL}/`,\r\n  timeout: 20000,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\n// Fallback response\r\nexport function getResponse_DEFAULT() {\r\n  return {\r\n    content: [],\r\n    size: 10,\r\n    page: 1,\r\n    totalPages: 0,\r\n    totalElements: 0,\r\n    number: 0\r\n  }\r\n}\r\n\r\nconst _TOKEN = localStorage.getItem('token')\r\n\r\n// Request interceptor (axiosInstance)\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    if (config.url === '/auth/v1/login') {\r\n      return config\r\n    }\r\n\r\n    if (config.url.includes('NO_TOKEN')) {\r\n      config.headers.authorization = ''\r\n    } else if (_TOKEN.value) {\r\n      config.headers.authorization = `Bearer ${_TOKEN.value}`\r\n    }\r\n\r\n    config.url = config.url.replace('/NO_TOKEN', '')\r\n    return config\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Response interceptor (axiosInstance)\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      _TOKEN.value = ''\r\n      router.push('/login')\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Request interceptor (axiosAuthInstance)\r\naxiosAuthInstance.interceptors.request.use(\r\n  (config) => {\r\n    if (config.url === '/auth/v1/login') {\r\n      return config\r\n    }\r\n\r\n    if (config.url.includes('NO_TOKEN')) {\r\n      config.headers.authorization = ''\r\n    } else if (_TOKEN.value) {\r\n      config.headers.authorization = `Bearer ${_TOKEN.value}`\r\n    }\r\n\r\n    config.url = config.url.replace('/NO_TOKEN', '')\r\n    return config\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// Response interceptor (axiosAuthInstance)\r\naxiosAuthInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      _TOKEN.value = ''\r\n      router.push('/login')\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}