{"ast":null,"code":"import { CountTo } from \"vue3-count-to\";\nfunction getChartColorsArray(colors) {\n  colors = JSON.parse(colors);\n  return colors.map(function (value) {\n    var newValue = value.replace(\" \", \"\");\n    if (newValue.indexOf(\",\") === -1) {\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\n      if (color) {\n        color = color.replace(\" \", \"\");\n        return color;\n      } else return newValue;\n    } else {\n      var val = value.split(',');\n      if (val.length == 2) {\n        var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\n        rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\n        return rgbaColor;\n      } else {\n        return newValue;\n      }\n    }\n  });\n}\nexport default {\n  setup() {\n    return {\n      series: [{\n        name: \"Last Year\",\n        data: [25.3, 12.5, 20.2, 18.5, 40.4, 25.4, 15.8, 22.3, 19.2, 25.3, 12.5, 20.2]\n      }, {\n        name: \"Current Year\",\n        data: [36.2, 22.4, 38.2, 30.5, 26.4, 30.4, 20.2, 29.6, 10.9, 36.2, 22.4, 38.2]\n      }],\n      chartOptions: {\n        chart: {\n          type: \"bar\",\n          height: 309,\n          stacked: true,\n          toolbar: {\n            show: false\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: \"20%\",\n            borderRadius: 6\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        legend: {\n          show: true,\n          position: \"bottom\",\n          horizontalAlign: \"center\",\n          fontWeight: 400,\n          fontSize: \"8px\",\n          offsetX: 0,\n          offsetY: 0,\n          markers: {\n            width: 9,\n            height: 9,\n            radius: 4\n          }\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: [\"transparent\"]\n        },\n        grid: {\n          show: false\n        },\n        colors: getChartColorsArray('[\"--vz-success\", \"--vz-gray-300\"]'),\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n          axisTicks: {\n            show: false\n          },\n          axisBorder: {\n            show: true,\n            strokeDashArray: 1,\n            height: 1,\n            width: \"100%\",\n            offsetX: 0,\n            offsetY: 0\n          }\n        },\n        yaxis: {\n          show: false\n        },\n        fill: {\n          opacity: 1\n        }\n      }\n    };\n  },\n  components: {\n    CountTo\n  }\n};","map":{"version":3,"names":["CountTo","getChartColorsArray","colors","JSON","parse","map","value","newValue","replace","indexOf","color","getComputedStyle","document","documentElement","getPropertyValue","val","split","length","rgbaColor","setup","series","name","data","chartOptions","chart","type","height","stacked","toolbar","show","plotOptions","bar","horizontal","columnWidth","borderRadius","dataLabels","enabled","legend","position","horizontalAlign","fontWeight","fontSize","offsetX","offsetY","markers","width","radius","stroke","grid","xaxis","categories","axisTicks","axisBorder","strokeDashArray","yaxis","fill","opacity","components"],"sources":["C:\\Users\\UMIDJON\\Desktop\\default2\\src\\views\\dashboard\\analytics\\audiences-metrics.vue"],"sourcesContent":["<script>\nimport {\n  CountTo\n} from \"vue3-count-to\";\n\nfunction getChartColorsArray(colors) {\n  colors = JSON.parse(colors);\n  return colors.map(function (value) {\n    var newValue = value.replace(\" \", \"\");\n    if (newValue.indexOf(\",\") === -1) {\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\n      if (color) {\n        color = color.replace(\" \", \"\");\n        return color;\n      } else return newValue;\n    } else {\n      var val = value.split(',');\n      if (val.length == 2) {\n        var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\n        rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\n        return rgbaColor;\n      } else {\n        return newValue;\n      }\n    }\n  });\n}\nexport default {\n  setup() {\n    return {\n      series: [{\n        name: \"Last Year\",\n        data: [\n          25.3, 12.5, 20.2, 18.5, 40.4, 25.4, 15.8, 22.3, 19.2, 25.3, 12.5,\n          20.2,\n        ],\n      },\n      {\n        name: \"Current Year\",\n        data: [\n          36.2, 22.4, 38.2, 30.5, 26.4, 30.4, 20.2, 29.6, 10.9, 36.2, 22.4,\n          38.2,\n        ],\n      },\n      ],\n      chartOptions: {\n        chart: {\n          type: \"bar\",\n          height: 309,\n          stacked: true,\n          toolbar: {\n            show: false,\n          },\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: \"20%\",\n            borderRadius: 6,\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        legend: {\n          show: true,\n          position: \"bottom\",\n          horizontalAlign: \"center\",\n          fontWeight: 400,\n          fontSize: \"8px\",\n          offsetX: 0,\n          offsetY: 0,\n          markers: {\n            width: 9,\n            height: 9,\n            radius: 4,\n          },\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: [\"transparent\"],\n        },\n        grid: {\n          show: false,\n        },\n        colors: getChartColorsArray('[\"--vz-success\", \"--vz-gray-300\"]'),\n        xaxis: {\n          categories: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n          ],\n          axisTicks: {\n            show: false,\n          },\n          axisBorder: {\n            show: true,\n            strokeDashArray: 1,\n            height: 1,\n            width: \"100%\",\n            offsetX: 0,\n            offsetY: 0,\n          },\n        },\n        yaxis: {\n          show: false,\n        },\n        fill: {\n          opacity: 1,\n        },\n      },\n    };\n  },\n  components: {\n    CountTo\n  }\n};\n</script>\n\n<template>\n  <b-card no-body>\n    <b-card-header class=\"border-0 align-items-center d-flex\">\n      <b-card-title class=\"mb-0 flex-grow-1\">Audiences Metrics</b-card-title>\n      <div class=\"hstack gap-1\">\n        <b-button type=\"button\" variant=\"soft-secondary\" size=\"sm\">ALL</b-button>\n        <b-button type=\"button\" variant=\"soft-secondary\" size=\"sm\">1M</b-button>\n        <b-button type=\"button\" variant=\"soft-secondary\" size=\"sm\">6M</b-button>\n        <b-button type=\"button\" variant=\"soft-primary\" size=\"sm\">1Y</b-button>\n      </div>\n    </b-card-header>\n    <b-card-header class=\"p-0 border-0 bg-soft-light\">\n      <b-row class=\"g-0 text-center\">\n        <b-col cols=\"6\" sm=\"4\">\n          <div class=\"p-3 border border-dashed border-start-0\">\n            <h5 class=\"mb-1\">\n              <count-to :startVal='0' :endVal='854' :duration='5000'></count-to>\n              <span class=\"text-success ms-1 fs-12\">49%<i class=\"ri-arrow-right-up-line ms-1 align-middle\"></i></span>\n            </h5>\n            <p class=\"text-muted mb-0\">Avg. Session</p>\n          </div>\n        </b-col>\n        <b-col cols=\"6\" sm=\"4\">\n          <div class=\"p-3 border border-dashed border-start-0\">\n            <h5 class=\"mb-1\">\n              <count-to :startVal='0' :endVal='1278' :duration='4000'></count-to>\n              <span class=\"text-success ms-1 fs-12\">60%<i class=\"ri-arrow-right-up-line ms-1 align-middle\"></i></span>\n            </h5>\n            <p class=\"text-muted mb-0\">Conversion Rate</p>\n          </div>\n        </b-col>\n        <b-col cols=\"6\" sm=\"4\">\n          <div class=\"p-3 border border-dashed border-start-0 border-end-0\">\n            <h5 class=\"mb-1\">\n              <count-to :startVal='0' :endVal='3' :duration='4000'></count-to>m\n              <count-to :startVal='0' :endVal='40' :duration='4000'></count-to>sec\n              <span class=\"text-success ms-1 fs-12\">37%<i class=\"ri-arrow-right-up-line ms-1 align-middle\"></i></span>\n            </h5>\n            <p class=\"text-muted mb-0\">Avg. Session Duration</p>\n          </div>\n        </b-col>\n      </b-row>\n    </b-card-header>\n    <b-card-body class=\"p-0 pb-2\">\n      <div>\n        <apexchart class=\"apex-charts\" dir=\"ltr\" :series=\"series\" :options=\"chartOptions\" height=\"309\"></apexchart>\n      </div>\n    </b-card-body>\n  </b-card>\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}