{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { graphic } from \"echarts\";\nfunction getChartColorsArray(colors) {\n  colors = JSON.parse(colors);\n  return colors.map(function (value) {\n    var newValue = value.replace(\" \", \"\");\n    if (newValue.indexOf(\",\") === -1) {\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\n      if (color) {\n        color = color.replace(\" \", \"\");\n        return color;\n      } else return newValue;\n    } else {\n      var val = value.split(',');\n      if (val.length == 2) {\n        var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\n        rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\n        return rgbaColor;\n      } else {\n        return newValue;\n      }\n    }\n  });\n}\nlet data1 = [];\nfor (let i = 0; i <= 360; i++) {\n  let t = i / 180 * Math.PI;\n  let r = Math.sin(2 * t) * Math.cos(2 * t);\n  data1.push([r, i]);\n}\nconst lineChart = {\n  grid: {\n    left: '0%',\n    right: '0%',\n    bottom: '0%',\n    top: '4%',\n    containLabel: true\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  series: [{\n    data: [150, 230, 224, 218, 135, 147, 260],\n    type: 'line'\n  }],\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  color: getChartColorsArray('[\"--vz-success\"]')\n};\nconst stackedLineChart = {\n  // Setup grid\n  tooltip: {\n    trigger: 'axis'\n  },\n  legend: {\n    data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine'],\n    textStyle: {\n      //The style of the legend text\n      color: '#858d98'\n    }\n  },\n  grid: {\n    left: '0%',\n    right: '0%',\n    bottom: '0%',\n    containLabel: true\n  },\n  toolbox: {\n    feature: {\n      saveAsImage: {}\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  series: [{\n    name: 'Email',\n    type: 'line',\n    stack: 'Total',\n    data: [120, 132, 101, 134, 90, 230, 210]\n  }, {\n    name: 'Union Ads',\n    type: 'line',\n    stack: 'Total',\n    data: [220, 182, 191, 234, 290, 330, 310]\n  }, {\n    name: 'Video Ads',\n    type: 'line',\n    stack: 'Total',\n    data: [150, 232, 201, 154, 190, 330, 410]\n  }, {\n    name: 'Direct',\n    type: 'line',\n    stack: 'Total',\n    data: [320, 332, 301, 334, 390, 330, 320]\n  }, {\n    name: 'Search Engine',\n    type: 'line',\n    stack: 'Total',\n    data: [820, 932, 901, 934, 1290, 1330, 1320]\n  }],\n  colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]')\n};\nconst areaChart = {\n  grid: {\n    left: '0%',\n    right: '0%',\n    bottom: '0%',\n    top: '4%',\n    containLabel: true\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  series: [{\n    data: [820, 932, 901, 934, 1290, 1330, 1320],\n    type: 'line',\n    areaStyle: {}\n  }],\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  colors: getChartColorsArray('[\"--vz-success\"]'),\n  backgroundColor: [\"#fff\"]\n};\nconst stackedAreaChart = {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'cross',\n      label: {\n        backgroundColor: '#6a7985'\n      }\n    }\n  },\n  legend: {\n    data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine'],\n    textStyle: {\n      //The style of the legend text\n      color: '#858d98'\n    }\n  },\n  toolbox: {\n    feature: {\n      saveAsImage: {}\n    }\n  },\n  grid: {\n    left: '0%',\n    right: '0%',\n    bottom: '0%',\n    containLabel: true\n  },\n  xAxis: [{\n    type: 'category',\n    boundaryGap: false,\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    }\n  }],\n  yAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\n  series: [{\n    name: 'Email',\n    type: 'line',\n    stack: 'Total',\n    areaStyle: {},\n    emphasis: {\n      focus: 'series'\n    },\n    data: [120, 132, 101, 134, 90, 230, 210]\n  }, {\n    name: 'Union Ads',\n    type: 'line',\n    stack: 'Total',\n    areaStyle: {},\n    emphasis: {\n      focus: 'series'\n    },\n    data: [220, 182, 191, 234, 290, 330, 310]\n  }, {\n    name: 'Video Ads',\n    type: 'line',\n    stack: 'Total',\n    areaStyle: {},\n    emphasis: {\n      focus: 'series'\n    },\n    data: [150, 232, 201, 154, 190, 330, 410]\n  }, {\n    name: 'Direct',\n    type: 'line',\n    stack: 'Total',\n    areaStyle: {},\n    emphasis: {\n      focus: 'series'\n    },\n    data: [320, 332, 301, 334, 390, 330, 320]\n  }, {\n    name: 'Search Engine',\n    type: 'line',\n    stack: 'Total',\n    label: {\n      show: true,\n      position: 'top'\n    },\n    areaStyle: {},\n    emphasis: {\n      focus: 'series'\n    },\n    data: [820, 932, 901, 934, 1290, 1330, 1320]\n  }]\n};\nconst stepLineChart = {\n  tooltip: {\n    trigger: 'axis'\n  },\n  legend: {\n    data: ['Step Start', 'Step Middle', 'Step End'],\n    textStyle: {\n      //The style of the legend text\n      color: '#858d98'\n    }\n  },\n  grid: {\n    left: '0%',\n    right: '0%',\n    bottom: '0%',\n    containLabel: true\n  },\n  toolbox: {\n    feature: {\n      saveAsImage: {}\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\"]'),\n  series: [{\n    name: 'Step Start',\n    type: 'line',\n    step: 'start',\n    data: [120, 132, 101, 134, 90, 230, 210]\n  }, {\n    name: 'Step Middle',\n    type: 'line',\n    step: 'middle',\n    data: [220, 282, 201, 234, 290, 430, 410]\n  }, {\n    name: 'Step End',\n    type: 'line',\n    step: 'end',\n    data: [450, 432, 401, 454, 590, 530, 510]\n  }]\n};\nconst lineYCategoryChart = {\n  legend: {\n    data: ['Altitude (km) vs. temperature (°C)'],\n    textStyle: {\n      //The style of the legend text\n      color: '#858d98'\n    }\n  },\n  tooltip: {\n    trigger: 'axis',\n    formatter: 'Temperature : <br/>{b}km : {c}°C'\n  },\n  grid: {\n    left: '1%',\n    right: '0%',\n    bottom: '0%',\n    containLabel: true\n  },\n  xAxis: {\n    type: 'value',\n    axisLabel: {\n      formatter: '{value} °C'\n    },\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  yAxis: {\n    type: 'category',\n    axisLine: {\n      onZero: false,\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    axisLabel: {\n      formatter: '{value} km'\n    },\n    boundaryGap: false,\n    data: ['0', '10', '20', '30', '40', '50', '60', '70', '80'],\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  color: getChartColorsArray('[\"--vz-success\"]'),\n  series: [{\n    name: 'Altitude (km) vs. temperature (°C)',\n    type: 'line',\n    symbolSize: 10,\n    symbol: 'circle',\n    smooth: true,\n    lineStyle: {\n      width: 3,\n      shadowColor: 'rgba(0,0,0,0.3)',\n      shadowBlur: 10,\n      shadowOffsetY: 8\n    },\n    data: [15, -50, -56.5, -46.5, -22.1, -2.5, -27.7, -55.7, -76.5]\n  }]\n};\nconst basicBar = {\n  grid: {\n    left: '0%',\n    right: '0%',\n    bottom: '0%',\n    top: '3%',\n    containLabel: true\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  color: getChartColorsArray('[\"--vz-success\"]'),\n  series: [{\n    data: [120, 200, 150, 80, 70, 110, 130],\n    type: 'bar',\n    showBackground: true,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)'\n    }\n  }]\n};\nconst barLabelChart = {};\nconst horizontalBarChart = {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  legend: {\n    textStyle: {\n      //The style of the legend text\n      color: '#858d98'\n    }\n  },\n  grid: {\n    left: '0%',\n    right: '4%',\n    bottom: '0%',\n    containLabel: true\n  },\n  xAxis: {\n    type: 'value',\n    boundaryGap: [0, 0.01],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  yAxis: {\n    type: 'category',\n    data: ['Brazil', 'Indonesia', 'USA', 'India', 'China', 'World'],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]'),\n  series: [{\n    name: '2011',\n    type: 'bar',\n    data: [18203, 23489, 29034, 104970, 131744, 630230]\n  }, {\n    name: '2012',\n    type: 'bar',\n    data: [19325, 23438, 31000, 121594, 134141, 681807]\n  }]\n};\nconst stackedHorizontalBarChart = {\n  trigger: 'axis',\n  axisPointer: {\n    // Use axis to trigger tooltip\n    type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n  },\n  legend: {\n    textStyle: {\n      //The style of the legend text\n      color: '#858d98'\n    }\n  },\n  grid: {\n    left: '1%',\n    right: '3%',\n    bottom: '0%',\n    containLabel: true\n  },\n  xAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\n  yAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  series: [{\n    name: 'Direct',\n    type: 'bar',\n    stack: 'total',\n    label: {\n      show: true\n    },\n    emphasis: {\n      focus: 'series'\n    },\n    data: [320, 302, 301, 334, 390, 330, 320]\n  }, {\n    name: 'Mail Ad',\n    type: 'bar',\n    stack: 'total',\n    label: {\n      show: true\n    },\n    emphasis: {\n      focus: 'series'\n    },\n    data: [120, 132, 101, 134, 90, 230, 210]\n  }, {\n    name: 'Affiliate Ad',\n    type: 'bar',\n    stack: 'total',\n    label: {\n      show: true\n    },\n    emphasis: {\n      focus: 'series'\n    },\n    data: [220, 182, 191, 234, 290, 330, 310]\n  }, {\n    name: 'Video Ad',\n    type: 'bar',\n    stack: 'total',\n    label: {\n      show: true\n    },\n    emphasis: {\n      focus: 'series'\n    },\n    data: [150, 212, 201, 154, 190, 330, 410]\n  }, {\n    name: 'Search Engine',\n    type: 'bar',\n    stack: 'total',\n    label: {\n      show: true\n    },\n    emphasis: {\n      focus: 'series'\n    },\n    data: [820, 832, 901, 934, 1290, 1330, 1320]\n  }]\n};\nconst pieChart = {\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b} : {c} ({d}%)'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left',\n    data: ['Laptop', 'Tablet', 'Mobile', 'Others', 'Desktop'],\n    textStyle: {\n      color: '#999'\n    }\n  },\n  color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\n  series: [{\n    name: 'Total sales',\n    type: 'pie',\n    radius: '55%',\n    center: ['50%', '60%'],\n    data: [{\n      value: 488,\n      name: 'Laptop'\n    }, {\n      value: 310,\n      name: 'Tablet'\n    }, {\n      value: 234,\n      name: 'Mobile'\n    }, {\n      value: 170,\n      name: 'Others'\n    }, {\n      value: 175,\n      name: 'Desktop'\n    }]\n  }]\n};\nconst doughnutChart = {\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b}: {c} ({d}%)'\n  },\n  legend: {\n    orient: 'vertical',\n    x: 'left',\n    data: ['Laptop', 'Tablet', 'Mobile', 'Others', 'Desktop'],\n    textStyle: {\n      color: '#999'\n    }\n  },\n  color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\n  series: [{\n    name: 'Total sales',\n    type: 'pie',\n    radius: ['50%', '70%'],\n    avoidLabelOverlap: false,\n    emphasis: {\n      label: {\n        show: true,\n        textStyle: {\n          fontSize: '30',\n          fontWeight: 'bold'\n        }\n      }\n    },\n    labelLine: {\n      normal: {\n        show: false\n      }\n    },\n    data: [{\n      value: 335,\n      name: 'Laptop'\n    }, {\n      value: 310,\n      name: 'Tablet'\n    }, {\n      value: 234,\n      name: 'Mobile'\n    }, {\n      value: 135,\n      name: 'Others'\n    }, {\n      value: 1548,\n      name: 'Desktop'\n    }]\n  }]\n};\nconst scatterChart = {\n  grid: {\n    left: '1%',\n    right: '0%',\n    bottom: '0%',\n    top: '2%',\n    containLabel: true\n  },\n  xAxis: {\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  yAxis: {\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  series: [{\n    symbolSize: 12,\n    data: [[10.0, 8.04], [8.07, 6.95], [13.0, 7.58], [9.05, 8.81], [11.0, 8.33], [14.0, 7.66], [13.4, 6.81], [10.0, 6.33], [14.0, 8.96], [12.5, 6.82], [9.15, 7.2], [11.5, 7.2], [3.03, 4.23], [12.2, 7.83], [2.02, 4.47], [1.05, 3.33], [4.05, 4.96], [6.03, 7.24], [12.0, 6.26], [12.0, 8.84], [7.08, 5.82], [5.02, 5.68]],\n    type: 'scatter'\n  }]\n};\nconst graphChart = {\n  tooltip: {},\n  animationDurationUpdate: 1500,\n  animationEasingUpdate: 'quinticInOut',\n  color: getChartColorsArray('[\"--vz-primary\"]'),\n  series: [{\n    type: 'graph',\n    layout: 'none',\n    symbolSize: 50,\n    roam: true,\n    label: {\n      show: true\n    },\n    edgeSymbol: ['circle', 'arrow'],\n    edgeSymbolSize: [4, 10],\n    edgeLabel: {\n      fontSize: 20\n    },\n    data: [{\n      name: 'Node 1',\n      x: 300,\n      y: 300\n    }, {\n      name: 'Node 2',\n      x: 800,\n      y: 300\n    }, {\n      name: 'Node 3',\n      x: 550,\n      y: 100\n    }, {\n      name: 'Node 4',\n      x: 550,\n      y: 500\n    }],\n    // links: [],\n    links: [{\n      source: 0,\n      target: 1,\n      symbolSize: [5, 20],\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 5,\n        curveness: 0.2\n      }\n    }, {\n      source: 'Node 2',\n      target: 'Node 1',\n      label: {\n        show: true\n      },\n      lineStyle: {\n        curveness: 0.2\n      }\n    }, {\n      source: 'Node 1',\n      target: 'Node 3'\n    }, {\n      source: 'Node 2',\n      target: 'Node 3'\n    }, {\n      source: 'Node 2',\n      target: 'Node 4'\n    }, {\n      source: 'Node 1',\n      target: 'Node 4'\n    }],\n    lineStyle: {\n      opacity: 0.9,\n      width: 2,\n      curveness: 0\n    }\n  }],\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  }\n};\nconst treemapChart = {\n  color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]'),\n  series: [{\n    type: 'treemap',\n    data: [{\n      name: 'nodeA',\n      value: 10,\n      children: [{\n        name: 'nodeAa',\n        value: 4\n      }, {\n        name: 'nodeAb',\n        value: 6\n      }]\n    }, {\n      name: 'nodeB',\n      value: 20,\n      children: [{\n        name: 'nodeBa',\n        value: 20,\n        children: [{\n          name: 'nodeBa1',\n          value: 20\n        }]\n      }]\n    }]\n  }],\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  }\n};\nconst sunburstChart = {\n  color: getChartColorsArray('[\"--vz-warning\", \"--vz-success\"]'),\n  series: {\n    type: 'sunburst',\n    // emphasis: {\n    //     focus: 'ancestor'\n    // },\n    data: [{\n      name: 'Grandpa',\n      children: [{\n        name: 'Uncle Leo',\n        value: 15,\n        children: [{\n          name: 'Cousin Jack',\n          value: 2\n        }, {\n          name: 'Cousin Mary',\n          value: 5,\n          children: [{\n            name: 'Jackson',\n            value: 2\n          }]\n        }, {\n          name: 'Cousin Ben',\n          value: 4\n        }]\n      }, {\n        name: 'Father',\n        value: 10,\n        children: [{\n          name: 'Me',\n          value: 5\n        }, {\n          name: 'Brother Peter',\n          value: 1\n        }]\n      }]\n    }, {\n      name: 'Nancy',\n      children: [{\n        name: 'Uncle Nike',\n        children: [{\n          name: 'Cousin Betty',\n          value: 1\n        }, {\n          name: 'Cousin Jenny',\n          value: 2\n        }]\n      }]\n    }],\n    radius: [0, '90%'],\n    label: {\n      rotate: 'radial'\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  }\n};\nconst parallelChart = {\n  parallelAxis: [{\n    dim: 0,\n    name: 'Price'\n  }, {\n    dim: 1,\n    name: 'Net Weight'\n  }, {\n    dim: 2,\n    name: 'Amount'\n  }, {\n    dim: 3,\n    name: 'Score',\n    type: 'category',\n    data: ['Excellent', 'Good', 'OK', 'Bad']\n  }],\n  grid: {\n    left: '0%',\n    right: '0%',\n    bottom: '0%',\n    top: '2%',\n    containLabel: true\n  },\n  color: getChartColorsArray('[\"--vz-success\"]'),\n  series: {\n    type: 'parallel',\n    lineStyle: {\n      width: 4\n    },\n    data: [[12.99, 100, 82, 'Good'], [9.99, 80, 77, 'OK'], [20, 120, 60, 'Excellent']]\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  }\n};\nconst sankeyChart = {\n  color: getChartColorsArray('[\"--vz-info\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-primary\"]'),\n  series: {\n    type: 'sankey',\n    layout: 'none',\n    emphasis: {\n      focus: 'adjacency'\n    },\n    data: [{\n      name: 'a'\n    }, {\n      name: 'b'\n    }, {\n      name: 'a1'\n    }, {\n      name: 'a2'\n    }, {\n      name: 'b1'\n    }, {\n      name: 'c'\n    }],\n    links: [{\n      source: 'a',\n      target: 'a1',\n      value: 5\n    }, {\n      source: 'a',\n      target: 'a2',\n      value: 3\n    }, {\n      source: 'b',\n      target: 'b1',\n      value: 8\n    }, {\n      source: 'a',\n      target: 'b1',\n      value: 3\n    }, {\n      source: 'b1',\n      target: 'a1',\n      value: 1\n    }, {\n      source: 'b1',\n      target: 'c',\n      value: 2\n    }]\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  }\n};\nconst funnelChart = {\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b} : {c}%'\n  },\n  toolbox: {\n    feature: {\n      dataView: {\n        readOnly: false\n      },\n      restore: {},\n      saveAsImage: {}\n    }\n  },\n  legend: {\n    data: ['Show', 'Click', 'Visit', 'Inquiry', 'Order'],\n    textStyle: {\n      //The style of the legend text\n      color: '#858d98'\n    }\n  },\n  color: getChartColorsArray('[\"--vz-info\", \"--vz-success\",\"--vz-warning\", \"--vz-danger\", \"--vz-primary\"]'),\n  series: [{\n    name: 'Funnel',\n    type: 'funnel',\n    left: '10%',\n    top: 60,\n    bottom: 60,\n    width: '80%',\n    min: 0,\n    max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    gap: 2,\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    labelLine: {\n      length: 10,\n      lineStyle: {\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        fontSize: 20\n      }\n    },\n    data: [{\n      value: 60,\n      name: 'Visit'\n    }, {\n      value: 40,\n      name: 'Inquiry'\n    }, {\n      value: 20,\n      name: 'Order'\n    }, {\n      value: 80,\n      name: 'Click'\n    }, {\n      value: 100,\n      name: 'Show'\n    }]\n  }],\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  }\n};\nconst guageChart = {\n  tooltip: {\n    formatter: \"{a} <br/>{b} : {c}%\"\n  },\n  toolbox: {\n    feature: {\n      restore: {\n        title: \"Refresh\"\n      },\n      saveAsImage: {\n        title: \"Download Image\"\n      }\n    }\n  },\n  series: [{\n    name: 'Business indicator',\n    type: 'gauge',\n    detail: {\n      formatter: '{value}%'\n    },\n    axisLine: {\n      lineStyle: {\n        color: [[0.2, '#34c38f'], [0.8, '#556ee6'], [1, '#f46a6a']],\n        width: 20\n      }\n    },\n    data: [{\n      value: 50,\n      name: 'Completion rate'\n    }]\n  }]\n};\nconst polarChart = {\n  polar: {\n    legend: {\n      data: [\"line\"],\n      textStyle: {\n        color: '#999'\n      }\n    },\n    polar: {\n      center: [\"50%\", \"54%\"]\n    },\n    color: getChartColorsArray('[\"--vz-success\"]'),\n    tooltip: {\n      trigger: \"axis\",\n      axisPointer: {\n        type: \"cross\"\n      }\n    },\n    angleAxis: {\n      type: \"value\",\n      startAngle: 0\n    },\n    radiusAxis: {\n      min: 0\n    },\n    series: [{\n      coordinateSystem: \"polar\",\n      name: \"line\",\n      type: \"line\",\n      showSymbol: false,\n      data: data1\n    }],\n    animationDuration: 2000\n  }\n};\nconst mixedBarChart = {\n  // Setup grid\n  grid: {\n    zlevel: 0,\n    x: 80,\n    x2: 50,\n    y: 30,\n    y2: 30,\n    borderWidth: 0,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: 'rgba(0,0,0,0)'\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'cross',\n      crossStyle: {\n        color: '#999'\n      }\n    }\n  },\n  toolbox: {\n    orient: 'center',\n    left: 0,\n    top: 20,\n    feature: {\n      dataView: {\n        readOnly: false,\n        title: \"Data View\"\n      },\n      magicType: {\n        type: ['line', 'bar'],\n        title: {\n          line: \"For line chart\",\n          bar: \"For bar chart\"\n        }\n      },\n      restore: {\n        title: \"restore\"\n      },\n      saveAsImage: {\n        title: \"Download Image\"\n      }\n    }\n  },\n  color: getChartColorsArray('[\"--vz-success\",\"--vz-primary\",\"--vz-danger\"]'),\n  legend: {\n    data: ['Evaporation', 'Precipitation', 'Average temperature'],\n    textStyle: {\n      color: '#8791af'\n    }\n  },\n  xAxis: [{\n    type: 'category',\n    data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n    axisPointer: {\n      type: 'shadow'\n    },\n    axisLine: {\n      lineStyle: {\n        color: '#8791af'\n      }\n    }\n  }],\n  yAxis: [{\n    type: 'value',\n    name: 'Water volume',\n    min: 0,\n    max: 250,\n    interval: 50,\n    axisLine: {\n      lineStyle: {\n        color: '#8791af'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(166, 176, 207, 0.1)\"\n      }\n    },\n    axisLabel: {\n      formatter: '{value} ml'\n    }\n  }, {\n    type: 'value',\n    name: 'Temperature',\n    min: 0,\n    max: 25,\n    interval: 5,\n    axisLine: {\n      lineStyle: {\n        color: '#8791af'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(166, 176, 207, 0.1)\"\n      }\n    },\n    axisLabel: {\n      formatter: '{value} Ã‚Â°C'\n    }\n  }],\n  series: [{\n    name: 'Evaporation',\n    type: 'bar',\n    data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2]\n  }, {\n    name: 'Precipitation',\n    type: 'bar',\n    data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2]\n  }, {\n    name: 'Average Temperature',\n    type: 'line',\n    yAxisIndex: 1,\n    data: [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4]\n  }]\n};\nvar data = [[[28604, 77, 17096869, 'Australia', 1990], [31163, 77.4, 27662440, 'Canada', 1990], [1516, 68, 1154605773, 'China', 1990], [13670, 74.7, 10582082, 'Cuba', 1990], [28599, 75, 4986705, 'Finland', 1990], [29476, 77.1, 56943299, 'France', 1990], [31476, 75.4, 78958237, 'Germany', 1990], [28666, 78.1, 254830, 'Iceland', 1990], [1777, 57.7, 870601776, 'India', 1990], [29550, 79.1, 122249285, 'Japan', 1990], [2076, 67.9, 20194354, 'North Korea', 1990], [12087, 72, 42972254, 'South Korea', 1990], [24021, 75.4, 3397534, 'New Zealand', 1990], [43296, 76.8, 4240375, 'Norway', 1990], [10088, 70.8, 38195258, 'Poland', 1990], [19349, 69.6, 147568552, 'Russia', 1990], [10670, 67.3, 53994605, 'Turkey', 1990], [26424, 75.7, 57110117, 'United Kingdom', 1990], [37062, 75.4, 252847810, 'United States', 1990]], [[44056, 81.8, 23968973, 'Australia', 2015], [43294, 81.7, 35939927, 'Canada', 2015], [13334, 76.9, 1376048943, 'China', 2015], [21291, 78.5, 11389562, 'Cuba', 2015], [38923, 80.8, 5503457, 'Finland', 2015], [37599, 81.9, 64395345, 'France', 2015], [44053, 81.1, 80688545, 'Germany', 2015], [42182, 82.8, 329425, 'Iceland', 2015], [5903, 66.8, 1311050527, 'India', 2015], [36162, 83.5, 126573481, 'Japan', 2015], [1390, 71.4, 25155317, 'North Korea', 2015], [34644, 80.7, 50293439, 'South Korea', 2015], [34186, 80.6, 4528526, 'New Zealand', 2015], [64304, 81.6, 5210967, 'Norway', 2015], [24787, 77.3, 38611794, 'Poland', 2015], [23038, 73.13, 143456918, 'Russia', 2015], [19360, 76.5, 78665830, 'Turkey', 2015], [38225, 81.4, 64715810, 'United Kingdom', 2015], [53354, 79.1, 321773631, 'United States', 2015]]];\nconst bubbleChart = {\n  grid: {\n    zlevel: 0,\n    x: 50,\n    x2: 50,\n    y: 30,\n    y2: 30,\n    borderWidth: 0,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: 'rgba(0,0,0,0)'\n  },\n  legend: {\n    right: 10,\n    data: ['2018', '2019'],\n    textStyle: {\n      color: '#999'\n    }\n  },\n  xAxis: {\n    axisLine: {\n      lineStyle: {\n        color: '#8791af'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: \"rgba(166, 176, 207, 0.1)\"\n      }\n    }\n  },\n  yAxis: {\n    axisLine: {\n      lineStyle: {\n        color: '#8791af'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: \"rgba(166, 176, 207, 0.1)\"\n      }\n    },\n    scale: true\n  },\n  series: [{\n    name: '2018',\n    data: data[0],\n    type: 'scatter',\n    symbolSize(data) {\n      return Math.sqrt(data[2]) / 5e2;\n    },\n    emphasis: {\n      label: {\n        show: true,\n        formatter({\n          data\n        }) {\n          return data[3];\n        },\n        position: 'top'\n      }\n    },\n    itemStyle: {\n      shadowBlur: 10,\n      shadowColor: 'rgba(120, 36, 50, 0.5)',\n      shadowOffsetY: 5,\n      color: new graphic.RadialGradient(0.4, 0.3, 1, [{\n        offset: 0,\n        color: getChartColorsArray('[\"--vz-primary\"]')\n      }, {\n        offset: 1,\n        color: getChartColorsArray('[\"--vz-primary\"]')\n      }])\n    }\n  }, {\n    name: '2019',\n    data: data[1],\n    type: 'scatter',\n    symbolSize(data) {\n      return Math.sqrt(data[2]) / 5e2;\n    },\n    emphasis: {\n      label: {\n        show: true,\n        formatter({\n          data\n        }) {\n          return data[3];\n        },\n        position: 'top'\n      }\n    },\n    itemStyle: {\n      shadowBlur: 10,\n      shadowColor: 'rgba(52, 195, 143, 0.5)',\n      shadowOffsetY: 5,\n      color: new graphic.RadialGradient(0.4, 0.3, 1, [{\n        offset: 0,\n        color: getChartColorsArray('[\"--vz-success\"]')\n      }, {\n        offset: 1,\n        color: getChartColorsArray('[\"--vz-success\"]')\n      }])\n    }\n  }]\n};\nconst candlestickChart = {\n  grid: {\n    left: '1%',\n    right: '0%',\n    bottom: '0%',\n    top: '2%',\n    containLabel: true\n  },\n  xAxis: {\n    data: ['2017-10-24', '2017-10-25', '2017-10-26', '2017-10-27'],\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  yAxis: {\n    axisLine: {\n      lineStyle: {\n        color: '#858d98'\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"rgba(133, 141, 152, 0.1)\"\n      }\n    }\n  },\n  textStyle: {\n    fontFamily: 'Poppins, sans-serif'\n  },\n  series: [{\n    type: 'candlestick',\n    data: [[20, 34, 10, 38], [40, 35, 30, 50], [31, 38, 33, 44], [38, 15, 5, 42]],\n    itemStyle: {\n      normal: {\n        color: \"#556ee6\",\n        color0: \"#34c38f\",\n        borderColor: \"#556ee6\",\n        borderColor0: \"#34c38f\"\n      }\n    }\n  }]\n};\nexport { lineChart, polarChart, areaChart, mixedBarChart, guageChart, stackedLineChart, pieChart, stepLineChart, bubbleChart, doughnutChart, lineYCategoryChart, stackedAreaChart, basicBar, barLabelChart, horizontalBarChart, stackedHorizontalBarChart, scatterChart, graphChart, treemapChart, sunburstChart, parallelChart, sankeyChart, candlestickChart, funnelChart };","map":{"version":3,"names":["graphic","getChartColorsArray","colors","JSON","parse","map","value","newValue","replace","indexOf","color","getComputedStyle","document","documentElement","getPropertyValue","val","split","length","rgbaColor","data1","i","t","Math","PI","r","sin","cos","push","lineChart","grid","left","right","bottom","top","containLabel","xAxis","type","data","axisLine","lineStyle","yAxis","splitLine","series","textStyle","fontFamily","stackedLineChart","tooltip","trigger","legend","toolbox","feature","saveAsImage","boundaryGap","name","stack","areaChart","areaStyle","backgroundColor","stackedAreaChart","axisPointer","label","emphasis","focus","show","position","stepLineChart","step","lineYCategoryChart","formatter","axisLabel","onZero","symbolSize","symbol","smooth","width","shadowColor","shadowBlur","shadowOffsetY","basicBar","showBackground","backgroundStyle","barLabelChart","horizontalBarChart","stackedHorizontalBarChart","pieChart","orient","radius","center","doughnutChart","x","avoidLabelOverlap","fontSize","fontWeight","labelLine","normal","scatterChart","graphChart","animationDurationUpdate","animationEasingUpdate","layout","roam","edgeSymbol","edgeSymbolSize","edgeLabel","y","links","source","target","curveness","opacity","treemapChart","children","sunburstChart","rotate","parallelChart","parallelAxis","dim","sankeyChart","funnelChart","dataView","readOnly","restore","min","max","minSize","maxSize","sort","gap","itemStyle","borderColor","borderWidth","guageChart","title","detail","polarChart","polar","angleAxis","startAngle","radiusAxis","coordinateSystem","showSymbol","animationDuration","mixedBarChart","zlevel","x2","y2","crossStyle","magicType","line","bar","interval","yAxisIndex","bubbleChart","scale","sqrt","RadialGradient","offset","candlestickChart","color0","borderColor0"],"sources":["C:/Users/UMIDJON/Desktop/default2/src/views/charts/echart/data.js"],"sourcesContent":["import {\r\n    graphic\r\n} from \"echarts\";\r\n\r\nfunction getChartColorsArray(colors){\r\n    colors = JSON.parse(colors);\r\n    return colors.map(function (value) {\r\n      var newValue = value.replace(\" \", \"\");\r\n      if (newValue.indexOf(\",\") === -1) {\r\n        var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\r\n            if (color) {\r\n            color = color.replace(\" \", \"\");\r\n            return color;\r\n            }\r\n            else return newValue;\r\n        } else {\r\n            var val = value.split(',');\r\n            if (val.length == 2) {\r\n                var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\r\n                rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\r\n                return rgbaColor;\r\n            } else {\r\n                return newValue;\r\n            }\r\n        }\r\n    });\r\n  }\r\nlet data1 = [];\r\nfor (let i = 0; i <= 360; i++) {\r\n    let t = (i / 180) * Math.PI;\r\n    let r = Math.sin(2 * t) * Math.cos(2 * t);\r\n    data1.push([r, i]);\r\n}\r\n\r\nconst lineChart = {\r\n    grid: {\r\n        left: '0%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        top: '4%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        data: [150, 230, 224, 218, 135, 147, 260],\r\n        type: 'line'\r\n    }],\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    color: getChartColorsArray('[\"--vz-success\"]'),\r\n\r\n};\r\n\r\nconst stackedLineChart = {\r\n    // Setup grid\r\n    tooltip: {\r\n        trigger: 'axis'\r\n    },\r\n    legend: {\r\n        data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine'],\r\n        textStyle: { //The style of the legend text\r\n            color: '#858d98',\r\n        },\r\n    },\r\n    grid: {\r\n        left: '0%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        containLabel: true\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            saveAsImage: {}\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n            name: 'Email',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [120, 132, 101, 134, 90, 230, 210],\r\n        },\r\n        {\r\n            name: 'Union Ads',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [220, 182, 191, 234, 290, 330, 310]\r\n        },\r\n        {\r\n            name: 'Video Ads',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [150, 232, 201, 154, 190, 330, 410]\r\n        },\r\n        {\r\n            name: 'Direct',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [320, 332, 301, 334, 390, 330, 320]\r\n        },\r\n        {\r\n            name: 'Search Engine',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n        }\r\n    ],\r\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\r\n};\r\n\r\nconst areaChart = {\r\n    grid: {\r\n        left: '0%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        top: '4%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n        type: 'line',\r\n        areaStyle: {}\r\n    }],\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    colors: getChartColorsArray('[\"--vz-success\"]'),\r\n    backgroundColor: [\"#fff\"],\r\n};\r\n\r\nconst stackedAreaChart = {\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n                backgroundColor: '#6a7985'\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine'],\r\n        textStyle: { //The style of the legend text\r\n            color: '#858d98',\r\n        },\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            saveAsImage: {}\r\n        }\r\n    },\r\n    grid: {\r\n        left: '0%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        containLabel: true\r\n    },\r\n    xAxis: [{\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n    }],\r\n    yAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\r\n    series: [{\r\n            name: 'Email',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            areaStyle: {},\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [120, 132, 101, 134, 90, 230, 210]\r\n        },\r\n        {\r\n            name: 'Union Ads',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            areaStyle: {},\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [220, 182, 191, 234, 290, 330, 310]\r\n        },\r\n        {\r\n            name: 'Video Ads',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            areaStyle: {},\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [150, 232, 201, 154, 190, 330, 410]\r\n        },\r\n        {\r\n            name: 'Direct',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            areaStyle: {},\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [320, 332, 301, 334, 390, 330, 320]\r\n        },\r\n        {\r\n            name: 'Search Engine',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            label: {\r\n                show: true,\r\n                position: 'top'\r\n            },\r\n            areaStyle: {},\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n        }\r\n    ]\r\n}\r\n\r\nconst stepLineChart = {\r\n    tooltip: {\r\n        trigger: 'axis'\r\n    },\r\n    legend: {\r\n        data: ['Step Start', 'Step Middle', 'Step End'],\r\n        textStyle: { //The style of the legend text\r\n            color: '#858d98',\r\n        },\r\n    },\r\n    grid: {\r\n        left: '0%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        containLabel: true\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            saveAsImage: {}\r\n        }\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\"]'),\r\n    series: [{\r\n            name: 'Step Start',\r\n            type: 'line',\r\n            step: 'start',\r\n            data: [120, 132, 101, 134, 90, 230, 210]\r\n        },\r\n        {\r\n            name: 'Step Middle',\r\n            type: 'line',\r\n            step: 'middle',\r\n            data: [220, 282, 201, 234, 290, 430, 410]\r\n        },\r\n        {\r\n            name: 'Step End',\r\n            type: 'line',\r\n            step: 'end',\r\n            data: [450, 432, 401, 454, 590, 530, 510]\r\n        }\r\n    ]\r\n};\r\n\r\nconst lineYCategoryChart = {\r\n    legend: {\r\n        data: ['Altitude (km) vs. temperature (°C)'],\r\n        textStyle: { //The style of the legend text\r\n            color: '#858d98',\r\n        },\r\n    },\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        formatter: 'Temperature : <br/>{b}km : {c}°C'\r\n    },\r\n    grid: {\r\n        left: '1%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'value',\r\n        axisLabel: {\r\n            formatter: '{value} °C'\r\n        },\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    yAxis: {\r\n        type: 'category',\r\n        axisLine: {\r\n            onZero: false,\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        axisLabel: {\r\n            formatter: '{value} km'\r\n        },\r\n        boundaryGap: false,\r\n        data: ['0', '10', '20', '30', '40', '50', '60', '70', '80'],\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    color: getChartColorsArray('[\"--vz-success\"]'),\r\n    series: [{\r\n        name: 'Altitude (km) vs. temperature (°C)',\r\n        type: 'line',\r\n        symbolSize: 10,\r\n        symbol: 'circle',\r\n        smooth: true,\r\n        lineStyle: {\r\n            width: 3,\r\n            shadowColor: 'rgba(0,0,0,0.3)',\r\n            shadowBlur: 10,\r\n            shadowOffsetY: 8\r\n        },\r\n        data: [15, -50, -56.5, -46.5, -22.1, -2.5, -27.7, -55.7, -76.5]\r\n    }]\r\n}\r\n\r\nconst basicBar = {\r\n    grid: {\r\n        left: '0%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        top: '3%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    color: getChartColorsArray('[\"--vz-success\"]'),\r\n    series: [{\r\n        data: [120, 200, 150, 80, 70, 110, 130],\r\n        type: 'bar',\r\n        showBackground: true,\r\n        backgroundStyle: {\r\n            color: 'rgba(180, 180, 180, 0.2)'\r\n        }\r\n    }]\r\n};\r\n\r\nconst barLabelChart = {\r\n\r\n}\r\n\r\nconst horizontalBarChart = {\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'shadow'\r\n        }\r\n    },\r\n    legend: {\r\n        textStyle: { //The style of the legend text\r\n            color: '#858d98',\r\n        },\r\n    },\r\n    grid: {\r\n        left: '0%',\r\n        right: '4%',\r\n        bottom: '0%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'value',\r\n        boundaryGap: [0, 0.01],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    yAxis: {\r\n        type: 'category',\r\n        data: ['Brazil', 'Indonesia', 'USA', 'India', 'China', 'World'],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]'),\r\n    series: [{\r\n            name: '2011',\r\n            type: 'bar',\r\n            data: [18203, 23489, 29034, 104970, 131744, 630230]\r\n        },\r\n        {\r\n            name: '2012',\r\n            type: 'bar',\r\n            data: [19325, 23438, 31000, 121594, 134141, 681807]\r\n        }\r\n    ]\r\n}\r\n\r\nconst stackedHorizontalBarChart = {\r\n    trigger: 'axis',\r\n    axisPointer: {\r\n        // Use axis to trigger tooltip\r\n        type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\r\n    },\r\n    legend: {\r\n        textStyle: { //The style of the legend text\r\n            color: '#858d98',\r\n        },\r\n    },\r\n    grid: {\r\n        left: '1%',\r\n        right: '3%',\r\n        bottom: '0%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\r\n    yAxis: {\r\n        type: 'category',\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    series: [{\r\n            name: 'Direct',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n                show: true\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [320, 302, 301, 334, 390, 330, 320]\r\n        },\r\n        {\r\n            name: 'Mail Ad',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n                show: true\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [120, 132, 101, 134, 90, 230, 210]\r\n        },\r\n        {\r\n            name: 'Affiliate Ad',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n                show: true\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [220, 182, 191, 234, 290, 330, 310]\r\n        },\r\n        {\r\n            name: 'Video Ad',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n                show: true\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [150, 212, 201, 154, 190, 330, 410]\r\n        },\r\n        {\r\n            name: 'Search Engine',\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: {\r\n                show: true\r\n            },\r\n            emphasis: {\r\n                focus: 'series'\r\n            },\r\n            data: [820, 832, 901, 934, 1290, 1330, 1320]\r\n        }\r\n    ]\r\n}\r\n\r\nconst pieChart = {\r\n    tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n    },\r\n    legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['Laptop', 'Tablet', 'Mobile', 'Others', 'Desktop'],\r\n        textStyle: {\r\n            color: '#999'\r\n        }\r\n    },\r\n    color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\r\n    series: [{\r\n        name: 'Total sales',\r\n        type: 'pie',\r\n        radius: '55%',\r\n        center: ['50%', '60%'],\r\n        data: [{\r\n                value: 488,\r\n                name: 'Laptop'\r\n            },\r\n            {\r\n                value: 310,\r\n                name: 'Tablet'\r\n            },\r\n            {\r\n                value: 234,\r\n                name: 'Mobile'\r\n            },\r\n            {\r\n                value: 170,\r\n                name: 'Others'\r\n            },\r\n            {\r\n                value: 175,\r\n                name: 'Desktop'\r\n            }\r\n        ]\r\n    }]\r\n};\r\n\r\nconst doughnutChart = {\r\n    tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n    },\r\n    legend: {\r\n        orient: 'vertical',\r\n        x: 'left',\r\n        data: ['Laptop', 'Tablet', 'Mobile', 'Others', 'Desktop'],\r\n        textStyle: {\r\n            color: '#999'\r\n        }\r\n    },\r\n    color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\r\n    series: [{\r\n        name: 'Total sales',\r\n        type: 'pie',\r\n        radius: ['50%', '70%'],\r\n        avoidLabelOverlap: false,\r\n        emphasis: {\r\n            label: {\r\n                show: true,\r\n                textStyle: {\r\n                    fontSize: '30',\r\n                    fontWeight: 'bold'\r\n                }\r\n            }\r\n        },\r\n        labelLine: {\r\n            normal: {\r\n                show: false\r\n            }\r\n        },\r\n        data: [{\r\n                value: 335,\r\n                name: 'Laptop'\r\n            },\r\n            {\r\n                value: 310,\r\n                name: 'Tablet'\r\n            },\r\n            {\r\n                value: 234,\r\n                name: 'Mobile'\r\n            },\r\n            {\r\n                value: 135,\r\n                name: 'Others'\r\n            },\r\n            {\r\n                value: 1548,\r\n                name: 'Desktop'\r\n            }\r\n        ]\r\n    }]\r\n};\r\n\r\nconst scatterChart = {\r\n    grid: {\r\n        left: '1%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        top: '2%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    yAxis: {\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    series: [{\r\n        symbolSize: 12,\r\n        data: [\r\n            [10.0, 8.04],\r\n            [8.07, 6.95],\r\n            [13.0, 7.58],\r\n            [9.05, 8.81],\r\n            [11.0, 8.33],\r\n            [14.0, 7.66],\r\n            [13.4, 6.81],\r\n            [10.0, 6.33],\r\n            [14.0, 8.96],\r\n            [12.5, 6.82],\r\n            [9.15, 7.2],\r\n            [11.5, 7.2],\r\n            [3.03, 4.23],\r\n            [12.2, 7.83],\r\n            [2.02, 4.47],\r\n            [1.05, 3.33],\r\n            [4.05, 4.96],\r\n            [6.03, 7.24],\r\n            [12.0, 6.26],\r\n            [12.0, 8.84],\r\n            [7.08, 5.82],\r\n            [5.02, 5.68]\r\n        ],\r\n        type: 'scatter'\r\n    }],\r\n}\r\n\r\n\r\n\r\nconst graphChart = {\r\n    tooltip: {},\r\n    animationDurationUpdate: 1500,\r\n    animationEasingUpdate: 'quinticInOut',\r\n    color: getChartColorsArray('[\"--vz-primary\"]'),\r\n    series: [{\r\n        type: 'graph',\r\n        layout: 'none',\r\n        symbolSize: 50,\r\n        roam: true,\r\n        label: {\r\n            show: true\r\n        },\r\n        edgeSymbol: ['circle', 'arrow'],\r\n        edgeSymbolSize: [4, 10],\r\n        edgeLabel: {\r\n            fontSize: 20\r\n        },\r\n        data: [{\r\n                name: 'Node 1',\r\n                x: 300,\r\n                y: 300\r\n            },\r\n            {\r\n                name: 'Node 2',\r\n                x: 800,\r\n                y: 300\r\n            },\r\n            {\r\n                name: 'Node 3',\r\n                x: 550,\r\n                y: 100\r\n            },\r\n            {\r\n                name: 'Node 4',\r\n                x: 550,\r\n                y: 500\r\n            }\r\n        ],\r\n        // links: [],\r\n        links: [{\r\n                source: 0,\r\n                target: 1,\r\n                symbolSize: [5, 20],\r\n                label: {\r\n                    show: true\r\n                },\r\n                lineStyle: {\r\n                    width: 5,\r\n                    curveness: 0.2\r\n                }\r\n            },\r\n            {\r\n                source: 'Node 2',\r\n                target: 'Node 1',\r\n                label: {\r\n                    show: true\r\n                },\r\n                lineStyle: {\r\n                    curveness: 0.2\r\n                }\r\n            },\r\n            {\r\n                source: 'Node 1',\r\n                target: 'Node 3'\r\n            },\r\n            {\r\n                source: 'Node 2',\r\n                target: 'Node 3'\r\n            },\r\n            {\r\n                source: 'Node 2',\r\n                target: 'Node 4'\r\n            },\r\n            {\r\n                source: 'Node 1',\r\n                target: 'Node 4'\r\n            }\r\n        ],\r\n        lineStyle: {\r\n            opacity: 0.9,\r\n            width: 2,\r\n            curveness: 0\r\n        }\r\n    }],\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n}\r\n\r\nconst treemapChart = {\r\n    color: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]'),\r\n    series: [{\r\n        type: 'treemap',\r\n        data: [{\r\n                name: 'nodeA',\r\n                value: 10,\r\n                children: [{\r\n                        name: 'nodeAa',\r\n                        value: 4\r\n                    },\r\n                    {\r\n                        name: 'nodeAb',\r\n                        value: 6\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: 'nodeB',\r\n                value: 20,\r\n                children: [{\r\n                    name: 'nodeBa',\r\n                    value: 20,\r\n                    children: [{\r\n                        name: 'nodeBa1',\r\n                        value: 20\r\n                    }]\r\n                }]\r\n            }\r\n        ]\r\n    }],\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n}\r\n\r\nconst sunburstChart = {\r\n    color: getChartColorsArray('[\"--vz-warning\", \"--vz-success\"]'),\r\n    series: {\r\n        type: 'sunburst',\r\n        // emphasis: {\r\n        //     focus: 'ancestor'\r\n        // },\r\n        data: [{\r\n                name: 'Grandpa',\r\n                children: [{\r\n                        name: 'Uncle Leo',\r\n                        value: 15,\r\n                        children: [{\r\n                                name: 'Cousin Jack',\r\n                                value: 2\r\n                            },\r\n                            {\r\n                                name: 'Cousin Mary',\r\n                                value: 5,\r\n                                children: [{\r\n                                    name: 'Jackson',\r\n                                    value: 2\r\n                                }]\r\n                            },\r\n                            {\r\n                                name: 'Cousin Ben',\r\n                                value: 4\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: 'Father',\r\n                        value: 10,\r\n                        children: [{\r\n                                name: 'Me',\r\n                                value: 5\r\n                            },\r\n                            {\r\n                                name: 'Brother Peter',\r\n                                value: 1\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: 'Nancy',\r\n                children: [{\r\n                    name: 'Uncle Nike',\r\n                    children: [{\r\n                            name: 'Cousin Betty',\r\n                            value: 1\r\n                        },\r\n                        {\r\n                            name: 'Cousin Jenny',\r\n                            value: 2\r\n                        }\r\n                    ]\r\n                }]\r\n            }\r\n        ],\r\n        radius: [0, '90%'],\r\n        label: {\r\n            rotate: 'radial'\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n}\r\n\r\nconst parallelChart = {\r\n    parallelAxis: [{\r\n            dim: 0,\r\n            name: 'Price'\r\n        },\r\n        {\r\n            dim: 1,\r\n            name: 'Net Weight'\r\n        },\r\n        {\r\n            dim: 2,\r\n            name: 'Amount'\r\n        },\r\n        {\r\n            dim: 3,\r\n            name: 'Score',\r\n            type: 'category',\r\n            data: ['Excellent', 'Good', 'OK', 'Bad']\r\n        }\r\n    ],\r\n    grid: {\r\n        left: '0%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        top: '2%',\r\n        containLabel: true\r\n    },\r\n    color: getChartColorsArray('[\"--vz-success\"]'),\r\n    series: {\r\n        type: 'parallel',\r\n        lineStyle: {\r\n            width: 4\r\n        },\r\n        data: [\r\n            [12.99, 100, 82, 'Good'],\r\n            [9.99, 80, 77, 'OK'],\r\n            [20, 120, 60, 'Excellent']\r\n        ]\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n}\r\n\r\nconst sankeyChart = {\r\n    color: getChartColorsArray('[\"--vz-info\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-primary\"]'),\r\n    series: {\r\n        type: 'sankey',\r\n        layout: 'none',\r\n        emphasis: {\r\n            focus: 'adjacency'\r\n        },\r\n        data: [{\r\n                name: 'a'\r\n            },\r\n            {\r\n                name: 'b'\r\n            },\r\n            {\r\n                name: 'a1'\r\n            },\r\n            {\r\n                name: 'a2'\r\n            },\r\n            {\r\n                name: 'b1'\r\n            },\r\n            {\r\n                name: 'c'\r\n            }\r\n        ],\r\n        links: [{\r\n                source: 'a',\r\n                target: 'a1',\r\n                value: 5\r\n            },\r\n            {\r\n                source: 'a',\r\n                target: 'a2',\r\n                value: 3\r\n            },\r\n            {\r\n                source: 'b',\r\n                target: 'b1',\r\n                value: 8\r\n            },\r\n            {\r\n                source: 'a',\r\n                target: 'b1',\r\n                value: 3\r\n            },\r\n            {\r\n                source: 'b1',\r\n                target: 'a1',\r\n                value: 1\r\n            },\r\n            {\r\n                source: 'b1',\r\n                target: 'c',\r\n                value: 2\r\n            }\r\n        ]\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n}\r\n\r\nconst funnelChart = {\r\n    tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c}%'\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            dataView: {\r\n                readOnly: false\r\n            },\r\n            restore: {},\r\n            saveAsImage: {}\r\n        }\r\n    },\r\n    legend: {\r\n        data: ['Show', 'Click', 'Visit', 'Inquiry', 'Order'],\r\n        textStyle: { //The style of the legend text\r\n            color: '#858d98',\r\n        },\r\n    },\r\n    color: getChartColorsArray('[\"--vz-info\", \"--vz-success\",\"--vz-warning\", \"--vz-danger\", \"--vz-primary\"]'),\r\n    series: [{\r\n        name: 'Funnel',\r\n        type: 'funnel',\r\n        left: '10%',\r\n        top: 60,\r\n        bottom: 60,\r\n        width: '80%',\r\n        min: 0,\r\n        max: 100,\r\n        minSize: '0%',\r\n        maxSize: '100%',\r\n        sort: 'descending',\r\n        gap: 2,\r\n        label: {\r\n            show: true,\r\n            position: 'inside'\r\n        },\r\n        labelLine: {\r\n            length: 10,\r\n            lineStyle: {\r\n                width: 1,\r\n                type: 'solid'\r\n            }\r\n        },\r\n        itemStyle: {\r\n            borderColor: '#fff',\r\n            borderWidth: 1\r\n        },\r\n        emphasis: {\r\n            label: {\r\n                fontSize: 20\r\n            }\r\n        },\r\n        data: [{\r\n                value: 60,\r\n                name: 'Visit'\r\n            },\r\n            {\r\n                value: 40,\r\n                name: 'Inquiry'\r\n            },\r\n            {\r\n                value: 20,\r\n                name: 'Order'\r\n            },\r\n            {\r\n                value: 80,\r\n                name: 'Click'\r\n            },\r\n            {\r\n                value: 100,\r\n                name: 'Show'\r\n            }\r\n        ]\r\n    }],\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n}\r\n\r\nconst guageChart = {\r\n    tooltip: {\r\n        formatter: \"{a} <br/>{b} : {c}%\"\r\n    },\r\n    toolbox: {\r\n        feature: {\r\n            restore: {\r\n                title: \"Refresh\"\r\n            },\r\n            saveAsImage: {\r\n                title: \"Download Image\"\r\n            }\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Business indicator',\r\n        type: 'gauge',\r\n        detail: {\r\n            formatter: '{value}%'\r\n        },\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: [\r\n                    [0.2, '#34c38f'],\r\n                    [0.8, '#556ee6'],\r\n                    [1, '#f46a6a']\r\n                ],\r\n                width: 20\r\n            }\r\n        },\r\n        data: [{\r\n            value: 50,\r\n            name: 'Completion rate'\r\n        }]\r\n    }]\r\n};\r\n\r\nconst polarChart = {\r\n    polar: {\r\n        legend: {\r\n            data: [\"line\"],\r\n            textStyle: {\r\n                color: '#999'\r\n            }\r\n        },\r\n        polar: {\r\n            center: [\"50%\", \"54%\"]\r\n        },\r\n        color: getChartColorsArray('[\"--vz-success\"]'),\r\n        tooltip: {\r\n            trigger: \"axis\",\r\n            axisPointer: {\r\n                type: \"cross\"\r\n            }\r\n        },\r\n        angleAxis: {\r\n            type: \"value\",\r\n            startAngle: 0\r\n        },\r\n        radiusAxis: {\r\n            min: 0\r\n        },\r\n        series: [{\r\n            coordinateSystem: \"polar\",\r\n            name: \"line\",\r\n            type: \"line\",\r\n            showSymbol: false,\r\n            data: data1\r\n        }],\r\n        animationDuration: 2000\r\n    }\r\n};\r\n\r\nconst mixedBarChart = {\r\n    // Setup grid\r\n    grid: {\r\n        zlevel: 0,\r\n        x: 80,\r\n        x2: 50,\r\n        y: 30,\r\n        y2: 30,\r\n        borderWidth: 0,\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: 'rgba(0,0,0,0)',\r\n    },\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'cross',\r\n            crossStyle: {\r\n                color: '#999'\r\n            }\r\n        }\r\n    },\r\n    toolbox: {\r\n        orient: 'center',\r\n        left: 0,\r\n        top: 20,\r\n        feature: {\r\n            dataView: {\r\n                readOnly: false,\r\n                title: \"Data View\"\r\n            },\r\n            magicType: {\r\n                type: ['line', 'bar'],\r\n                title: {\r\n                    line: \"For line chart\",\r\n                    bar: \"For bar chart\"\r\n                }\r\n            },\r\n            restore: {\r\n                title: \"restore\"\r\n            },\r\n            saveAsImage: {\r\n                title: \"Download Image\"\r\n            }\r\n        }\r\n    },\r\n    color: getChartColorsArray('[\"--vz-success\",\"--vz-primary\",\"--vz-danger\"]'),\r\n    legend: {\r\n        data: ['Evaporation', 'Precipitation', 'Average temperature'],\r\n        textStyle: {\r\n            color: '#8791af'\r\n        }\r\n    },\r\n    xAxis: [{\r\n        type: 'category',\r\n        data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n        axisPointer: {\r\n            type: 'shadow'\r\n        },\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#8791af'\r\n            },\r\n        },\r\n    }],\r\n    yAxis: [{\r\n            type: 'value',\r\n            name: 'Water volume',\r\n            min: 0,\r\n            max: 250,\r\n            interval: 50,\r\n            axisLine: {\r\n                lineStyle: {\r\n                    color: '#8791af'\r\n                },\r\n            },\r\n            splitLine: {\r\n                lineStyle: {\r\n                    color: \"rgba(166, 176, 207, 0.1)\"\r\n                }\r\n            },\r\n            axisLabel: {\r\n                formatter: '{value} ml'\r\n            }\r\n        },\r\n        {\r\n            type: 'value',\r\n            name: 'Temperature',\r\n            min: 0,\r\n            max: 25,\r\n            interval: 5,\r\n            axisLine: {\r\n                lineStyle: {\r\n                    color: '#8791af'\r\n                },\r\n            },\r\n            splitLine: {\r\n                lineStyle: {\r\n                    color: \"rgba(166, 176, 207, 0.1)\"\r\n                }\r\n            },\r\n            axisLabel: {\r\n                formatter: '{value} Ã‚Â°C'\r\n            }\r\n        }\r\n    ],\r\n    series: [{\r\n            name: 'Evaporation',\r\n            type: 'bar',\r\n            data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2]\r\n        },\r\n        {\r\n            name: 'Precipitation',\r\n            type: 'bar',\r\n            data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2]\r\n        },\r\n        {\r\n            name: 'Average Temperature',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4]\r\n        }\r\n    ]\r\n};\r\n\r\nvar data = [\r\n    [\r\n        [28604, 77, 17096869, 'Australia', 1990],\r\n        [31163, 77.4, 27662440, 'Canada', 1990],\r\n        [1516, 68, 1154605773, 'China', 1990],\r\n        [13670, 74.7, 10582082, 'Cuba', 1990],\r\n        [28599, 75, 4986705, 'Finland', 1990],\r\n        [29476, 77.1, 56943299, 'France', 1990],\r\n        [31476, 75.4, 78958237, 'Germany', 1990],\r\n        [28666, 78.1, 254830, 'Iceland', 1990],\r\n        [1777, 57.7, 870601776, 'India', 1990],\r\n        [29550, 79.1, 122249285, 'Japan', 1990],\r\n        [2076, 67.9, 20194354, 'North Korea', 1990],\r\n        [12087, 72, 42972254, 'South Korea', 1990],\r\n        [24021, 75.4, 3397534, 'New Zealand', 1990],\r\n        [43296, 76.8, 4240375, 'Norway', 1990],\r\n        [10088, 70.8, 38195258, 'Poland', 1990],\r\n        [19349, 69.6, 147568552, 'Russia', 1990],\r\n        [10670, 67.3, 53994605, 'Turkey', 1990],\r\n        [26424, 75.7, 57110117, 'United Kingdom', 1990],\r\n        [37062, 75.4, 252847810, 'United States', 1990]\r\n    ],\r\n    [\r\n        [44056, 81.8, 23968973, 'Australia', 2015],\r\n        [43294, 81.7, 35939927, 'Canada', 2015],\r\n        [13334, 76.9, 1376048943, 'China', 2015],\r\n        [21291, 78.5, 11389562, 'Cuba', 2015],\r\n        [38923, 80.8, 5503457, 'Finland', 2015],\r\n        [37599, 81.9, 64395345, 'France', 2015],\r\n        [44053, 81.1, 80688545, 'Germany', 2015],\r\n        [42182, 82.8, 329425, 'Iceland', 2015],\r\n        [5903, 66.8, 1311050527, 'India', 2015],\r\n        [36162, 83.5, 126573481, 'Japan', 2015],\r\n        [1390, 71.4, 25155317, 'North Korea', 2015],\r\n        [34644, 80.7, 50293439, 'South Korea', 2015],\r\n        [34186, 80.6, 4528526, 'New Zealand', 2015],\r\n        [64304, 81.6, 5210967, 'Norway', 2015],\r\n        [24787, 77.3, 38611794, 'Poland', 2015],\r\n        [23038, 73.13, 143456918, 'Russia', 2015],\r\n        [19360, 76.5, 78665830, 'Turkey', 2015],\r\n        [38225, 81.4, 64715810, 'United Kingdom', 2015],\r\n        [53354, 79.1, 321773631, 'United States', 2015]\r\n    ]\r\n];\r\nconst bubbleChart = {\r\n    grid: {\r\n        zlevel: 0,\r\n        x: 50,\r\n        x2: 50,\r\n        y: 30,\r\n        y2: 30,\r\n        borderWidth: 0,\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        borderColor: 'rgba(0,0,0,0)',\r\n    },\r\n    legend: {\r\n        right: 10,\r\n        data: ['2018', '2019'],\r\n        textStyle: {\r\n            color: '#999'\r\n        }\r\n    },\r\n    xAxis: {\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#8791af'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                type: 'dashed',\r\n                color: \"rgba(166, 176, 207, 0.1)\"\r\n            }\r\n        },\r\n    },\r\n    yAxis: {\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#8791af'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                type: 'dashed',\r\n                color: \"rgba(166, 176, 207, 0.1)\"\r\n            }\r\n        },\r\n        scale: true\r\n    },\r\n    series: [{\r\n            name: '2018',\r\n            data: data[0],\r\n            type: 'scatter',\r\n            symbolSize(data) {\r\n                return Math.sqrt(data[2]) / 5e2\r\n            },\r\n\r\n            emphasis: {\r\n                label: {\r\n                    show: true,\r\n                    formatter({\r\n                        data\r\n                    }) {\r\n                        return data[3]\r\n                    },\r\n                    position: 'top'\r\n                }\r\n            },\r\n            itemStyle: {\r\n\r\n                shadowBlur: 10,\r\n                shadowColor: 'rgba(120, 36, 50, 0.5)',\r\n                shadowOffsetY: 5,\r\n                color: new graphic.RadialGradient(0.4, 0.3, 1, [{\r\n                        offset: 0,\r\n                        color: getChartColorsArray('[\"--vz-primary\"]')\r\n                    },\r\n                    {\r\n                        offset: 1,\r\n                        color: getChartColorsArray('[\"--vz-primary\"]')\r\n                    }\r\n                ])\r\n\r\n            }\r\n        },\r\n        {\r\n            name: '2019',\r\n            data: data[1],\r\n            type: 'scatter',\r\n            symbolSize(data) {\r\n                return Math.sqrt(data[2]) / 5e2\r\n            },\r\n\r\n            emphasis: {\r\n                label: {\r\n                    show: true,\r\n                    formatter({\r\n                        data\r\n                    }) {\r\n                        return data[3]\r\n                    },\r\n                    position: 'top'\r\n                }\r\n            },\r\n            itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowColor: 'rgba(52, 195, 143, 0.5)',\r\n                shadowOffsetY: 5,\r\n                color: new graphic.RadialGradient(0.4, 0.3, 1, [{\r\n                        offset: 0,\r\n                        color: getChartColorsArray('[\"--vz-success\"]')\r\n                    },\r\n                    {\r\n                        offset: 1,\r\n                        color: getChartColorsArray('[\"--vz-success\"]')\r\n                    }\r\n                ])\r\n\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst candlestickChart = {\r\n    grid: {\r\n        left: '1%',\r\n        right: '0%',\r\n        bottom: '0%',\r\n        top: '2%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        data: ['2017-10-24', '2017-10-25', '2017-10-26', '2017-10-27'],\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    yAxis: {\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#858d98'\r\n            },\r\n        },\r\n        splitLine: {\r\n            lineStyle: {\r\n                color: \"rgba(133, 141, 152, 0.1)\"\r\n            }\r\n        }\r\n    },\r\n    textStyle: {\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    series: [{\r\n        type: 'candlestick',\r\n        data: [\r\n            [20, 34, 10, 38],\r\n            [40, 35, 30, 50],\r\n            [31, 38, 33, 44],\r\n            [38, 15, 5, 42]\r\n        ],\r\n        itemStyle: {\r\n            normal: {\r\n                color: \"#556ee6\",\r\n                color0: \"#34c38f\",\r\n                borderColor: \"#556ee6\",\r\n                borderColor0: \"#34c38f\"\r\n            }\r\n        }\r\n    }]\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    lineChart,\r\n    polarChart,\r\n    areaChart,\r\n    mixedBarChart,\r\n    guageChart,\r\n    stackedLineChart,\r\n    pieChart,\r\n    stepLineChart,\r\n    bubbleChart,\r\n    doughnutChart,\r\n    lineYCategoryChart,\r\n    stackedAreaChart,\r\n    basicBar,\r\n    barLabelChart,\r\n    horizontalBarChart,\r\n    stackedHorizontalBarChart,\r\n    scatterChart,\r\n    graphChart,\r\n    treemapChart,\r\n    sunburstChart,\r\n    parallelChart,\r\n    sankeyChart,\r\n    candlestickChart,\r\n    funnelChart\r\n};"],"mappings":";AAAA,SACIA,OAAO,QACJ,SAAS;AAEhB,SAASC,mBAAmBA,CAACC,MAAM,EAAC;EAChCA,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC;EAC3B,OAAOA,MAAM,CAACG,GAAG,CAAC,UAAUC,KAAK,EAAE;IACjC,IAAIC,QAAQ,GAAGD,KAAK,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;IACrC,IAAID,QAAQ,CAACE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAChC,IAAIC,KAAK,GAAGC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAACP,QAAQ,CAAC;MAC7E,IAAIG,KAAK,EAAE;QACXA,KAAK,GAAGA,KAAK,CAACF,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;QAC9B,OAAOE,KAAK;MACZ,CAAC,MACI,OAAOH,QAAQ;IACxB,CAAC,MAAM;MACH,IAAIQ,GAAG,GAAGT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC;MAC1B,IAAID,GAAG,CAACE,MAAM,IAAI,CAAC,EAAE;QACjB,IAAIC,SAAS,GAAGP,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnFG,SAAS,GAAG,OAAO,GAAGA,SAAS,GAAG,GAAG,GAAGH,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;QACpD,OAAOG,SAAS;MACpB,CAAC,MAAM;QACH,OAAOX,QAAQ;MACnB;IACJ;EACJ,CAAC,CAAC;AACJ;AACF,IAAIY,KAAK,GAAG,EAAE;AACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,GAAG,EAAEA,CAAC,EAAE,EAAE;EAC3B,IAAIC,CAAC,GAAID,CAAC,GAAG,GAAG,GAAIE,IAAI,CAACC,EAAE;EAC3B,IAAIC,CAAC,GAAGF,IAAI,CAACG,GAAG,CAAC,CAAC,GAAGJ,CAAC,CAAC,GAAGC,IAAI,CAACI,GAAG,CAAC,CAAC,GAAGL,CAAC,CAAC;EACzCF,KAAK,CAACQ,IAAI,CAAC,CAACH,CAAC,EAAEJ,CAAC,CAAC,CAAC;AACtB;AAEA,MAAMQ,SAAS,GAAG;EACdC,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,GAAG,EAAE,IAAI;IACTC,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACHC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvDC,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHJ,IAAI,EAAE,OAAO;IACbE,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDgC,MAAM,EAAE,CAAC;IACLL,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACzCD,IAAI,EAAE;EACV,CAAC,CAAC;EACFO,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDlC,KAAK,EAAET,mBAAmB,CAAC,kBAAkB;AAEjD,CAAC;AAED,MAAM4C,gBAAgB,GAAG;EACrB;EACAC,OAAO,EAAE;IACLC,OAAO,EAAE;EACb,CAAC;EACDC,MAAM,EAAE;IACJX,IAAI,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,eAAe,CAAC;IACpEM,SAAS,EAAE;MAAE;MACTjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDmB,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZE,YAAY,EAAE;EAClB,CAAC;EACDe,OAAO,EAAE;IACLC,OAAO,EAAE;MACLC,WAAW,EAAE,CAAC;IAClB;EACJ,CAAC;EACDR,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDT,KAAK,EAAE;IACHC,IAAI,EAAE,UAAU;IAChBgB,WAAW,EAAE,KAAK;IAClBf,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvDC,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHJ,IAAI,EAAE,OAAO;IACbE,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDgC,MAAM,EAAE,CAAC;IACDW,IAAI,EAAE,OAAO;IACbjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdjB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;EAC3C,CAAC,EACD;IACIgB,IAAI,EAAE,WAAW;IACjBjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdjB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,WAAW;IACjBjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdjB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,QAAQ;IACdjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdjB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,eAAe;IACrBjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdjB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;EAC/C,CAAC,CACJ;EACDnC,MAAM,EAAED,mBAAmB,CAAC,8EAA8E;AAC9G,CAAC;AAED,MAAMsD,SAAS,GAAG;EACd1B,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,GAAG,EAAE,IAAI;IACTC,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACHC,IAAI,EAAE,UAAU;IAChBgB,WAAW,EAAE,KAAK;IAClBf,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvDC,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHJ,IAAI,EAAE,OAAO;IACbE,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDgC,MAAM,EAAE,CAAC;IACLL,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC5CD,IAAI,EAAE,MAAM;IACZoB,SAAS,EAAE,CAAC;EAChB,CAAC,CAAC;EACFb,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACD1C,MAAM,EAAED,mBAAmB,CAAC,kBAAkB,CAAC;EAC/CwD,eAAe,EAAE,CAAC,MAAM;AAC5B,CAAC;AAED,MAAMC,gBAAgB,GAAG;EACrBZ,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfY,WAAW,EAAE;MACTvB,IAAI,EAAE,OAAO;MACbwB,KAAK,EAAE;QACHH,eAAe,EAAE;MACrB;IACJ;EACJ,CAAC;EACDT,MAAM,EAAE;IACJX,IAAI,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,eAAe,CAAC;IACpEM,SAAS,EAAE;MAAE;MACTjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDuC,OAAO,EAAE;IACLC,OAAO,EAAE;MACLC,WAAW,EAAE,CAAC;IAClB;EACJ,CAAC;EACDtB,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZE,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE,CAAC;IACJC,IAAI,EAAE,UAAU;IAChBgB,WAAW,EAAE,KAAK;IAClBf,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvDC,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC,CAAC;EACF8B,KAAK,EAAE;IACHJ,IAAI,EAAE,OAAO;IACbE,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDiC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDlC,KAAK,EAAET,mBAAmB,CAAC,8EAA8E,CAAC;EAC1GyC,MAAM,EAAE,CAAC;IACDW,IAAI,EAAE,OAAO;IACbjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdE,SAAS,EAAE,CAAC,CAAC;IACbK,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;EAC3C,CAAC,EACD;IACIgB,IAAI,EAAE,WAAW;IACjBjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdE,SAAS,EAAE,CAAC,CAAC;IACbK,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,WAAW;IACjBjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdE,SAAS,EAAE,CAAC,CAAC;IACbK,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,QAAQ;IACdjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdE,SAAS,EAAE,CAAC,CAAC;IACbK,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,eAAe;IACrBjB,IAAI,EAAE,MAAM;IACZkB,KAAK,EAAE,OAAO;IACdM,KAAK,EAAE;MACHG,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;IACd,CAAC;IACDR,SAAS,EAAE,CAAC,CAAC;IACbK,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;EAC/C,CAAC;AAET,CAAC;AAED,MAAM4B,aAAa,GAAG;EAClBnB,OAAO,EAAE;IACLC,OAAO,EAAE;EACb,CAAC;EACDC,MAAM,EAAE;IACJX,IAAI,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,UAAU,CAAC;IAC/CM,SAAS,EAAE;MAAE;MACTjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDmB,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZE,YAAY,EAAE;EAClB,CAAC;EACDe,OAAO,EAAE;IACLC,OAAO,EAAE;MACLC,WAAW,EAAE,CAAC;IAClB;EACJ,CAAC;EACDhB,KAAK,EAAE;IACHC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvDC,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHJ,IAAI,EAAE,OAAO;IACbE,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDiC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDlC,KAAK,EAAET,mBAAmB,CAAC,kDAAkD,CAAC;EAC9EyC,MAAM,EAAE,CAAC;IACDW,IAAI,EAAE,YAAY;IAClBjB,IAAI,EAAE,MAAM;IACZ8B,IAAI,EAAE,OAAO;IACb7B,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;EAC3C,CAAC,EACD;IACIgB,IAAI,EAAE,aAAa;IACnBjB,IAAI,EAAE,MAAM;IACZ8B,IAAI,EAAE,QAAQ;IACd7B,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,UAAU;IAChBjB,IAAI,EAAE,MAAM;IACZ8B,IAAI,EAAE,KAAK;IACX7B,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC;AAET,CAAC;AAED,MAAM8B,kBAAkB,GAAG;EACvBnB,MAAM,EAAE;IACJX,IAAI,EAAE,CAAC,oCAAoC,CAAC;IAC5CM,SAAS,EAAE;MAAE;MACTjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDoC,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfqB,SAAS,EAAE;EACf,CAAC;EACDvC,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZE,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACHC,IAAI,EAAE,OAAO;IACbiC,SAAS,EAAE;MACPD,SAAS,EAAE;IACf,CAAC;IACD9B,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHJ,IAAI,EAAE,UAAU;IAChBE,QAAQ,EAAE;MACNgC,MAAM,EAAE,KAAK;MACb/B,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD2D,SAAS,EAAE;MACPD,SAAS,EAAE;IACf,CAAC;IACDhB,WAAW,EAAE,KAAK;IAClBf,IAAI,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC3DI,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDiC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDlC,KAAK,EAAET,mBAAmB,CAAC,kBAAkB,CAAC;EAC9CyC,MAAM,EAAE,CAAC;IACLW,IAAI,EAAE,oCAAoC;IAC1CjB,IAAI,EAAE,MAAM;IACZmC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,IAAI;IACZlC,SAAS,EAAE;MACPmC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,iBAAiB;MAC9BC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE;IACnB,CAAC;IACDxC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI;EAClE,CAAC;AACL,CAAC;AAED,MAAMyC,QAAQ,GAAG;EACbjD,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,GAAG,EAAE,IAAI;IACTC,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACHC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvDC,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHJ,IAAI,EAAE,OAAO;IACbE,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDiC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDlC,KAAK,EAAET,mBAAmB,CAAC,kBAAkB,CAAC;EAC9CyC,MAAM,EAAE,CAAC;IACLL,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IACvCD,IAAI,EAAE,KAAK;IACX2C,cAAc,EAAE,IAAI;IACpBC,eAAe,EAAE;MACbtE,KAAK,EAAE;IACX;EACJ,CAAC;AACL,CAAC;AAED,MAAMuE,aAAa,GAAG,CAEtB,CAAC;AAED,MAAMC,kBAAkB,GAAG;EACvBpC,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfY,WAAW,EAAE;MACTvB,IAAI,EAAE;IACV;EACJ,CAAC;EACDY,MAAM,EAAE;IACJL,SAAS,EAAE;MAAE;MACTjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDmB,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZE,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACHC,IAAI,EAAE,OAAO;IACbgB,WAAW,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IACtBd,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHJ,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;IAC/DC,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDiC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDlC,KAAK,EAAET,mBAAmB,CAAC,kCAAkC,CAAC;EAC9DyC,MAAM,EAAE,CAAC;IACDW,IAAI,EAAE,MAAM;IACZjB,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;EACtD,CAAC,EACD;IACIgB,IAAI,EAAE,MAAM;IACZjB,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;EACtD,CAAC;AAET,CAAC;AAED,MAAM8C,yBAAyB,GAAG;EAC9BpC,OAAO,EAAE,MAAM;EACfY,WAAW,EAAE;IACT;IACAvB,IAAI,EAAE,QAAQ,CAAC;EACnB,CAAC;EACDY,MAAM,EAAE;IACJL,SAAS,EAAE;MAAE;MACTjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDmB,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZE,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACHC,IAAI,EAAE,OAAO;IACbE,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDA,KAAK,EAAET,mBAAmB,CAAC,8EAA8E,CAAC;EAC1GuC,KAAK,EAAE;IACHJ,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvDC,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDiC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDF,MAAM,EAAE,CAAC;IACDW,IAAI,EAAE,QAAQ;IACdjB,IAAI,EAAE,KAAK;IACXkB,KAAK,EAAE,OAAO;IACdM,KAAK,EAAE;MACHG,IAAI,EAAE;IACV,CAAC;IACDF,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,SAAS;IACfjB,IAAI,EAAE,KAAK;IACXkB,KAAK,EAAE,OAAO;IACdM,KAAK,EAAE;MACHG,IAAI,EAAE;IACV,CAAC;IACDF,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;EAC3C,CAAC,EACD;IACIgB,IAAI,EAAE,cAAc;IACpBjB,IAAI,EAAE,KAAK;IACXkB,KAAK,EAAE,OAAO;IACdM,KAAK,EAAE;MACHG,IAAI,EAAE;IACV,CAAC;IACDF,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,UAAU;IAChBjB,IAAI,EAAE,KAAK;IACXkB,KAAK,EAAE,OAAO;IACdM,KAAK,EAAE;MACHG,IAAI,EAAE;IACV,CAAC;IACDF,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAC5C,CAAC,EACD;IACIgB,IAAI,EAAE,eAAe;IACrBjB,IAAI,EAAE,KAAK;IACXkB,KAAK,EAAE,OAAO;IACdM,KAAK,EAAE;MACHG,IAAI,EAAE;IACV,CAAC;IACDF,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;EAC/C,CAAC;AAET,CAAC;AAED,MAAM+C,QAAQ,GAAG;EACbtC,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfqB,SAAS,EAAE;EACf,CAAC;EACDpB,MAAM,EAAE;IACJqC,MAAM,EAAE,UAAU;IAClBvD,IAAI,EAAE,MAAM;IACZO,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;IACzDM,SAAS,EAAE;MACPjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDA,KAAK,EAAET,mBAAmB,CAAC,8EAA8E,CAAC;EAC1GyC,MAAM,EAAE,CAAC;IACLW,IAAI,EAAE,aAAa;IACnBjB,IAAI,EAAE,KAAK;IACXkD,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;IACtBlD,IAAI,EAAE,CAAC;MACC/B,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC;EAET,CAAC;AACL,CAAC;AAED,MAAMmC,aAAa,GAAG;EAClB1C,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfqB,SAAS,EAAE;EACf,CAAC;EACDpB,MAAM,EAAE;IACJqC,MAAM,EAAE,UAAU;IAClBI,CAAC,EAAE,MAAM;IACTpD,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;IACzDM,SAAS,EAAE;MACPjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDA,KAAK,EAAET,mBAAmB,CAAC,8EAA8E,CAAC;EAC1GyC,MAAM,EAAE,CAAC;IACLW,IAAI,EAAE,aAAa;IACnBjB,IAAI,EAAE,KAAK;IACXkD,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;IACtBI,iBAAiB,EAAE,KAAK;IACxB7B,QAAQ,EAAE;MACND,KAAK,EAAE;QACHG,IAAI,EAAE,IAAI;QACVpB,SAAS,EAAE;UACPgD,QAAQ,EAAE,IAAI;UACdC,UAAU,EAAE;QAChB;MACJ;IACJ,CAAC;IACDC,SAAS,EAAE;MACPC,MAAM,EAAE;QACJ/B,IAAI,EAAE;MACV;IACJ,CAAC;IACD1B,IAAI,EAAE,CAAC;MACC/B,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,IAAI;MACX+C,IAAI,EAAE;IACV,CAAC;EAET,CAAC;AACL,CAAC;AAED,MAAM0C,YAAY,GAAG;EACjBlE,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,GAAG,EAAE,IAAI;IACTC,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACHG,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHF,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDiC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDF,MAAM,EAAE,CAAC;IACL6B,UAAU,EAAE,EAAE;IACdlC,IAAI,EAAE,CACF,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,GAAG,CAAC,EACX,CAAC,IAAI,EAAE,GAAG,CAAC,EACX,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,CACf;IACDD,IAAI,EAAE;EACV,CAAC;AACL,CAAC;AAID,MAAM4D,UAAU,GAAG;EACflD,OAAO,EAAE,CAAC,CAAC;EACXmD,uBAAuB,EAAE,IAAI;EAC7BC,qBAAqB,EAAE,cAAc;EACrCxF,KAAK,EAAET,mBAAmB,CAAC,kBAAkB,CAAC;EAC9CyC,MAAM,EAAE,CAAC;IACLN,IAAI,EAAE,OAAO;IACb+D,MAAM,EAAE,MAAM;IACd5B,UAAU,EAAE,EAAE;IACd6B,IAAI,EAAE,IAAI;IACVxC,KAAK,EAAE;MACHG,IAAI,EAAE;IACV,CAAC;IACDsC,UAAU,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;IAC/BC,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IACvBC,SAAS,EAAE;MACPZ,QAAQ,EAAE;IACd,CAAC;IACDtD,IAAI,EAAE,CAAC;MACCgB,IAAI,EAAE,QAAQ;MACdoC,CAAC,EAAE,GAAG;MACNe,CAAC,EAAE;IACP,CAAC,EACD;MACInD,IAAI,EAAE,QAAQ;MACdoC,CAAC,EAAE,GAAG;MACNe,CAAC,EAAE;IACP,CAAC,EACD;MACInD,IAAI,EAAE,QAAQ;MACdoC,CAAC,EAAE,GAAG;MACNe,CAAC,EAAE;IACP,CAAC,EACD;MACInD,IAAI,EAAE,QAAQ;MACdoC,CAAC,EAAE,GAAG;MACNe,CAAC,EAAE;IACP,CAAC,CACJ;IACD;IACAC,KAAK,EAAE,CAAC;MACAC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,CAAC;MACTpC,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MACnBX,KAAK,EAAE;QACHG,IAAI,EAAE;MACV,CAAC;MACDxB,SAAS,EAAE;QACPmC,KAAK,EAAE,CAAC;QACRkC,SAAS,EAAE;MACf;IACJ,CAAC,EACD;MACIF,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE,QAAQ;MAChB/C,KAAK,EAAE;QACHG,IAAI,EAAE;MACV,CAAC;MACDxB,SAAS,EAAE;QACPqE,SAAS,EAAE;MACf;IACJ,CAAC,EACD;MACIF,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE;IACZ,CAAC,EACD;MACID,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE;IACZ,CAAC,EACD;MACID,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE;IACZ,CAAC,EACD;MACID,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE;IACZ,CAAC,CACJ;IACDpE,SAAS,EAAE;MACPsE,OAAO,EAAE,GAAG;MACZnC,KAAK,EAAE,CAAC;MACRkC,SAAS,EAAE;IACf;EACJ,CAAC,CAAC;EACFjE,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB;AACJ,CAAC;AAED,MAAMkE,YAAY,GAAG;EACjBpG,KAAK,EAAET,mBAAmB,CAAC,kCAAkC,CAAC;EAC9DyC,MAAM,EAAE,CAAC;IACLN,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,CAAC;MACCgB,IAAI,EAAE,OAAO;MACb/C,KAAK,EAAE,EAAE;MACTyG,QAAQ,EAAE,CAAC;QACH1D,IAAI,EAAE,QAAQ;QACd/C,KAAK,EAAE;MACX,CAAC,EACD;QACI+C,IAAI,EAAE,QAAQ;QACd/C,KAAK,EAAE;MACX,CAAC;IAET,CAAC,EACD;MACI+C,IAAI,EAAE,OAAO;MACb/C,KAAK,EAAE,EAAE;MACTyG,QAAQ,EAAE,CAAC;QACP1D,IAAI,EAAE,QAAQ;QACd/C,KAAK,EAAE,EAAE;QACTyG,QAAQ,EAAE,CAAC;UACP1D,IAAI,EAAE,SAAS;UACf/C,KAAK,EAAE;QACX,CAAC;MACL,CAAC;IACL,CAAC;EAET,CAAC,CAAC;EACFqC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB;AACJ,CAAC;AAED,MAAMoE,aAAa,GAAG;EAClBtG,KAAK,EAAET,mBAAmB,CAAC,kCAAkC,CAAC;EAC9DyC,MAAM,EAAE;IACJN,IAAI,EAAE,UAAU;IAChB;IACA;IACA;IACAC,IAAI,EAAE,CAAC;MACCgB,IAAI,EAAE,SAAS;MACf0D,QAAQ,EAAE,CAAC;QACH1D,IAAI,EAAE,WAAW;QACjB/C,KAAK,EAAE,EAAE;QACTyG,QAAQ,EAAE,CAAC;UACH1D,IAAI,EAAE,aAAa;UACnB/C,KAAK,EAAE;QACX,CAAC,EACD;UACI+C,IAAI,EAAE,aAAa;UACnB/C,KAAK,EAAE,CAAC;UACRyG,QAAQ,EAAE,CAAC;YACP1D,IAAI,EAAE,SAAS;YACf/C,KAAK,EAAE;UACX,CAAC;QACL,CAAC,EACD;UACI+C,IAAI,EAAE,YAAY;UAClB/C,KAAK,EAAE;QACX,CAAC;MAET,CAAC,EACD;QACI+C,IAAI,EAAE,QAAQ;QACd/C,KAAK,EAAE,EAAE;QACTyG,QAAQ,EAAE,CAAC;UACH1D,IAAI,EAAE,IAAI;UACV/C,KAAK,EAAE;QACX,CAAC,EACD;UACI+C,IAAI,EAAE,eAAe;UACrB/C,KAAK,EAAE;QACX,CAAC;MAET,CAAC;IAET,CAAC,EACD;MACI+C,IAAI,EAAE,OAAO;MACb0D,QAAQ,EAAE,CAAC;QACP1D,IAAI,EAAE,YAAY;QAClB0D,QAAQ,EAAE,CAAC;UACH1D,IAAI,EAAE,cAAc;UACpB/C,KAAK,EAAE;QACX,CAAC,EACD;UACI+C,IAAI,EAAE,cAAc;UACpB/C,KAAK,EAAE;QACX,CAAC;MAET,CAAC;IACL,CAAC,CACJ;IACDgF,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC;IAClB1B,KAAK,EAAE;MACHqD,MAAM,EAAE;IACZ;EACJ,CAAC;EACDtE,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB;AACJ,CAAC;AAED,MAAMsE,aAAa,GAAG;EAClBC,YAAY,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACN/D,IAAI,EAAE;EACV,CAAC,EACD;IACI+D,GAAG,EAAE,CAAC;IACN/D,IAAI,EAAE;EACV,CAAC,EACD;IACI+D,GAAG,EAAE,CAAC;IACN/D,IAAI,EAAE;EACV,CAAC,EACD;IACI+D,GAAG,EAAE,CAAC;IACN/D,IAAI,EAAE,OAAO;IACbjB,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK;EAC3C,CAAC,CACJ;EACDR,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,GAAG,EAAE,IAAI;IACTC,YAAY,EAAE;EAClB,CAAC;EACDxB,KAAK,EAAET,mBAAmB,CAAC,kBAAkB,CAAC;EAC9CyC,MAAM,EAAE;IACJN,IAAI,EAAE,UAAU;IAChBG,SAAS,EAAE;MACPmC,KAAK,EAAE;IACX,CAAC;IACDrC,IAAI,EAAE,CACF,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,EACxB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EACpB,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,WAAW,CAAC;EAElC,CAAC;EACDM,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB;AACJ,CAAC;AAED,MAAMyE,WAAW,GAAG;EAChB3G,KAAK,EAAET,mBAAmB,CAAC,8EAA8E,CAAC;EAC1GyC,MAAM,EAAE;IACJN,IAAI,EAAE,QAAQ;IACd+D,MAAM,EAAE,MAAM;IACdtC,QAAQ,EAAE;MACNC,KAAK,EAAE;IACX,CAAC;IACDzB,IAAI,EAAE,CAAC;MACCgB,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,CACJ;IACDoD,KAAK,EAAE,CAAC;MACAC,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE,IAAI;MACZrG,KAAK,EAAE;IACX,CAAC,EACD;MACIoG,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE,IAAI;MACZrG,KAAK,EAAE;IACX,CAAC,EACD;MACIoG,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE,IAAI;MACZrG,KAAK,EAAE;IACX,CAAC,EACD;MACIoG,MAAM,EAAE,GAAG;MACXC,MAAM,EAAE,IAAI;MACZrG,KAAK,EAAE;IACX,CAAC,EACD;MACIoG,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,IAAI;MACZrG,KAAK,EAAE;IACX,CAAC,EACD;MACIoG,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,GAAG;MACXrG,KAAK,EAAE;IACX,CAAC;EAET,CAAC;EACDqC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB;AACJ,CAAC;AAED,MAAM0E,WAAW,GAAG;EAChBxE,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfqB,SAAS,EAAE;EACf,CAAC;EACDnB,OAAO,EAAE;IACLC,OAAO,EAAE;MACLqE,QAAQ,EAAE;QACNC,QAAQ,EAAE;MACd,CAAC;MACDC,OAAO,EAAE,CAAC,CAAC;MACXtE,WAAW,EAAE,CAAC;IAClB;EACJ,CAAC;EACDH,MAAM,EAAE;IACJX,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;IACpDM,SAAS,EAAE;MAAE;MACTjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDA,KAAK,EAAET,mBAAmB,CAAC,6EAA6E,CAAC;EACzGyC,MAAM,EAAE,CAAC;IACLW,IAAI,EAAE,QAAQ;IACdjB,IAAI,EAAE,QAAQ;IACdN,IAAI,EAAE,KAAK;IACXG,GAAG,EAAE,EAAE;IACPD,MAAM,EAAE,EAAE;IACV0C,KAAK,EAAE,KAAK;IACZgD,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,GAAG;IACRC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,MAAM;IACfC,IAAI,EAAE,YAAY;IAClBC,GAAG,EAAE,CAAC;IACNnE,KAAK,EAAE;MACHG,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;IACd,CAAC;IACD6B,SAAS,EAAE;MACP5E,MAAM,EAAE,EAAE;MACVsB,SAAS,EAAE;QACPmC,KAAK,EAAE,CAAC;QACRtC,IAAI,EAAE;MACV;IACJ,CAAC;IACD4F,SAAS,EAAE;MACPC,WAAW,EAAE,MAAM;MACnBC,WAAW,EAAE;IACjB,CAAC;IACDrE,QAAQ,EAAE;MACND,KAAK,EAAE;QACH+B,QAAQ,EAAE;MACd;IACJ,CAAC;IACDtD,IAAI,EAAE,CAAC;MACC/B,KAAK,EAAE,EAAE;MACT+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,EAAE;MACT+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,EAAE;MACT+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,EAAE;MACT+C,IAAI,EAAE;IACV,CAAC,EACD;MACI/C,KAAK,EAAE,GAAG;MACV+C,IAAI,EAAE;IACV,CAAC;EAET,CAAC,CAAC;EACFV,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB;AACJ,CAAC;AAED,MAAMuF,UAAU,GAAG;EACfrF,OAAO,EAAE;IACLsB,SAAS,EAAE;EACf,CAAC;EACDnB,OAAO,EAAE;IACLC,OAAO,EAAE;MACLuE,OAAO,EAAE;QACLW,KAAK,EAAE;MACX,CAAC;MACDjF,WAAW,EAAE;QACTiF,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD1F,MAAM,EAAE,CAAC;IACLW,IAAI,EAAE,oBAAoB;IAC1BjB,IAAI,EAAE,OAAO;IACbiG,MAAM,EAAE;MACJjE,SAAS,EAAE;IACf,CAAC;IACD9B,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE,CACH,CAAC,GAAG,EAAE,SAAS,CAAC,EAChB,CAAC,GAAG,EAAE,SAAS,CAAC,EAChB,CAAC,CAAC,EAAE,SAAS,CAAC,CACjB;QACDgE,KAAK,EAAE;MACX;IACJ,CAAC;IACDrC,IAAI,EAAE,CAAC;MACH/B,KAAK,EAAE,EAAE;MACT+C,IAAI,EAAE;IACV,CAAC;EACL,CAAC;AACL,CAAC;AAED,MAAMiF,UAAU,GAAG;EACfC,KAAK,EAAE;IACHvF,MAAM,EAAE;MACJX,IAAI,EAAE,CAAC,MAAM,CAAC;MACdM,SAAS,EAAE;QACPjC,KAAK,EAAE;MACX;IACJ,CAAC;IACD6H,KAAK,EAAE;MACHhD,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK;IACzB,CAAC;IACD7E,KAAK,EAAET,mBAAmB,CAAC,kBAAkB,CAAC;IAC9C6C,OAAO,EAAE;MACLC,OAAO,EAAE,MAAM;MACfY,WAAW,EAAE;QACTvB,IAAI,EAAE;MACV;IACJ,CAAC;IACDoG,SAAS,EAAE;MACPpG,IAAI,EAAE,OAAO;MACbqG,UAAU,EAAE;IAChB,CAAC;IACDC,UAAU,EAAE;MACRhB,GAAG,EAAE;IACT,CAAC;IACDhF,MAAM,EAAE,CAAC;MACLiG,gBAAgB,EAAE,OAAO;MACzBtF,IAAI,EAAE,MAAM;MACZjB,IAAI,EAAE,MAAM;MACZwG,UAAU,EAAE,KAAK;MACjBvG,IAAI,EAAElB;IACV,CAAC,CAAC;IACF0H,iBAAiB,EAAE;EACvB;AACJ,CAAC;AAED,MAAMC,aAAa,GAAG;EAClB;EACAjH,IAAI,EAAE;IACFkH,MAAM,EAAE,CAAC;IACTtD,CAAC,EAAE,EAAE;IACLuD,EAAE,EAAE,EAAE;IACNxC,CAAC,EAAE,EAAE;IACLyC,EAAE,EAAE,EAAE;IACNf,WAAW,EAAE,CAAC;IACdzE,eAAe,EAAE,eAAe;IAChCwE,WAAW,EAAE;EACjB,CAAC;EACDnF,OAAO,EAAE;IACLC,OAAO,EAAE,MAAM;IACfY,WAAW,EAAE;MACTvB,IAAI,EAAE,OAAO;MACb8G,UAAU,EAAE;QACRxI,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDuC,OAAO,EAAE;IACLoC,MAAM,EAAE,QAAQ;IAChBvD,IAAI,EAAE,CAAC;IACPG,GAAG,EAAE,EAAE;IACPiB,OAAO,EAAE;MACLqE,QAAQ,EAAE;QACNC,QAAQ,EAAE,KAAK;QACfY,KAAK,EAAE;MACX,CAAC;MACDe,SAAS,EAAE;QACP/G,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;QACrBgG,KAAK,EAAE;UACHgB,IAAI,EAAE,gBAAgB;UACtBC,GAAG,EAAE;QACT;MACJ,CAAC;MACD5B,OAAO,EAAE;QACLW,KAAK,EAAE;MACX,CAAC;MACDjF,WAAW,EAAE;QACTiF,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD1H,KAAK,EAAET,mBAAmB,CAAC,+CAA+C,CAAC;EAC3E+C,MAAM,EAAE;IACJX,IAAI,EAAE,CAAC,aAAa,EAAE,eAAe,EAAE,qBAAqB,CAAC;IAC7DM,SAAS,EAAE;MACPjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDyB,KAAK,EAAE,CAAC;IACJC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAC9DsB,WAAW,EAAE;MACTvB,IAAI,EAAE;IACV,CAAC;IACDE,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC,CAAC;EACF8B,KAAK,EAAE,CAAC;IACAJ,IAAI,EAAE,OAAO;IACbiB,IAAI,EAAE,cAAc;IACpBqE,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,GAAG;IACR2B,QAAQ,EAAE,EAAE;IACZhH,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD2D,SAAS,EAAE;MACPD,SAAS,EAAE;IACf;EACJ,CAAC,EACD;IACIhC,IAAI,EAAE,OAAO;IACbiB,IAAI,EAAE,aAAa;IACnBqE,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,EAAE;IACP2B,QAAQ,EAAE,CAAC;IACXhH,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD2D,SAAS,EAAE;MACPD,SAAS,EAAE;IACf;EACJ,CAAC,CACJ;EACD1B,MAAM,EAAE,CAAC;IACDW,IAAI,EAAE,aAAa;IACnBjB,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;EACxD,CAAC,EACD;IACIgB,IAAI,EAAE,eAAe;IACrBjB,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;EACxD,CAAC,EACD;IACIgB,IAAI,EAAE,qBAAqB;IAC3BjB,IAAI,EAAE,MAAM;IACZmH,UAAU,EAAE,CAAC;IACblH,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;EACpD,CAAC;AAET,CAAC;AAED,IAAIA,IAAI,GAAG,CACP,CACI,CAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,EACxC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,EACvC,CAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,EACrC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,EACrC,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,EACrC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,EACvC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,EACxC,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,EACtC,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,EACtC,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,EACvC,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,EAC3C,CAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,EAC1C,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,EAC3C,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,EACtC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,EACvC,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,EACxC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,EACvC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,gBAAgB,EAAE,IAAI,CAAC,EAC/C,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,IAAI,CAAC,CAClD,EACD,CACI,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,EAC1C,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,EACvC,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,EACxC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,EACrC,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,EACvC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,EACvC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,EACxC,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,EACtC,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,EACvC,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,EACvC,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,EAC3C,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,EAC5C,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,EAC3C,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,EACtC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,EACvC,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,EACzC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,EACvC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,gBAAgB,EAAE,IAAI,CAAC,EAC/C,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,IAAI,CAAC,CAClD,CACJ;AACD,MAAMmH,WAAW,GAAG;EAChB3H,IAAI,EAAE;IACFkH,MAAM,EAAE,CAAC;IACTtD,CAAC,EAAE,EAAE;IACLuD,EAAE,EAAE,EAAE;IACNxC,CAAC,EAAE,EAAE;IACLyC,EAAE,EAAE,EAAE;IACNf,WAAW,EAAE,CAAC;IACdzE,eAAe,EAAE,eAAe;IAChCwE,WAAW,EAAE;EACjB,CAAC;EACDjF,MAAM,EAAE;IACJjB,KAAK,EAAE,EAAE;IACTM,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;IACtBM,SAAS,EAAE;MACPjC,KAAK,EAAE;IACX;EACJ,CAAC;EACDyB,KAAK,EAAE;IACHG,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACPH,IAAI,EAAE,QAAQ;QACd1B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHF,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACPH,IAAI,EAAE,QAAQ;QACd1B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+I,KAAK,EAAE;EACX,CAAC;EACD/G,MAAM,EAAE,CAAC;IACDW,IAAI,EAAE,MAAM;IACZhB,IAAI,EAAEA,IAAI,CAAC,CAAC,CAAC;IACbD,IAAI,EAAE,SAAS;IACfmC,UAAUA,CAAClC,IAAI,EAAE;MACb,OAAOf,IAAI,CAACoI,IAAI,CAACrH,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;IACnC,CAAC;IAEDwB,QAAQ,EAAE;MACND,KAAK,EAAE;QACHG,IAAI,EAAE,IAAI;QACVK,SAASA,CAAC;UACN/B;QACJ,CAAC,EAAE;UACC,OAAOA,IAAI,CAAC,CAAC,CAAC;QAClB,CAAC;QACD2B,QAAQ,EAAE;MACd;IACJ,CAAC;IACDgE,SAAS,EAAE;MAEPpD,UAAU,EAAE,EAAE;MACdD,WAAW,EAAE,wBAAwB;MACrCE,aAAa,EAAE,CAAC;MAChBnE,KAAK,EAAE,IAAIV,OAAO,CAAC2J,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;QACxCC,MAAM,EAAE,CAAC;QACTlJ,KAAK,EAAET,mBAAmB,CAAC,kBAAkB;MACjD,CAAC,EACD;QACI2J,MAAM,EAAE,CAAC;QACTlJ,KAAK,EAAET,mBAAmB,CAAC,kBAAkB;MACjD,CAAC,CACJ;IAEL;EACJ,CAAC,EACD;IACIoD,IAAI,EAAE,MAAM;IACZhB,IAAI,EAAEA,IAAI,CAAC,CAAC,CAAC;IACbD,IAAI,EAAE,SAAS;IACfmC,UAAUA,CAAClC,IAAI,EAAE;MACb,OAAOf,IAAI,CAACoI,IAAI,CAACrH,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;IACnC,CAAC;IAEDwB,QAAQ,EAAE;MACND,KAAK,EAAE;QACHG,IAAI,EAAE,IAAI;QACVK,SAASA,CAAC;UACN/B;QACJ,CAAC,EAAE;UACC,OAAOA,IAAI,CAAC,CAAC,CAAC;QAClB,CAAC;QACD2B,QAAQ,EAAE;MACd;IACJ,CAAC;IACDgE,SAAS,EAAE;MACPpD,UAAU,EAAE,EAAE;MACdD,WAAW,EAAE,yBAAyB;MACtCE,aAAa,EAAE,CAAC;MAChBnE,KAAK,EAAE,IAAIV,OAAO,CAAC2J,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;QACxCC,MAAM,EAAE,CAAC;QACTlJ,KAAK,EAAET,mBAAmB,CAAC,kBAAkB;MACjD,CAAC,EACD;QACI2J,MAAM,EAAE,CAAC;QACTlJ,KAAK,EAAET,mBAAmB,CAAC,kBAAkB;MACjD,CAAC,CACJ;IAEL;EACJ,CAAC;AAET,CAAC;AAED,MAAM4J,gBAAgB,GAAG;EACrBhI,IAAI,EAAE;IACFC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,GAAG,EAAE,IAAI;IACTC,YAAY,EAAE;EAClB,CAAC;EACDC,KAAK,EAAE;IACHE,IAAI,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;IAC9DC,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACD8B,KAAK,EAAE;IACHF,QAAQ,EAAE;MACNC,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ,CAAC;IACD+B,SAAS,EAAE;MACPF,SAAS,EAAE;QACP7B,KAAK,EAAE;MACX;IACJ;EACJ,CAAC;EACDiC,SAAS,EAAE;IACPC,UAAU,EAAE;EAChB,CAAC;EACDF,MAAM,EAAE,CAAC;IACLN,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE,CACF,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAChB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAClB;IACD2F,SAAS,EAAE;MACPlC,MAAM,EAAE;QACJpF,KAAK,EAAE,SAAS;QAChBoJ,MAAM,EAAE,SAAS;QACjB7B,WAAW,EAAE,SAAS;QACtB8B,YAAY,EAAE;MAClB;IACJ;EACJ,CAAC;AACL,CAAC;AAMD,SACInI,SAAS,EACT0G,UAAU,EACV/E,SAAS,EACTuF,aAAa,EACbX,UAAU,EACVtF,gBAAgB,EAChBuC,QAAQ,EACRnB,aAAa,EACbuF,WAAW,EACXhE,aAAa,EACbrB,kBAAkB,EAClBT,gBAAgB,EAChBoB,QAAQ,EACRG,aAAa,EACbC,kBAAkB,EAClBC,yBAAyB,EACzBY,YAAY,EACZC,UAAU,EACVc,YAAY,EACZE,aAAa,EACbE,aAAa,EACbG,WAAW,EACXwC,gBAAgB,EAChBvC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}