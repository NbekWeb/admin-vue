{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, email, helpers } from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\nimport axios from 'axios';\nimport appConfig from \"../../../app.config\";\nexport default {\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  page: {\n    title: \"Register\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  components: {},\n  data() {\n    return {\n      user: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\",\n        phone: \"\",\n        // 🔧 Qo‘shildi\n        first_name: \"\",\n        // 🔧 Qo‘shildi\n        last_name: \"\" // 🔧 Qo‘shildi\n      },\n      submitted: false,\n      regError: null,\n      tryingToRegister: false,\n      isRegisterError: false,\n      registerSuccess: false\n    };\n  },\n  validations: {\n    user: {\n      username: {\n        required: helpers.withMessage(\"Username is required\", required)\n      },\n      email: {\n        required: helpers.withMessage(\"Email is required\", required),\n        email: helpers.withMessage(\"Please enter valid email\", email)\n      },\n      password: {\n        required: helpers.withMessage(\"Password is required\", required)\n      },\n      confirm_password: {\n        required: helpers.withMessage(\"Confirm Password is required\", required)\n      }\n    }\n  },\n  computed: {\n    notification() {\n      return this.$store ? this.$store.state.notification : null;\n    }\n  },\n  methods: {\n    // Try to register the user in with the email, username\n    // and password they provided.\n    async tryToRegisterIn() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.v$.$touch();\n      const result = await axios.post('https://api-node.themesbrand.website/auth/signup', {\n        email: this.user.email,\n        password: this.user.password,\n        confirm_password: this.user.confirm_password\n      });\n      if (result.data.status == 'errors') {\n        this.isRegisterError = true;\n        return this.regError = result.data.message;\n      }\n      localStorage.setItem('jwt', result.data.token);\n      this.$router.push({\n        path: '/'\n      });\n    }\n  }\n};","map":{"version":3,"names":["required","email","helpers","useVuelidate","axios","appConfig","setup","v$","page","title","meta","name","content","description","components","data","user","username","password","confirm_password","phone","first_name","last_name","submitted","regError","tryingToRegister","isRegisterError","registerSuccess","validations","withMessage","computed","notification","$store","state","methods","tryToRegisterIn","$touch","result","post","status","message","localStorage","setItem","token","$router","push","path"],"sources":["C:\\Users\\UMIDJON\\Desktop\\default2\\src\\views\\account\\register.vue"],"sourcesContent":["<script>\nimport {\n  required,\n  email,\n  helpers\n} from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\nimport axios from 'axios';\nimport appConfig from \"../../../app.config\";\n\nexport default {\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  page: {\n    title: \"Register\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description,\n    },],\n  },\n  components: {},\n  data() {\n    return {\n      user: {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n          confirm_password: \"\",\n          phone: \"\",          // 🔧 Qo‘shildi\n        first_name: \"\",     // 🔧 Qo‘shildi\n        last_name: \"\",      // 🔧 Qo‘shildi\n      },\n      submitted: false,\n      regError: null,\n      tryingToRegister: false,\n      isRegisterError: false,\n      registerSuccess: false,\n    };\n  },\n  validations: {\n    user: {\n      username: {\n        required: helpers.withMessage(\"Username is required\", required),\n      },\n      email: {\n        required: helpers.withMessage(\"Email is required\", required),\n        email: helpers.withMessage(\"Please enter valid email\", email),\n      },\n      password: {\n        required: helpers.withMessage(\"Password is required\", required),\n      },\n      confirm_password: {\n        required: helpers.withMessage(\"Confirm Password is required\", required),\n      },\n    },\n  },\n  computed: {\n    notification() {\n      return this.$store ? this.$store.state.notification : null;\n    },\n  },\n  methods: {\n\n\n    // Try to register the user in with the email, username\n    // and password they provided.\n    async tryToRegisterIn() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.v$.$touch();\n      const result = await axios.post('https://api-node.themesbrand.website/auth/signup', {\n        email: this.user.email,\n        password: this.user.password,\n        confirm_password: this.user.confirm_password\n      });\n      if (result.data.status == 'errors') {\n        this.isRegisterError = true;\n        return this.regError = result.data.message;\n      }\n      localStorage.setItem('jwt', result.data.token);\n      this.$router.push({\n        path: '/'\n      });\n\n    },\n  },\n};\n</script>\n\n<template>\n  <div class=\"auth-page-wrapper pt-5\">\n    <div class=\"auth-one-bg-position auth-one-bg\" id=\"auth-particles\">\n      <div class=\"bg-overlay\"></div>\n\n      <div class=\"shape\">\n\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n          viewBox=\"0 0 1440 120\">\n          <path d=\"M 0,36 C 144,53.6 432,123.2 720,124 C 1008,124.8 1296,56.8 1440,40L1440 140L0 140z\"></path>\n        </svg>\n      </div>\n      <Particles id=\"tsparticles\" :options=\"{\n        particles: {\n          number: {\n            value: 90,\n            density: {\n              enable: true,\n              value_area: 800,\n            },\n          },\n          color: {\n            value: '#ffffff',\n          },\n          shape: {\n            type: 'circle',\n            stroke: {\n              width: 0,\n              color: '#000000',\n            },\n            polygon: {\n              nb_sides: 5,\n            },\n            image: {\n              src: 'img/github.svg',\n              width: 100,\n              height: 100,\n            },\n          },\n          opacity: {\n            value: 0.8,\n            random: true,\n            anim: {\n              enable: true,\n              speed: 1,\n              opacity_min: 0,\n              sync: false,\n            },\n          },\n          size: {\n            value: 4,\n            random: true,\n            anim: {\n              enable: false,\n              speed: 4,\n              size_min: 0.2,\n              sync: false,\n            },\n          },\n          line_linked: {\n            enable: false,\n            distance: 150,\n            color: '#ffffff',\n            opacity: 0.4,\n            width: 1,\n          },\n          move: {\n            enable: true,\n            speed: 2,\n            direction: 'none',\n            random: false,\n            straight: false,\n            out_mode: 'out',\n            attract: {\n              enable: false,\n              rotateX: 600,\n              rotateY: 1200,\n            },\n          },\n        },\n        interactivity: {\n          detect_on: 'canvas',\n          events: {\n            onhover: {\n              enable: true,\n              mode: 'bubble',\n            },\n            onclick: {\n              enable: true,\n              mode: 'repulse',\n            },\n            resize: true,\n          },\n          modes: {\n            grab: {\n              distance: 400,\n              line_linked: {\n                opacity: 1,\n              },\n            },\n            bubble: {\n              distance: 400,\n              size: 4,\n              duration: 2,\n              opacity: 0.8,\n              speed: 3,\n            },\n            repulse: {\n              distance: 200,\n            },\n            push: {\n              particles_nb: 4,\n            },\n            remove: {\n              particles_nb: 2,\n            },\n          },\n        },\n        retina_detect: true,\n        config_demo: {\n          hide_card: false,\n          background_color: '#b61924',\n          background_image: '',\n          background_position: '50% 50%',\n          background_repeat: 'no-repeat',\n          background_size: 'cover',\n        },\n      }\" />\n    </div>\n\n    <div class=\"auth-page-content\">\n      <b-container>\n        <b-row>\n          <b-col lg=\"12\">\n            <div class=\"text-center mt-sm-5 mb-4 text-white-50\">\n              <div>\n                <router-link to=\"/\" class=\"d-inline-block auth-logo\">\n                  \n                </router-link>\n              </div>\n              <p class=\"mt-3 fs-15 fw-medium\">Premium Admin & Dashboard Template</p>\n            </div>\n          </b-col>\n        </b-row>\n\n        <b-row class=\"justify-content-center\">\n          <b-col md=\"8\" lg=\"6\" xl=\"5\">\n            <b-card no-body class=\"mt-4\">\n\n              <b-card-body class=\"p-4\">\n                <div class=\"text-center mt-2\">\n                  <h5 class=\"text-primary\">Create New Account</h5>\n                  <p class=\"text-muted\">Get your free velzon account now</p>\n                </div>\n                <div class=\"p-2 mt-4\">\n                  <form class=\"needs-validation\" @submit.prevent=\"tryToRegisterIn\">\n                    <b-alert v-model=\"registerSuccess\" class=\"mt-3\" variant=\"success\" dismissible>Registration\n                      successfull.</b-alert>\n\n                    <b-alert v-model=\"isRegisterError\" class=\"mt-3\" variant=\"danger\" dismissible>{{ regError }}\n                    </b-alert>\n\n                    <div v-if=\"notification.message\" :class=\"'alert ' + notification.type\">\n                      {{ notification.message }}\n                    </div>\n                    <div class=\"mb-3\">\n                      <label for=\"useremail\" class=\"form-label\">Email <span class=\"text-danger\">*</span></label>\n                      <input type=\"email\" class=\"form-control\" v-model=\"user.email\" id=\"useremail\" :class=\"{\n                        'is-invalid': submitted && v$.user.email.$error,\n                      }\" placeholder=\"Enter email address\">\n                      <div v-for=\"(item, index) in v$.user.email.$errors\" :key=\"index\" class=\"invalid-feedback\">\n                        <span v-if=\"item.$message\">{{ item.$message }}</span>\n                      </div>\n                    </div>\n                    <div class=\"mb-3\">\n                      <label for=\"username\" class=\"form-label\">Username <span class=\"text-danger\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" v-model=\"user.username\" :class=\"{\n                        'is-invalid': submitted && v$.user.username.$error,\n                      }\" id=\"username\" placeholder=\"Enter username\">\n                      <div v-if=\"submitted && v$.user.username.$error\" class=\"invalid-feedback\">\n                        <span v-if=\"v$.user.username.required.$message\">{{\n                            v$.user.username.required.$message\n                        }}</span>\n                      </div>\n                    </div>\n\n                    <div class=\"mb-2\">\n                      <label for=\"userpassword\" class=\"form-label\">Password <span class=\"text-danger\">*</span></label>\n                      <input type=\"password\" class=\"form-control\" v-model=\"user.password\" :class=\"{\n                        'is-invalid': submitted && v$.user.password.$error,\n                      }\" id=\"userpassword\" placeholder=\"Enter password\">\n                      <div v-if=\"submitted && v$.user.password.$error\" class=\"invalid-feedback\">\n                        <span v-if=\"v$.user.password.required.$message\">{{\n                            v$.user.password.required.$message\n                        }}</span>\n                      </div>\n                    </div>\n\n                    <div class=\"mb-2\">\n                      <label for=\"userpassword\" class=\"form-label\">Confirm Password <span\n                          class=\"text-danger\">*</span></label>\n                      <input type=\"password\" class=\"form-control\" v-model=\"user.confirm_password\" :class=\"{\n                        'is-invalid': submitted && v$.user.password.$error,\n                      }\" id=\"userconfirmpassword\" placeholder=\"Enter password\">\n                      <div v-if=\"submitted && v$.user.confirm_password.$error\" class=\"invalid-feedback\">\n                        <span v-if=\"v$.user.password.required.$message\">{{\n                            v$.user.confirm_password.required.$message\n                        }}</span>\n                      </div>\n                    </div>\n\n                    <div class=\"mb-4\">\n                      <p class=\"mb-0 fs-12 text-muted fst-italic\">By registering you agree to the Velzon <b-link\n                          href=\"#\" class=\"text-primary text-decoration-underline fst-normal fw-medium\">Terms of Use\n                        </b-link>\n                      </p>\n                    </div>\n\n                    <div class=\"mt-4\">\n                      <b-button variant=\"success\" class=\"w-100\" type=\"submit\">Sign Up</b-button>\n                    </div>\n\n                  </form>\n\n                </div>\n              </b-card-body>\n            </b-card>\n\n            <div class=\"mt-4 text-center\">\n              <p class=\"mb-0\">Already have an account ? <router-link to=\"/login\"\n                  class=\"fw-semibold text-primary text-decoration-underline\"> Signin </router-link>\n              </p>\n            </div>\n          </b-col>\n        </b-row>\n      </b-container>\n    </div>\n\n    <footer class=\"footer\">\n      <b-container>\n        <b-row>\n          <b-col lg=\"12\">\n            <div class=\"text-center\">\n              <p class=\"mb-0 text-muted\">&copy; {{ new Date().getFullYear() }} Чистая Вода. Crafted with <i\n                  class=\"mdi mdi-heart text-danger\"></i> by Zesu</p>\n            </div>\n          </b-col>\n        </b-row>\n      </b-container>\n    </footer>\n  </div>\n</template>"],"mappings":";AACA,SACEA,QAAQ,EACRC,KAAK,EACLC,OAAM,QACD,uBAAuB;AAC9B,OAAOC,YAAW,MAAO,iBAAiB;AAC1C,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,qBAAqB;AAE3C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,EAAE,EAAEJ,YAAY,CAAC;IACnB,CAAC;EACH,CAAC;EACDK,IAAI,EAAE;IACJC,KAAK,EAAE,UAAU;IACjBC,IAAI,EAAE,CAAC;MACLC,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAEP,SAAS,CAACQ;IACrB,CAAC;EACH,CAAC;EACDC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZhB,KAAK,EAAE,EAAE;QACTiB,QAAQ,EAAE,EAAE;QACVC,gBAAgB,EAAE,EAAE;QACpBC,KAAK,EAAE,EAAE;QAAW;QACtBC,UAAU,EAAE,EAAE;QAAM;QACpBC,SAAS,EAAE,EAAE,CAAO;MACtB,CAAC;MACDC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAE,IAAI;MACdC,gBAAgB,EAAE,KAAK;MACvBC,eAAe,EAAE,KAAK;MACtBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,WAAW,EAAE;IACXZ,IAAI,EAAE;MACJC,QAAQ,EAAE;QACRjB,QAAQ,EAAEE,OAAO,CAAC2B,WAAW,CAAC,sBAAsB,EAAE7B,QAAQ;MAChE,CAAC;MACDC,KAAK,EAAE;QACLD,QAAQ,EAAEE,OAAO,CAAC2B,WAAW,CAAC,mBAAmB,EAAE7B,QAAQ,CAAC;QAC5DC,KAAK,EAAEC,OAAO,CAAC2B,WAAW,CAAC,0BAA0B,EAAE5B,KAAK;MAC9D,CAAC;MACDiB,QAAQ,EAAE;QACRlB,QAAQ,EAAEE,OAAO,CAAC2B,WAAW,CAAC,sBAAsB,EAAE7B,QAAQ;MAChE,CAAC;MACDmB,gBAAgB,EAAE;QAChBnB,QAAQ,EAAEE,OAAO,CAAC2B,WAAW,CAAC,8BAA8B,EAAE7B,QAAQ;MACxE;IACF;EACF,CAAC;EACD8B,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACC,MAAK,GAAI,IAAI,CAACA,MAAM,CAACC,KAAK,CAACF,YAAW,GAAI,IAAI;IAC5D;EACF,CAAC;EACDG,OAAO,EAAE;IAGP;IACA;IACA,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI,CAACZ,SAAQ,GAAI,IAAI;MACrB;MACA,IAAI,CAAChB,EAAE,CAAC6B,MAAM,CAAC,CAAC;MAChB,MAAMC,MAAK,GAAI,MAAMjC,KAAK,CAACkC,IAAI,CAAC,kDAAkD,EAAE;QAClFrC,KAAK,EAAE,IAAI,CAACe,IAAI,CAACf,KAAK;QACtBiB,QAAQ,EAAE,IAAI,CAACF,IAAI,CAACE,QAAQ;QAC5BC,gBAAgB,EAAE,IAAI,CAACH,IAAI,CAACG;MAC9B,CAAC,CAAC;MACF,IAAIkB,MAAM,CAACtB,IAAI,CAACwB,MAAK,IAAK,QAAQ,EAAE;QAClC,IAAI,CAACb,eAAc,GAAI,IAAI;QAC3B,OAAO,IAAI,CAACF,QAAO,GAAIa,MAAM,CAACtB,IAAI,CAACyB,OAAO;MAC5C;MACAC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEL,MAAM,CAACtB,IAAI,CAAC4B,KAAK,CAAC;MAC9C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE;MACR,CAAC,CAAC;IAEJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}