{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport Layout from \"@/layouts/main.vue\";\nimport PageHeader from \"@/components/page-header.vue\";\nimport { Edit, Plus } from \"@element-plus/icons-vue\";\nimport DeviceModal from \"./components/DeviceModal.vue\";\nimport { getDevice_API } from \"@/service/device\";\n// Fake API (almashtiring real xizmat bilan)\n\nexport default {\n  __name: 'device',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const devices = ref([]);\n    const title = \"Таблицы\";\n    const items = [{\n      text: \"Tables\",\n      href: \"/\"\n    }, {\n      text: \"Devices\",\n      active: true\n    }];\n    const loading = ref(false);\n    const _deviceRef = ref();\n    const fetchDevices = async () => {\n      loading.value = true;\n      const [error, res] = await getDevice_API();\n      console.log(\"2222122\", res);\n      if (error) return;\n      devices.value = res.results;\n      loading.value = false;\n    };\n    onMounted(() => {\n      fetchDevices();\n    });\n    const __returned__ = {\n      devices,\n      title,\n      items,\n      loading,\n      _deviceRef,\n      fetchDevices,\n      ref,\n      onMounted,\n      Layout,\n      PageHeader,\n      get Edit() {\n        return Edit;\n      },\n      get Plus() {\n        return Plus;\n      },\n      DeviceModal,\n      get getDevice_API() {\n        return getDevice_API;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","Layout","PageHeader","Edit","Plus","DeviceModal","getDevice_API","devices","title","items","text","href","active","loading","_deviceRef","fetchDevices","value","error","res","console","log","results"],"sources":["C:/Users/UMIDJON/Desktop/default2/src/views/tables/device.vue"],"sourcesContent":["<template>\n\t<Layout>\n\t\t<DeviceModal @create=\"fetchDevices\" ref=\"_deviceRef\" />\n\t\t<PageHeader :title=\"title\" :items=\"items\" />\n\n\t\t<el-card shadow=\"never\">\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<span class=\"card-title\">Устройства</span>\n\t\t\t\t<el-button type=\"primary\" :icon=\"Plus\" @click=\"_deviceRef.open()\">\n\t\t\t\t\tДобавить устройство\n\t\t\t\t</el-button>\n\t\t\t</div>\n\n\t\t\t<el-table\n         \n\t\t\t\t:data=\"devices\"\n\t\t\t\tborder\n\t\t\t\tstripe\n\t\t\t\tstyle=\"width: 100%\"\n\t\t\t\tv-loading=\"loading\"\n\t\t\t\tempty-text=\"Устройства не найдены\"\n\t\t\t>\n\t\t\t\t<el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n\t\t\t\t<el-table-column prop=\"factory_number\" label=\"Заводской номер\" />\n\t\t\t\t<el-table-column prop=\"name\" label=\"Название устройства\" />\n\t\t\t\t<el-table-column prop=\"func\" label=\"функция\" />\n\t\t\t\t<!-- <el-table-column prop=\"address\" label=\"Адрес\" />\n\t\t\t\t<el-table-column prop=\"mqttPath\" label=\"Путь MQTT\" />\n\t\t\t\t<el-table-column prop=\"offset\" label=\"Сдвиг\" /> -->\n\n\t\t\t\t<!-- <el-table-column label=\"Статус\">\n\t\t\t\t\t<template #default=\"{ row }\">\n\t\t\t\t\t\t<el-tag\n\t\t\t\t\t\t\t:type=\"row.status === 'active' ? 'success' : 'danger'\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ row.status === \"active\" ? \"Активен\" : \"Неактивен\" }}\n\t\t\t\t\t\t</el-tag>\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column> -->\n\n\t\t\t\t<el-table-column width=\"100\">\n\t\t\t\t\t<template #default=\"{ row }\">\n\t\t\t\t\t\t<el-button :icon=\"Edit\" @click=\"_deviceRef.open(row)\" />\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t</el-table>\n\t\t</el-card>\n\t</Layout>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport Layout from \"@/layouts/main.vue\";\nimport PageHeader from \"@/components/page-header.vue\";\nimport { Edit, Plus } from \"@element-plus/icons-vue\";\nimport DeviceModal from \"./components/DeviceModal.vue\";\nimport { getDevice_API } from \"@/service/device\";\n// Fake API (almashtiring real xizmat bilan)\nconst devices = ref([]);\n\nconst title = \"Таблицы\";\nconst items = [\n\t{ text: \"Tables\", href: \"/\" },\n\t{ text: \"Devices\", active: true },\n];\n\nconst loading = ref(false);\nconst _deviceRef = ref();\n\nconst fetchDevices = async () => {\n\tloading.value = true;\n\tconst [error, res] = await getDevice_API();\n\tconsole.log(\"2222122\", res);\n\n\tif (error) return;\n\tdevices.value = res.results;\n\n\tloading.value = false;\n};\n\nonMounted(() => {\n\tfetchDevices();\n});\n</script>\n\n<style scoped>\n.card-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tfont-weight: 600;\n\tfont-size: 18px;\n\tmargin-bottom: 10px;\n}\n</style>\n"],"mappings":"AAmDA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,SAASC,IAAI,EAAEC,IAAI,QAAQ,yBAAyB;AACpD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,SAASC,aAAa,QAAQ,kBAAkB;AAChD;;;;;;;;IACA,MAAMC,OAAO,GAAGR,GAAG,CAAC,EAAE,CAAC;IAEvB,MAAMS,KAAK,GAAG,SAAS;IACvB,MAAMC,KAAK,GAAG,CACb;MAAEC,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAI,CAAC,EAC7B;MAAED,IAAI,EAAE,SAAS;MAAEE,MAAM,EAAE;IAAK,CAAC,CACjC;IAED,MAAMC,OAAO,GAAGd,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMe,UAAU,GAAGf,GAAG,CAAC,CAAC;IAExB,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAChCF,OAAO,CAACG,KAAK,GAAG,IAAI;MACpB,MAAM,CAACC,KAAK,EAAEC,GAAG,CAAC,GAAG,MAAMZ,aAAa,CAAC,CAAC;MAC1Ca,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,GAAG,CAAC;MAE3B,IAAID,KAAK,EAAE;MACXV,OAAO,CAACS,KAAK,GAAGE,GAAG,CAACG,OAAO;MAE3BR,OAAO,CAACG,KAAK,GAAG,KAAK;IACtB,CAAC;IAEDhB,SAAS,CAAC,MAAM;MACfe,YAAY,CAAC,CAAC;IACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}