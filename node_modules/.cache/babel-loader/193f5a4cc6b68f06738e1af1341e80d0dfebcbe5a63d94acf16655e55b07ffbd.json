{"ast":null,"code":"import { ref } from \"vue\";\nimport { ElMessage } from \"element-plus\";\nimport { getDevice_API } from \"@/service/device\";\nimport { getUser_API } from \"@/service/user\";\nimport { addEnCoder_API, editEnCoder_API } from \"@/service/encoder\";\nexport default {\n  __name: 'EnCoder',\n  emits: [\"update:modelValue\", \"create\"],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const visible = ref(false);\n    const formRef = ref(null);\n    const form = ref({\n      device: null,\n      number: null,\n      user: null\n    });\n    const devices = ref([]);\n    const subscribers = ref([]);\n    const rules = {\n      number: [{\n        required: true,\n        message: \"Введите номер\",\n        trigger: \"blur\"\n      }],\n      device: [{\n        required: true,\n        message: \"Выберите устройство\",\n        trigger: \"change\"\n      }],\n      user: [{\n        required: true,\n        message: \"Выберите абонента\",\n        trigger: \"change\"\n      }]\n    };\n    const onNumberInput = value => {\n      form.value.number = value.replace(/[^\\d]/g, \"\");\n    };\n    const fetchDevices = async () => {\n      const [error, res] = await getDevice_API();\n      if (!error) devices.value = res.results;\n    };\n    const fetchSubscribers = async () => {\n      const [error, res] = await getUser_API();\n      if (!error) subscribers.value = res.data.results;\n    };\n    const onSubmit = () => {\n      formRef.value.validate(async valid => {\n        if (valid) {\n          const [error] = form.value.id ? await editEnCoder_API(form.value) : await addEnCoder_API(form.value);\n          if (error) {\n            ElMessage.error(\"Ошибка\");\n            visible.value = false;\n            return;\n          }\n          emit(\"create\");\n          visible.value = false;\n          ElMessage.success(form.value.id ? \"Описание устройства отредактировано\" : \"Тариф на устройство создан\");\n        }\n      });\n    };\n    function open(data = null, userRow = null) {\n      visible.value = true;\n      console.log(\"data\", data);\n      console.log(\"userRow\", userRow);\n      form.value = userRow ? {\n        ...userRow,\n        device: userRow.device.id\n      } : {\n        device: null,\n        number: null,\n        user: null\n      };\n      if (data) {\n        form.value.user = data.id;\n      }\n      fetchDevices();\n      fetchSubscribers();\n    }\n    const onCancel = () => {\n      visible.value = false;\n    };\n    expose({\n      open\n    });\n    const __returned__ = {\n      emit,\n      visible,\n      formRef,\n      form,\n      devices,\n      subscribers,\n      rules,\n      onNumberInput,\n      fetchDevices,\n      fetchSubscribers,\n      onSubmit,\n      open,\n      onCancel,\n      ref,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getDevice_API() {\n        return getDevice_API;\n      },\n      get getUser_API() {\n        return getUser_API;\n      },\n      get addEnCoder_API() {\n        return addEnCoder_API;\n      },\n      get editEnCoder_API() {\n        return editEnCoder_API;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","ElMessage","getDevice_API","getUser_API","addEnCoder_API","editEnCoder_API","visible","formRef","form","device","number","user","devices","subscribers","rules","required","message","trigger","onNumberInput","value","replace","fetchDevices","error","res","results","fetchSubscribers","data","onSubmit","validate","valid","id","emit","success","open","userRow","console","log","onCancel","expose"],"sources":["C:/Users/UMIDJON/Desktop/default2/src/views/tables/components/EnCoder.vue"],"sourcesContent":["<template>\r\n\t<el-dialog\r\n\t\tv-model=\"visible\"\r\n\t\ttitle=\"Добавить описание к устройству\"\r\n\t\twidth=\"500px\"\r\n\t\t:before-close=\"onCancel\"\r\n\t>\r\n\t\t<el-form label-position=\"top\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n\t\t\t<el-form-item label=\"Номер\" prop=\"number\">\r\n\t\t\t\t<el-input\r\n\t\t\t\t\tv-model=\"form.number\"\r\n\t\t\t\t\tplaceholder=\"Введите номер\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclearable\r\n\t\t\t\t\t@input=\"onNumberInput\"\r\n\t\t\t\t/>\r\n\t\t\t</el-form-item>\r\n\r\n\t\t\t<el-form-item label=\"Устройство\" prop=\"device\">\r\n\t\t\t\t<el-select\r\n\t\t\t\t\tv-model=\"form.device\"\r\n\t\t\t\t\tplaceholder=\"Выберите устройство\"\r\n\t\t\t\t\tfilterable\r\n\t\t\t\t>\r\n\t\t\t\t\t<el-option\r\n\t\t\t\t\t\tv-for=\"item in devices\"\r\n\t\t\t\t\t\t:key=\"item.id\"\r\n\t\t\t\t\t\t:label=\"item.name\"\r\n\t\t\t\t\t\t:value=\"item.id\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t\t<el-form-item label=\"Абонент\" prop=\"user\">\r\n\t\t\t\t<el-select\r\n\t\t\t\t\tv-model=\"form.user\"\r\n\t\t\t\t\tplaceholder=\"Выберите абонента\"\r\n\t\t\t\t\tfilterable\r\n\t\t\t\t>\r\n\t\t\t\t\t<el-option\r\n\t\t\t\t\t\tv-for=\"subscriber in subscribers\"\r\n\t\t\t\t\t\t:key=\"subscriber.id\"\r\n\t\t\t\t\t\t:label=\"`${subscriber.first_name} ${subscriber.last_name}`\"\r\n\t\t\t\t\t\t:value=\"subscriber.id\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</el-select>\r\n\t\t\t</el-form-item>\r\n\t\t</el-form>\r\n\r\n\t\t<template #footer>\r\n\t\t\t<el-button @click=\"onCancel\">Отмена</el-button>\r\n\t\t\t<el-button type=\"primary\" @click=\"onSubmit\">Сохранить</el-button>\r\n\t\t</template>\r\n\t</el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineExpose, defineEmits } from \"vue\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { getDevice_API } from \"@/service/device\";\r\nimport { getUser_API } from \"@/service/user\";\r\nimport { addEnCoder_API, editEnCoder_API } from \"@/service/encoder\";\r\n\r\nconst emit = defineEmits([\"update:modelValue\", \"create\"]);\r\n\r\nconst visible = ref(false);\r\n\r\nconst formRef = ref(null);\r\nconst form = ref({\r\n\tdevice: null,\r\n\tnumber: null,\r\n\tuser: null,\r\n});\r\n\r\nconst devices = ref([]);\r\nconst subscribers = ref([]);\r\n\r\nconst rules = {\r\n\tnumber: [{ required: true, message: \"Введите номер\", trigger: \"blur\" }],\r\n\tdevice: [\r\n\t\t{ required: true, message: \"Выберите устройство\", trigger: \"change\" },\r\n\t],\r\n\tuser: [{ required: true, message: \"Выберите абонента\", trigger: \"change\" }],\r\n};\r\n\r\nconst onNumberInput = (value) => {\r\n\tform.value.number = value.replace(/[^\\d]/g, \"\");\r\n};\r\n\r\nconst fetchDevices = async () => {\r\n\tconst [error, res] = await getDevice_API();\r\n\tif (!error) devices.value = res.results;\r\n};\r\n\r\nconst fetchSubscribers = async () => {\r\n\tconst [error, res] = await getUser_API();\r\n\tif (!error) subscribers.value = res.data.results;\r\n};\r\n\r\nconst onSubmit = () => {\r\n\tformRef.value.validate(async (valid) => {\r\n\t\tif (valid) {\r\n\t\t\tconst [error] = form.value.id\r\n\t\t\t\t? await editEnCoder_API(form.value)\r\n\t\t\t\t: await addEnCoder_API(form.value);\r\n\r\n\t\t\tif (error) {\r\n\t\t\t\tElMessage.error(\"Ошибка\");\r\n\t\t\t\tvisible.value = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\temit(\"create\");\r\n\t\t\tvisible.value = false;\r\n\t\t\tElMessage.success(\r\n\t\t\t\tform.value.id ? \"Описание устройства отредактировано\" : \"Тариф на устройство создан\"\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n};\r\n\r\nfunction open(data = null, userRow = null) {\r\n\tvisible.value = true;\r\n\tconsole.log(\"data\", data);\r\n\tconsole.log(\"userRow\", userRow);\r\n\tform.value = userRow\r\n\t\t? { ...userRow, device: userRow.device.id }\r\n\t\t: { device: null, number: null, user: null };\r\n\tif (data) {\r\n\t\tform.value.user = data.id;\r\n\t}\r\n\tfetchDevices();\r\n\tfetchSubscribers();\r\n}\r\n\r\nconst onCancel = () => {\r\n\tvisible.value = false;\r\n};\r\n\r\ndefineExpose({\r\n\topen,\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.card-header {\r\n\t/* optional styling */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}