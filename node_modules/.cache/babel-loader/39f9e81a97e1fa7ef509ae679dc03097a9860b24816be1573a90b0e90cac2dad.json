{"ast":null,"code":"// Basic Bar chart\nfunction getChartColorsArray(colors) {\n  colors = JSON.parse(colors);\n  return colors.map(function (value) {\n    var newValue = value.replace(\" \", \"\");\n    if (newValue.indexOf(\",\") === -1) {\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\n      if (color) {\n        color = color.replace(\" \", \"\");\n        return color;\n      } else return newValue;\n    } else {\n      var val = value.split(',');\n      if (val.length == 2) {\n        var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\n        rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\n        return rgbaColor;\n      } else {\n        return newValue;\n      }\n    }\n  });\n}\nconst basicBarChart = {\n  series: [{\n    data: [380, 430, 450, 475, 550, 584, 780, 1100, 1220, 1365]\n  }],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"bar\",\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: getChartColorsArray('[\"--vz-success\"]'),\n    grid: {\n      borderColor: \"#f1f1f1\"\n    },\n    xaxis: {\n      categories: [\"South Korea\", \"Canada\", \"United Kingdom\", \"Netherlands\", \"Italy\", \"France\", \"Japan\", \"United States\", \"China\", \"Germany\"]\n    }\n  }\n};\n\n// Custom DataLabels Bar\n\nconst customDatalabelsChart = {\n  series: [{\n    data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        barHeight: \"100%\",\n        distributed: true,\n        horizontal: true,\n        dataLabels: {\n          position: \"bottom\"\n        }\n      }\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-secondary\", \"--vz-success\", \"--vz-info\", \"--vz-warning\", \"--vz-danger\", \"--vz-dark\", \"--vz-primary\", \"--vz-success\", \"--vz-secondary\"]'),\n    dataLabels: {\n      enabled: true,\n      textAnchor: \"start\",\n      style: {\n        colors: [\"#fff\"]\n      },\n      formatter: function (val, opt) {\n        return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n      },\n      offsetX: 0,\n      dropShadow: {\n        enabled: false\n      }\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    xaxis: {\n      categories: [\"South Korea\", \"Canada\", \"United Kingdom\", \"Netherlands\", \"Italy\", \"France\", \"Japan\", \"United States\", \"China\", \"India\"]\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    title: {\n      text: \"Custom DataLabels\",\n      align: \"center\",\n      floating: true,\n      style: {\n        fontWeight: 600\n      }\n    },\n    subtitle: {\n      text: \"Category Names as DataLabels inside bars\",\n      align: \"center\"\n    },\n    tooltip: {\n      theme: \"dark\",\n      x: {\n        show: false\n      },\n      y: {\n        title: {\n          formatter: function () {\n            return \"\";\n          }\n        }\n      }\n    }\n  }\n};\n\n// Stacked Bar Charts\n\nconst stackedBarChart = {\n  series: [{\n    name: \"Marine Sprite\",\n    data: [44, 55, 41, 37, 22, 43, 21]\n  }, {\n    name: \"Striking Calf\",\n    data: [53, 32, 33, 52, 13, 43, 32]\n  }, {\n    name: \"Tank Picture\",\n    data: [12, 17, 11, 9, 15, 11, 20]\n  }, {\n    name: \"Bucket Slope\",\n    data: [9, 7, 5, 8, 6, 9, 4]\n  }, {\n    name: \"Reborn Kid\",\n    data: [25, 12, 19, 32, 25, 24, 10]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    title: {\n      text: \"Fiction Books Sales\",\n      style: {\n        fontWeight: 600\n      }\n    },\n    xaxis: {\n      categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n      labels: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    yaxis: {\n      title: {\n        text: undefined\n      }\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n      offsetX: 40\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]')\n  }\n};\n\n// Stacked Bars 100\n\nconst stackedBar100Chart = {\n  series: [{\n    name: \"Marine Sprite\",\n    data: [44, 55, 41, 37, 22, 43, 21]\n  }, {\n    name: \"Striking Calf\",\n    data: [53, 32, 33, 52, 13, 43, 32]\n  }, {\n    name: \"Tank Picture\",\n    data: [12, 17, 11, 9, 15, 11, 20]\n  }, {\n    name: \"Bucket Slope\",\n    data: [9, 7, 5, 8, 6, 9, 4]\n  }, {\n    name: \"Reborn Kid\",\n    data: [25, 12, 19, 32, 25, 24, 10]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true,\n      stackType: \"100%\",\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    title: {\n      text: \"100% Stacked Bar\",\n      style: {\n        fontWeight: 600\n      }\n    },\n    xaxis: {\n      categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014]\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    fill: {\n      opacity: 1\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n      offsetX: 40\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]')\n  }\n};\n\n// Bar with Negative Values\n\nconst barNegativeChart = {\n  series: [{\n    name: \"Males\",\n    data: [0.4, 0.65, 0.76, 0.88, 1.5, 2.1, 2.9, 3.8, 3.9, 4.2, 4, 4.3, 4.1, 4.2, 4.5, 3.9, 3.5, 3]\n  }, {\n    name: \"Females\",\n    data: [-0.8, -1.05, -1.06, -1.18, -1.4, -2.2, -2.85, -3.7, -3.96, -4.22, -4.3, -4.4, -4.1, -4, -4.1, -3.4, -3.1, -2.8]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 360,\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]'),\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        barHeight: \"80%\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false\n        }\n      }\n    },\n    yaxis: {\n      min: -5,\n      max: 5,\n      title: {\n        text: \"Age\",\n        style: {\n          fontWeight: 600\n        }\n      }\n    },\n    tooltip: {\n      shared: false,\n      x: {\n        formatter: function (val) {\n          return val;\n        }\n      },\n      y: {\n        formatter: function (val) {\n          return Math.abs(val) + \"%\";\n        }\n      }\n    },\n    title: {\n      text: \"Mauritius population pyramid 2011\",\n      style: {\n        fontWeight: 600\n      }\n    },\n    xaxis: {\n      categories: [\"85+\", \"80-84\", \"75-79\", \"70-74\", \"65-69\", \"60-64\", \"55-59\", \"50-54\", \"45-49\", \"40-44\", \"35-39\", \"30-34\", \"25-29\", \"20-24\", \"15-19\", \"10-14\", \"5-9\", \"0-4\"],\n      title: {\n        text: \"Percent\"\n      },\n      labels: {\n        formatter: function (val) {\n          return Math.abs(Math.round(val)) + \"%\";\n        }\n      }\n    }\n  }\n};\n\n// Bar with Markers\nconst barMarkersChart = {\n  series: [{\n    name: \"Actual\",\n    data: [{\n      x: \"2011\",\n      y: 12,\n      goals: [{\n        name: \"Expected\",\n        value: 14,\n        strokeWidth: 5,\n        strokeColor: \"#564ab1\"\n      }]\n    }, {\n      x: \"2012\",\n      y: 44,\n      goals: [{\n        name: \"Expected\",\n        value: 54,\n        strokeWidth: 5,\n        strokeColor: \"#564ab1\"\n      }]\n    }, {\n      x: \"2013\",\n      y: 54,\n      goals: [{\n        name: \"Expected\",\n        value: 52,\n        strokeWidth: 5,\n        strokeColor: \"#564ab1\"\n      }]\n    }, {\n      x: \"2014\",\n      y: 66,\n      goals: [{\n        name: \"Expected\",\n        value: 65,\n        strokeWidth: 5,\n        strokeColor: \"#564ab1\"\n      }]\n    }, {\n      x: \"2015\",\n      y: 81,\n      goals: [{\n        name: \"Expected\",\n        value: 66,\n        strokeWidth: 5,\n        strokeColor: \"#564ab1\"\n      }]\n    }, {\n      x: \"2016\",\n      y: 67,\n      goals: [{\n        name: \"Expected\",\n        value: 70,\n        strokeWidth: 5,\n        strokeColor: \"#564ab1\"\n      }]\n    }]\n  }],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"bar\",\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    },\n    colors: getChartColorsArray('[\"--vz-success\", \"--vz-primary\"]'),\n    dataLabels: {\n      formatter: function (val, opt) {\n        var goals = opt.w.config.series[opt.seriesIndex].data[opt.dataPointIndex].goals;\n        if (goals && goals.length) {\n          return `${val} / ${goals[0].value}`;\n        }\n        return val;\n      }\n    },\n    legend: {\n      show: true,\n      showForSingleSeries: true,\n      customLegendItems: [\"Actual\", \"Expected\"],\n      markers: {\n        fillColors: getChartColorsArray('[\"--vz-success\", \"--vz-primary\"]')\n      }\n    }\n  }\n};\n\n// Reversed Bar Chart\n\nconst reversedBarChart = {\n  series: [{\n    data: [400, 430, 448, 470, 540, 580, 690]\n  }],\n  chartOptions: {\n    colors: getChartColorsArray('[\"--vz-info\"]'),\n    chart: {\n      type: \"bar\",\n      height: 350,\n      toolbar: {\n        show: false\n      }\n    },\n    annotations: {\n      xaxis: [{\n        x: 500,\n        borderColor: \"#299CDB\",\n        label: {\n          borderColor: \"#299CDB\",\n          style: {\n            color: \"#fff\",\n            background: \"#299CDB\"\n          },\n          text: \"X annotation\"\n        }\n      }],\n      yaxis: [{\n        y: \"July\",\n        y2: \"September\",\n        label: {\n          text: \"Y annotation\"\n        }\n      }]\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    },\n    dataLabels: {\n      enabled: true\n    },\n    xaxis: {\n      categories: [\"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: true\n        }\n      }\n    },\n    yaxis: {\n      reversed: true,\n      axisTicks: {\n        show: true\n      }\n    }\n  }\n};\n\n// Patterned Charts\n\nconst patternedBarChart = {\n  series: [{\n    name: \"Marine Sprite\",\n    data: [44, 55, 41, 37, 22, 43, 21]\n  }, {\n    name: \"Striking Calf\",\n    data: [53, 32, 33, 52, 13, 43, 32]\n  }, {\n    name: \"Tank Picture\",\n    data: [12, 17, 11, 9, 15, 11, 20]\n  }, {\n    name: \"Bucket Slope\",\n    data: [9, 7, 5, 8, 6, 9, 4]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true,\n      dropShadow: {\n        enabled: true,\n        blur: 1,\n        opacity: 0.25\n      },\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        barHeight: \"60%\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: 2\n    },\n    title: {\n      text: \"Compare Sales Strategy\",\n      style: {\n        fontWeight: 600\n      }\n    },\n    xaxis: {\n      categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014]\n    },\n    yaxis: {\n      title: {\n        text: undefined\n      }\n    },\n    tooltip: {\n      shared: false,\n      y: {\n        formatter: function (val) {\n          return val + \"K\";\n        }\n      }\n    },\n    fill: {\n      type: \"pattern\",\n      opacity: 1,\n      pattern: {\n        style: [\"circles\", \"slantedLines\", \"verticalLines\", \"horizontalLines\"] // string or array of strings\n      }\n    },\n    states: {\n      hover: {\n        filter: \"none\"\n      }\n    },\n    legend: {\n      position: \"right\",\n      offsetY: 40\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\"]')\n  }\n};\n\n// Groupes Bar Charts\n\nconst groupedBarChart = {\n  series: [{\n    data: [44, 55, 41, 64, 22, 43, 21]\n  }, {\n    data: [53, 32, 33, 52, 13, 44, 32]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 410,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        dataLabels: {\n          position: \"top\"\n        }\n      }\n    },\n    dataLabels: {\n      enabled: true,\n      offsetX: -6,\n      style: {\n        fontSize: \"12px\",\n        colors: [\"#fff\"]\n      }\n    },\n    stroke: {\n      show: true,\n      width: 1,\n      colors: [\"#fff\"]\n    },\n    tooltip: {\n      shared: true,\n      intersect: false\n    },\n    xaxis: {\n      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007]\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]')\n  }\n};\n\n// Bar with Images\n\nconst barImagesChart = {\n  series: [{\n    name: \"coins\",\n    data: [2, 4, 3, 4, 3, 5, 5, 6.5, 6, 5, 4, 5, 8, 7, 7, 8, 8, 10, 9, 9, 12, 12, 11, 12, 13, 14, 16, 14, 15, 17, 19, 21]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 410,\n      animations: {\n        enabled: false\n      },\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        barHeight: \"100%\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      colors: [\"#fff\"],\n      width: 0.2\n    },\n    labels: Array.apply(null, {\n      length: 39\n    }).map(function (el, index) {\n      return index + 1;\n    }),\n    yaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false\n      },\n      title: {\n        text: \"Weight\"\n      }\n    },\n    grid: {\n      position: \"back\"\n    },\n    title: {\n      text: \"Paths filled by clipped image\",\n      align: \"right\",\n      offsetY: 30,\n      style: {\n        fontWeight: 600\n      }\n    },\n    fill: {\n      type: \"image\",\n      opacity: .87,\n      image: {\n        src: [\"@/assets/images/small/img-4.jpg\"],\n        width: 466,\n        height: 406\n      }\n    }\n  }\n};\nexport { basicBarChart, customDatalabelsChart, stackedBarChart, stackedBar100Chart, barNegativeChart, barMarkersChart, reversedBarChart, patternedBarChart, groupedBarChart, barImagesChart };","map":{"version":3,"names":["getChartColorsArray","colors","JSON","parse","map","value","newValue","replace","indexOf","color","getComputedStyle","document","documentElement","getPropertyValue","val","split","length","rgbaColor","basicBarChart","series","data","chartOptions","chart","height","type","toolbar","show","plotOptions","bar","horizontal","dataLabels","enabled","grid","borderColor","xaxis","categories","customDatalabelsChart","barHeight","distributed","position","textAnchor","style","formatter","opt","w","globals","labels","dataPointIndex","offsetX","dropShadow","stroke","width","yaxis","title","text","align","floating","fontWeight","subtitle","tooltip","theme","x","y","stackedBarChart","name","stacked","undefined","fill","opacity","legend","horizontalAlign","stackedBar100Chart","stackType","barNegativeChart","lines","min","max","shared","Math","abs","round","barMarkersChart","goals","strokeWidth","strokeColor","config","seriesIndex","showForSingleSeries","customLegendItems","markers","fillColors","reversedBarChart","annotations","label","background","y2","reversed","axisTicks","patternedBarChart","blur","pattern","states","hover","filter","offsetY","groupedBarChart","fontSize","intersect","barImagesChart","animations","Array","apply","el","index","axisBorder","image","src"],"sources":["C:/Users/UMIDJON/Desktop/default2/src/views/charts/apex/bar/data.js"],"sourcesContent":["// Basic Bar chart\nfunction getChartColorsArray(colors){\n  colors = JSON.parse(colors);\n  return colors.map(function (value) {\n    var newValue = value.replace(\" \", \"\");\n    if (newValue.indexOf(\",\") === -1) {\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\n          if (color) {\n          color = color.replace(\" \", \"\");\n          return color;\n          }\n          else return newValue;\n      } else {\n          var val = value.split(',');\n          if (val.length == 2) {\n              var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\n              rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\n              return rgbaColor;\n          } else {\n              return newValue;\n          }\n      }\n  });\n}\nconst basicBarChart = {\n  series: [{\n    data: [380, 430, 450, 475, 550, 584, 780, 1100, 1220, 1365],\n  }, ],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"bar\",\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    colors: getChartColorsArray('[\"--vz-success\"]'),\n    grid: {\n      borderColor: \"#f1f1f1\",\n    },\n    xaxis: {\n      categories: [\n        \"South Korea\",\n        \"Canada\",\n        \"United Kingdom\",\n        \"Netherlands\",\n        \"Italy\",\n        \"France\",\n        \"Japan\",\n        \"United States\",\n        \"China\",\n        \"Germany\",\n      ],\n    },\n  },\n};\n\n// Custom DataLabels Bar\n\nconst customDatalabelsChart = {\n  series: [{\n    data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380],\n  }, ],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        barHeight: \"100%\",\n        distributed: true,\n        horizontal: true,\n        dataLabels: {\n          position: \"bottom\",\n        },\n      },\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-secondary\", \"--vz-success\", \"--vz-info\", \"--vz-warning\", \"--vz-danger\", \"--vz-dark\", \"--vz-primary\", \"--vz-success\", \"--vz-secondary\"]'),\n    dataLabels: {\n      enabled: true,\n      textAnchor: \"start\",\n      style: {\n        colors: [\"#fff\"],\n      },\n      formatter: function (val, opt) {\n        return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n      },\n      offsetX: 0,\n      dropShadow: {\n        enabled: false,\n      },\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"],\n    },\n    xaxis: {\n      categories: [\n        \"South Korea\",\n        \"Canada\",\n        \"United Kingdom\",\n        \"Netherlands\",\n        \"Italy\",\n        \"France\",\n        \"Japan\",\n        \"United States\",\n        \"China\",\n        \"India\",\n      ],\n    },\n    yaxis: {\n      labels: {\n        show: false,\n      },\n    },\n    title: {\n      text: \"Custom DataLabels\",\n      align: \"center\",\n      floating: true,\n      style: {\n        fontWeight: 600,\n      },\n    },\n    subtitle: {\n      text: \"Category Names as DataLabels inside bars\",\n      align: \"center\",\n    },\n    tooltip: {\n      theme: \"dark\",\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: function () {\n            return \"\";\n          },\n        },\n      },\n    },\n  },\n};\n\n// Stacked Bar Charts\n\nconst stackedBarChart = {\n  series: [{\n      name: \"Marine Sprite\",\n      data: [44, 55, 41, 37, 22, 43, 21],\n    },\n    {\n      name: \"Striking Calf\",\n      data: [53, 32, 33, 52, 13, 43, 32],\n    },\n    {\n      name: \"Tank Picture\",\n      data: [12, 17, 11, 9, 15, 11, 20],\n    },\n    {\n      name: \"Bucket Slope\",\n      data: [9, 7, 5, 8, 6, 9, 4],\n    },\n    {\n      name: \"Reborn Kid\",\n      data: [25, 12, 19, 32, 25, 24, 10],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      },\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"],\n    },\n    title: {\n      text: \"Fiction Books Sales\",\n      style: {\n        fontWeight: 600,\n      },\n    },\n    xaxis: {\n      categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n      labels: {\n        formatter: function (val) {\n          return val + \"K\";\n        },\n      },\n    },\n    yaxis: {\n      title: {\n        text: undefined,\n      },\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val + \"K\";\n        },\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n      offsetX: 40,\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\n  },\n};\n\n// Stacked Bars 100\n\nconst stackedBar100Chart = {\n  series: [{\n      name: \"Marine Sprite\",\n      data: [44, 55, 41, 37, 22, 43, 21],\n    },\n    {\n      name: \"Striking Calf\",\n      data: [53, 32, 33, 52, 13, 43, 32],\n    },\n    {\n      name: \"Tank Picture\",\n      data: [12, 17, 11, 9, 15, 11, 20],\n    },\n    {\n      name: \"Bucket Slope\",\n      data: [9, 7, 5, 8, 6, 9, 4],\n    },\n    {\n      name: \"Reborn Kid\",\n      data: [25, 12, 19, 32, 25, 24, 10],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true,\n      stackType: \"100%\",\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      },\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"],\n    },\n    title: {\n      text: \"100% Stacked Bar\",\n      style: {\n        fontWeight: 600,\n      },\n    },\n    xaxis: {\n      categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n    },\n    tooltip: {\n      y: {\n        formatter: function (val) {\n          return val + \"K\";\n        },\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n      offsetX: 40,\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\", \"--vz-info\"]'),\n  },\n};\n\n// Bar with Negative Values\n\nconst barNegativeChart = {\n  series: [{\n      name: \"Males\",\n      data: [\n        0.4,\n        0.65,\n        0.76,\n        0.88,\n        1.5,\n        2.1,\n        2.9,\n        3.8,\n        3.9,\n        4.2,\n        4,\n        4.3,\n        4.1,\n        4.2,\n        4.5,\n        3.9,\n        3.5,\n        3,\n      ],\n    },\n    {\n      name: \"Females\",\n      data: [\n        -0.8,\n        -1.05,\n        -1.06,\n        -1.18,\n        -1.4,\n        -2.2,\n        -2.85,\n        -3.7,\n        -3.96,\n        -4.22,\n        -4.3,\n        -4.4,\n        -4.1,\n        -4,\n        -4.1,\n        -3.4,\n        -3.1,\n        -2.8,\n      ],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 360,\n      stacked: true,\n      toolbar: {\n        show: false,\n      },\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]'),\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        barHeight: \"80%\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      width: 1,\n      colors: [\"#fff\"],\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: false,\n        },\n      },\n    },\n    yaxis: {\n      min: -5,\n      max: 5,\n      title: {\n        text: \"Age\",\n        style: {\n          fontWeight: 600,\n        },\n      },\n    },\n    tooltip: {\n      shared: false,\n      x: {\n        formatter: function (val) {\n          return val;\n        },\n      },\n      y: {\n        formatter: function (val) {\n          return Math.abs(val) + \"%\";\n        },\n      },\n    },\n    title: {\n      text: \"Mauritius population pyramid 2011\",\n      style: {\n        fontWeight: 600,\n      },\n    },\n    xaxis: {\n      categories: [\n        \"85+\",\n        \"80-84\",\n        \"75-79\",\n        \"70-74\",\n        \"65-69\",\n        \"60-64\",\n        \"55-59\",\n        \"50-54\",\n        \"45-49\",\n        \"40-44\",\n        \"35-39\",\n        \"30-34\",\n        \"25-29\",\n        \"20-24\",\n        \"15-19\",\n        \"10-14\",\n        \"5-9\",\n        \"0-4\",\n      ],\n      title: {\n        text: \"Percent\",\n      },\n      labels: {\n        formatter: function (val) {\n          return Math.abs(Math.round(val)) + \"%\";\n        },\n      },\n    },\n  },\n};\n\n// Bar with Markers\nconst barMarkersChart = {\n  series: [{\n    name: \"Actual\",\n    data: [{\n        x: \"2011\",\n        y: 12,\n        goals: [{\n          name: \"Expected\",\n          value: 14,\n          strokeWidth: 5,\n          strokeColor: \"#564ab1\",\n        }, ],\n      },\n      {\n        x: \"2012\",\n        y: 44,\n        goals: [{\n          name: \"Expected\",\n          value: 54,\n          strokeWidth: 5,\n          strokeColor: \"#564ab1\",\n        }, ],\n      },\n      {\n        x: \"2013\",\n        y: 54,\n        goals: [{\n          name: \"Expected\",\n          value: 52,\n          strokeWidth: 5,\n          strokeColor: \"#564ab1\",\n        }, ],\n      },\n      {\n        x: \"2014\",\n        y: 66,\n        goals: [{\n          name: \"Expected\",\n          value: 65,\n          strokeWidth: 5,\n          strokeColor: \"#564ab1\",\n        }, ],\n      },\n      {\n        x: \"2015\",\n        y: 81,\n        goals: [{\n          name: \"Expected\",\n          value: 66,\n          strokeWidth: 5,\n          strokeColor: \"#564ab1\",\n        }, ],\n      },\n      {\n        x: \"2016\",\n        y: 67,\n        goals: [{\n          name: \"Expected\",\n          value: 70,\n          strokeWidth: 5,\n          strokeColor: \"#564ab1\",\n        }, ],\n      },\n    ],\n  }, ],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"bar\",\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      },\n    },\n    colors: getChartColorsArray('[\"--vz-success\", \"--vz-primary\"]'),\n    dataLabels: {\n      formatter: function (val, opt) {\n        var goals =\n          opt.w.config.series[opt.seriesIndex].data[opt.dataPointIndex].goals;\n\n        if (goals && goals.length) {\n          return `${val} / ${goals[0].value}`;\n        }\n        return val;\n      },\n    },\n    legend: {\n      show: true,\n      showForSingleSeries: true,\n      customLegendItems: [\"Actual\", \"Expected\"],\n      markers: {\n        fillColors: getChartColorsArray('[\"--vz-success\", \"--vz-primary\"]'),\n      },\n    },\n  },\n};\n\n// Reversed Bar Chart\n\nconst reversedBarChart = {\n  series: [{\n    data: [400, 430, 448, 470, 540, 580, 690],\n  }, ],\n  chartOptions: {\n    colors: getChartColorsArray('[\"--vz-info\"]'),\n    chart: {\n      type: \"bar\",\n      height: 350,\n      toolbar: {\n        show: false,\n      },\n    },\n    annotations: {\n      xaxis: [{\n        x: 500,\n        borderColor: \"#299CDB\",\n        label: {\n          borderColor: \"#299CDB\",\n          style: {\n            color: \"#fff\",\n            background: \"#299CDB\",\n          },\n          text: \"X annotation\",\n        },\n      }, ],\n      yaxis: [{\n        y: \"July\",\n        y2: \"September\",\n        label: {\n          text: \"Y annotation\",\n        },\n      }, ],\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      },\n    },\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      categories: [\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ],\n    },\n    grid: {\n      xaxis: {\n        lines: {\n          show: true,\n        },\n      },\n    },\n    yaxis: {\n      reversed: true,\n      axisTicks: {\n        show: true,\n      },\n    },\n  },\n};\n\n// Patterned Charts\n\nconst patternedBarChart = {\n  series: [{\n      name: \"Marine Sprite\",\n      data: [44, 55, 41, 37, 22, 43, 21],\n    },\n    {\n      name: \"Striking Calf\",\n      data: [53, 32, 33, 52, 13, 43, 32],\n    },\n    {\n      name: \"Tank Picture\",\n      data: [12, 17, 11, 9, 15, 11, 20],\n    },\n    {\n      name: \"Bucket Slope\",\n      data: [9, 7, 5, 8, 6, 9, 4],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true,\n      dropShadow: {\n        enabled: true,\n        blur: 1,\n        opacity: 0.25,\n      },\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        barHeight: \"60%\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      width: 2,\n    },\n    title: {\n      text: \"Compare Sales Strategy\",\n      style: {\n        fontWeight: 600,\n      },\n    },\n    xaxis: {\n      categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n    },\n    yaxis: {\n      title: {\n        text: undefined,\n      },\n    },\n    tooltip: {\n      shared: false,\n      y: {\n        formatter: function (val) {\n          return val + \"K\";\n        },\n      },\n    },\n    fill: {\n      type: \"pattern\",\n      opacity: 1,\n      pattern: {\n        style: [\"circles\", \"slantedLines\", \"verticalLines\", \"horizontalLines\"], // string or array of strings\n      },\n    },\n    states: {\n      hover: {\n        filter: \"none\",\n      },\n    },\n    legend: {\n      position: \"right\",\n      offsetY: 40,\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\", \"--vz-warning\", \"--vz-danger\"]'),\n  },\n};\n\n// Groupes Bar Charts\n\nconst groupedBarChart = {\n  series: [{\n      data: [44, 55, 41, 64, 22, 43, 21],\n    },\n    {\n      data: [53, 32, 33, 52, 13, 44, 32],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 410,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        dataLabels: {\n          position: \"top\",\n        },\n      },\n    },\n    dataLabels: {\n      enabled: true,\n      offsetX: -6,\n      style: {\n        fontSize: \"12px\",\n        colors: [\"#fff\"],\n      },\n    },\n    stroke: {\n      show: true,\n      width: 1,\n      colors: [\"#fff\"],\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n    },\n    xaxis: {\n      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]'),\n  },\n};\n\n// Bar with Images\n\nconst barImagesChart = {\n  series: [{\n    name: \"coins\",\n    data: [\n      2,\n      4,\n      3,\n      4,\n      3,\n      5,\n      5,\n      6.5,\n      6,\n      5,\n      4,\n      5,\n      8,\n      7,\n      7,\n      8,\n      8,\n      10,\n      9,\n      9,\n      12,\n      12,\n      11,\n      12,\n      13,\n      14,\n      16,\n      14,\n      15,\n      17,\n      19,\n      21,\n    ],\n  }, ],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 410,\n      animations: {\n        enabled: false,\n      },\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        barHeight: \"100%\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      colors: [\"#fff\"],\n      width: 0.2,\n    },\n    labels: Array.apply(null, {\n      length: 39,\n    }).map(function (el, index) {\n      return index + 1;\n    }),\n    yaxis: {\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n      labels: {\n        show: false,\n      },\n      title: {\n        text: \"Weight\",\n      },\n    },\n    grid: {\n      position: \"back\",\n    },\n    title: {\n      text: \"Paths filled by clipped image\",\n      align: \"right\",\n      offsetY: 30,\n      style: {\n        fontWeight: 600,\n      },\n    },\n    fill: {\n      type: \"image\",\n      opacity: .87,\n      image: {\n        src: [\"@/assets/images/small/img-4.jpg\"],\n        width: 466,\n        height: 406\n      }\n    }\n  },\n};\n\nexport {\n  basicBarChart,\n  customDatalabelsChart,  \n  stackedBarChart,\n  stackedBar100Chart,\n  barNegativeChart,\n  barMarkersChart,\n  reversedBarChart,\n  patternedBarChart,\n  groupedBarChart,\n  barImagesChart,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}