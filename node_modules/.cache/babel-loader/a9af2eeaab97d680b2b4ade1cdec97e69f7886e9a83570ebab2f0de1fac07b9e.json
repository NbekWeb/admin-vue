{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nexport default {\n  page: {\n    title: \"Персонал\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data() {\n    return {\n      title: \"Персонал\",\n      items: [{\n        text: \"Tables\",\n        href: \"/\"\n      }, {\n        text: \"Grid Js\",\n        active: true\n      }],\n      searchQuery: null,\n      data: [{\n        id: 1,\n        name: \"Оператор 1\",\n        email: \"jonathan@example.com\",\n        position: \"Администратор\"\n      }, {\n        id: 2,\n        name: \"Оператор 2\",\n        email: \"harold@example.com\",\n        position: \"Оператор\"\n      }, {\n        id: 3,\n        name: \"Оператор 3\",\n        email: \"shannon@example.com\",\n        position: \"Пользователь\"\n      }],\n      page: 1,\n      perPage: 5,\n      pages: []\n    };\n  },\n  name: \"Widgets\",\n  components: {\n    Layout,\n    PageHeader\n  },\n  computed: {\n    displayedPosts() {\n      return this.paginate(this.data);\n    },\n    resultQuery() {\n      if (this.searchQuery) {\n        const search = this.searchQuery.toLowerCase();\n        return this.displayedPosts.filter(data => {\n          return data.id.toLowerCase().includes(search) || data.name.toLowerCase().includes(search) || data.email.toLowerCase().includes(search) || data.position.toLowerCase().includes(search);\n        });\n      } else {\n        return this.displayedPosts;\n      }\n    }\n  },\n  watch: {\n    posts() {\n      this.setPages();\n    }\n  },\n  created() {\n    this.setPages();\n  },\n  filters: {\n    trimWords(value) {\n      return value.split(\" \").splice(0, 20).join(\" \") + \"...\";\n    }\n  },\n  methods: {\n    setPages() {\n      let numberOfPages = Math.ceil(this.data.length / this.perPage);\n      for (let index = 1; index <= numberOfPages; index++) {\n        this.pages.push(index);\n      }\n    },\n    paginate(data) {\n      let page = this.page;\n      let perPage = this.perPage;\n      let from = page * perPage - perPage;\n      let to = page * perPage;\n      return data.slice(from, to);\n    }\n  }\n};","map":{"version":3,"names":["Layout","PageHeader","appConfig","page","title","meta","name","content","description","data","items","text","href","active","searchQuery","id","email","position","perPage","pages","components","computed","displayedPosts","paginate","resultQuery","search","toLowerCase","filter","includes","watch","posts","setPages","created","filters","trimWords","value","split","splice","join","methods","numberOfPages","Math","ceil","length","index","push","from","to","slice"],"sources":["C:\\Users\\UMIDJON\\Desktop\\default2\\src\\views\\tables\\staff.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\n\nexport default {\n  page: {\n    title: \"Персонал\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }],\n  },\n  data() {\n    return {\n      title: \"Персонал\",\n      items: [{\n        text: \"Tables\",\n        href: \"/\",\n      },\n      {\n        text: \"Grid Js\",\n        active: true,\n      },\n      ],\n      searchQuery: null,\n      data: [{\n        id: 1,\n        name: \"Оператор 1\",\n        email: \"jonathan@example.com\",\n        position: \"Администратор\",\n      },\n      {\n        id: 2,\n        name: \"Оператор 2\",\n        email: \"harold@example.com\",\n        position: \"Оператор\",\n      },\n      {\n        id: 3,\n        name: \"Оператор 3\",\n        email: \"shannon@example.com\",\n        position: \"Пользователь\",\n      },\n      ],\n      page: 1,\n      perPage: 5,\n      pages: [],\n    };\n  },\n  name: \"Widgets\",\n  components: {\n    Layout,\n    PageHeader,\n  },\n  computed: {\n    displayedPosts() {\n      return this.paginate(this.data);\n    },\n    resultQuery() {\n      if (this.searchQuery) {\n        const search = this.searchQuery.toLowerCase();\n        return this.displayedPosts.filter((data) => {\n          return (\n            data.id.toLowerCase().includes(search) ||\n            data.name.toLowerCase().includes(search) ||\n            data.email.toLowerCase().includes(search) ||\n            data.position.toLowerCase().includes(search)\n          );\n        });\n      } else {\n        return this.displayedPosts;\n      }\n    },\n  },\n  watch: {\n    posts() {\n      this.setPages();\n    },\n  },\n  created() {\n    this.setPages();\n  },\n  filters: {\n    trimWords(value) {\n      return value.split(\" \").splice(0, 20).join(\" \") + \"...\";\n    },\n  },\n  methods: {\n    setPages() {\n      let numberOfPages = Math.ceil(this.data.length / this.perPage);\n      for (let index = 1; index <= numberOfPages; index++) {\n        this.pages.push(index);\n      }\n    },\n    paginate(data) {\n      let page = this.page;\n      let perPage = this.perPage;\n      let from = page * perPage - perPage;\n      let to = page * perPage;\n      return data.slice(from, to);\n    },\n  },\n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    <b-row>\n      <b-card no-body class=\"card-body\">\n        <b-card-body>\n          <div class=\"table-responsive table-card\">\n            <table class=\"table align-middle table-nowrap\" id=\"customerTable\">\n              <thead class=\"table-light text-muted\">\n                <tr>\n                  <th class=\"sort\" data-sort=\"currency_name\" scope=\"col\">ID</th>\n                  <th class=\"sort\" data-sort=\"current_value\" scope=\"col\">Name</th>\n                  <th class=\"sort\" data-sort=\"pairs\" scope=\"col\">Email</th>\n                  <th class=\"sort\" data-sort=\"high\" scope=\"col\">Position</th>\n                  <th scope=\"col\">Действия</th>\n                </tr>\n              </thead>\n              <tbody class=\"list form-check-all\">\n                <tr v-for=\"(data, index) of resultQuery\" :key=\"index\">\n                  <td class=\"id\">\n                    {{ data.id }}\n                  </td>\n                  <td>{{ data.name }}</td>\n                  <td class=\"pairs\">{{ data.email }}</td>\n                  <td class=\"high\">{{ data.position }}</td>\n                  <td>\n                    <span>\n                      <b-link href=\"#\" class=\"text-reset text-decoration-underline\">Изменить</b-link>\n                    </span>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"d-flex justify-content-end mt-3\">\n            <div class=\"pagination-wrap hstack gap-2\">\n              <b-link class=\"page-item pagination-prev\" href=\"#\" v-if=\"page != 1\" @click=\"page--\">\n                Previous\n              </b-link>\n              <ul class=\"pagination listjs-pagination mb-0\">\n                <li :class=\"{\n                  active: pageNumber == page,\n                  disabled: pageNumber == '...',\n                }\" v-for=\"(pageNumber, index) in pages.slice(page - 1, page + 5)\" :key=\"index\"\n                  @click=\"page = pageNumber\">\n                  <b-link class=\"page\" href=\"#\">{{ pageNumber }}</b-link>\n                </li>\n              </ul>\n              <b-link class=\"page-item pagination-next\" href=\"#\" @click=\"page++\" v-if=\"page < pages.length\">\n                Next\n              </b-link>\n            </div>\n          </div>\n        </b-card-body>\n      </b-card>\n    </b-row>\n  </Layout>\n</template>"],"mappings":";AACA,OAAOA,MAAK,MAAO,wBAAwB;AAC3C,OAAOC,UAAS,MAAO,0BAA0B;AACjD,OAAOC,SAAQ,MAAO,qBAAqB;AAE3C,eAAe;EACbC,IAAI,EAAE;IACJC,KAAK,EAAE,UAAU;IACjBC,IAAI,EAAE,CAAC;MACLC,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAEL,SAAS,CAACM;IACrB,CAAC;EACH,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLL,KAAK,EAAE,UAAU;MACjBM,KAAK,EAAE,CAAC;QACNC,IAAI,EAAE,QAAQ;QACdC,IAAI,EAAE;MACR,CAAC,EACD;QACED,IAAI,EAAE,SAAS;QACfE,MAAM,EAAE;MACV,CAAC,CACA;MACDC,WAAW,EAAE,IAAI;MACjBL,IAAI,EAAE,CAAC;QACLM,EAAE,EAAE,CAAC;QACLT,IAAI,EAAE,YAAY;QAClBU,KAAK,EAAE,sBAAsB;QAC7BC,QAAQ,EAAE;MACZ,CAAC,EACD;QACEF,EAAE,EAAE,CAAC;QACLT,IAAI,EAAE,YAAY;QAClBU,KAAK,EAAE,oBAAoB;QAC3BC,QAAQ,EAAE;MACZ,CAAC,EACD;QACEF,EAAE,EAAE,CAAC;QACLT,IAAI,EAAE,YAAY;QAClBU,KAAK,EAAE,qBAAqB;QAC5BC,QAAQ,EAAE;MACZ,CAAC,CACA;MACDd,IAAI,EAAE,CAAC;MACPe,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDb,IAAI,EAAE,SAAS;EACfc,UAAU,EAAE;IACVpB,MAAM;IACNC;EACF,CAAC;EACDoB,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACd,IAAI,CAAC;IACjC,CAAC;IACDe,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACV,WAAW,EAAE;QACpB,MAAMW,MAAK,GAAI,IAAI,CAACX,WAAW,CAACY,WAAW,CAAC,CAAC;QAC7C,OAAO,IAAI,CAACJ,cAAc,CAACK,MAAM,CAAElB,IAAI,IAAK;UAC1C,OACEA,IAAI,CAACM,EAAE,CAACW,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,MAAM,KACrChB,IAAI,CAACH,IAAI,CAACoB,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,MAAM,KACvChB,IAAI,CAACO,KAAK,CAACU,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,MAAM,KACxChB,IAAI,CAACQ,QAAQ,CAACS,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,MAAM;QAE/C,CAAC,CAAC;MACJ,OAAO;QACL,OAAO,IAAI,CAACH,cAAc;MAC5B;IACF;EACF,CAAC;EACDO,KAAK,EAAE;IACLC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACC,QAAQ,CAAC,CAAC;IACjB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDE,OAAO,EAAE;IACPC,SAASA,CAACC,KAAK,EAAE;MACf,OAAOA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,GAAG,IAAI,KAAK;IACzD;EACF,CAAC;EACDC,OAAO,EAAE;IACPR,QAAQA,CAAA,EAAG;MACT,IAAIS,aAAY,GAAIC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACjC,IAAI,CAACkC,MAAK,GAAI,IAAI,CAACzB,OAAO,CAAC;MAC9D,KAAK,IAAI0B,KAAI,GAAI,CAAC,EAAEA,KAAI,IAAKJ,aAAa,EAAEI,KAAK,EAAE,EAAE;QACnD,IAAI,CAACzB,KAAK,CAAC0B,IAAI,CAACD,KAAK,CAAC;MACxB;IACF,CAAC;IACDrB,QAAQA,CAACd,IAAI,EAAE;MACb,IAAIN,IAAG,GAAI,IAAI,CAACA,IAAI;MACpB,IAAIe,OAAM,GAAI,IAAI,CAACA,OAAO;MAC1B,IAAI4B,IAAG,GAAI3C,IAAG,GAAIe,OAAM,GAAIA,OAAO;MACnC,IAAI6B,EAAC,GAAI5C,IAAG,GAAIe,OAAO;MACvB,OAAOT,IAAI,CAACuC,KAAK,CAACF,IAAI,EAAEC,EAAE,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}