{"ast":null,"code":"function getChartColorsArray(colors) {\n  colors = JSON.parse(colors);\n  return colors.map(function (value) {\n    var newValue = value.replace(\" \", \"\");\n    if (newValue.indexOf(\",\") === -1) {\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\n      if (color) {\n        color = color.replace(\" \", \"\");\n        return color;\n      } else return newValue;\n    } else {\n      var val = value.split(',');\n      if (val.length == 2) {\n        var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\n        rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\n        return rgbaColor;\n      } else {\n        return newValue;\n      }\n    }\n  });\n}\nexport default {\n  setup() {\n    return {\n      series: [{\n        name: \"Revenue\",\n        data: [20, 25, 30, 35, 40, 55, 70, 110, 150, 180, 210, 250]\n      }, {\n        name: \"Expenses\",\n        data: [12, 17, 45, 42, 24, 35, 42, 75, 102, 108, 156, 199]\n      }],\n      chartOptions: {\n        chart: {\n          height: 290,\n          type: \"area\",\n          toolbar: \"false\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 2\n        },\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        },\n        yaxis: {\n          labels: {\n            formatter: function (value) {\n              return \"$\" + value + \"k\";\n            }\n          },\n          tickAmount: 5,\n          min: 0,\n          max: 260\n        },\n        colors: getChartColorsArray('[\"--vz-success\", \"--vz-danger\"]'),\n        fill: {\n          opacity: 0.06,\n          colors: [\"#0AB39C\", \"#F06548\"],\n          type: \"solid\"\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["getChartColorsArray","colors","JSON","parse","map","value","newValue","replace","indexOf","color","getComputedStyle","document","documentElement","getPropertyValue","val","split","length","rgbaColor","setup","series","name","data","chartOptions","chart","height","type","toolbar","dataLabels","enabled","stroke","curve","width","xaxis","categories","yaxis","labels","formatter","tickAmount","min","max","fill","opacity"],"sources":["C:\\Users\\UMIDJON\\Desktop\\default2\\src\\views\\dashboard\\crm\\balance-overview.vue"],"sourcesContent":["<script>\nfunction getChartColorsArray(colors) {\n  colors = JSON.parse(colors);\n  return colors.map(function (value) {\n    var newValue = value.replace(\" \", \"\");\n    if (newValue.indexOf(\",\") === -1) {\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\n      if (color) {\n        color = color.replace(\" \", \"\");\n        return color;\n      } else return newValue;\n    } else {\n      var val = value.split(',');\n      if (val.length == 2) {\n        var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\n        rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\n        return rgbaColor;\n      } else {\n        return newValue;\n      }\n    }\n  });\n}\nexport default {\n  setup() {\n    return {\n      series: [{\n        name: \"Revenue\",\n        data: [20, 25, 30, 35, 40, 55, 70, 110, 150, 180, 210, 250],\n      },\n      {\n        name: \"Expenses\",\n        data: [12, 17, 45, 42, 24, 35, 42, 75, 102, 108, 156, 199],\n      },\n      ],\n      chartOptions: {\n        chart: {\n          height: 290,\n          type: \"area\",\n          toolbar: \"false\",\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 2,\n        },\n        xaxis: {\n          categories: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n          ],\n        },\n        yaxis: {\n          labels: {\n            formatter: function (value) {\n              return \"$\" + value + \"k\";\n            },\n          },\n          tickAmount: 5,\n          min: 0,\n          max: 260,\n        },\n        colors: getChartColorsArray('[\"--vz-success\", \"--vz-danger\"]'),\n        fill: {\n          opacity: 0.06,\n          colors: [\"#0AB39C\", \"#F06548\"],\n          type: \"solid\",\n        },\n      },\n    };\n  },\n};\n</script>\n\n<template>\n  <b-card no-body class=\"card-height-100\">\n    <b-card-header class=\"align-items-center d-flex\">\n      <b-card-title class=\"mb-0 flex-grow-1\">Balance Overview</b-card-title>\n      <div class=\"flex-shrink-0\">\n        <div class=\"dropdown card-header-dropdown\">\n          <b-link class=\"text-reset dropdown-btn\" href=\"#\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\"\n            aria-expanded=\"false\">\n            <span class=\"fw-semibold text-uppercase fs-12\">Sort by: </span><span class=\"text-muted\">Current Year<i\n                class=\"mdi mdi-chevron-down ms-1\"></i></span>\n          </b-link>\n          <div class=\"dropdown-menu dropdown-menu-end\">\n            <b-link class=\"dropdown-item\" href=\"#\">Today</b-link>\n            <b-link class=\"dropdown-item\" href=\"#\">Last Week</b-link>\n            <b-link class=\"dropdown-item\" href=\"#\">Last Month</b-link>\n            <b-link class=\"dropdown-item\" href=\"#\">Current Year</b-link>\n          </div>\n        </div>\n      </div>\n    </b-card-header>\n    <b-card-body class=\"px-0\">\n      <ul class=\"list-inline main-chart text-center mb-0\">\n        <li class=\"list-inline-item chart-border-left me-0 border-0\">\n          <h4 class=\"text-primary\">\n            $584k\n            <span class=\"text-muted d-inline-block fs-13 align-middle ms-2\">Revenue</span>\n          </h4>\n        </li>\n        <li class=\"list-inline-item chart-border-left me-0\">\n          <h4>\n            $497k<span class=\"text-muted d-inline-block fs-13 align-middle ms-2\">Expenses</span>\n          </h4>\n        </li>\n        <li class=\"list-inline-item chart-border-left me-0\">\n          <h4>\n            <span data-plugin=\"counterup\">3.6</span>%<span\n              class=\"text-muted d-inline-block fs-13 align-middle ms-2\">Profit Ratio</span>\n          </h4>\n        </li>\n      </ul>\n\n      <apexchart class=\"apex-charts\" height=\"290\" dir=\"ltr\" :series=\"series\" :options=\"chartOptions\"></apexchart>\n    </b-card-body>\n  </b-card>\n</template>"],"mappings":"AACA,SAASA,mBAAmBA,CAACC,MAAM,EAAE;EACnCA,MAAK,GAAIC,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC;EAC3B,OAAOA,MAAM,CAACG,GAAG,CAAC,UAAUC,KAAK,EAAE;IACjC,IAAIC,QAAO,GAAID,KAAK,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;IACrC,IAAID,QAAQ,CAACE,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE;MAChC,IAAIC,KAAI,GAAIC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAACP,QAAQ,CAAC;MACjF,IAAIG,KAAK,EAAE;QACTA,KAAI,GAAIA,KAAK,CAACF,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;QAC9B,OAAOE,KAAK;MACd,OAAO,OAAOH,QAAQ;IACxB,OAAO;MACL,IAAIQ,GAAE,GAAIT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC;MAC1B,IAAID,GAAG,CAACE,MAAK,IAAK,CAAC,EAAE;QACnB,IAAIC,SAAQ,GAAIP,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnFG,SAAQ,GAAI,OAAM,GAAIA,SAAQ,GAAI,GAAE,GAAIH,GAAG,CAAC,CAAC,IAAI,GAAG;QACpD,OAAOG,SAAS;MAClB,OAAO;QACL,OAAOX,QAAQ;MACjB;IACF;EACF,CAAC,CAAC;AACJ;AACA,eAAe;EACbY,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,MAAM,EAAE,CAAC;QACPC,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;MAC5D,CAAC,EACD;QACED,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;MAC3D,CAAC,CACA;MACDC,YAAY,EAAE;QACZC,KAAK,EAAE;UACLC,MAAM,EAAE,GAAG;UACXC,IAAI,EAAE,MAAM;UACZC,OAAO,EAAE;QACX,CAAC;QACDC,UAAU,EAAE;UACVC,OAAO,EAAE;QACX,CAAC;QACDC,MAAM,EAAE;UACNC,KAAK,EAAE,QAAQ;UACfC,KAAK,EAAE;QACT,CAAC;QACDC,KAAK,EAAE;UACLC,UAAU,EAAE,CACV,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK;QAET,CAAC;QACDC,KAAK,EAAE;UACLC,MAAM,EAAE;YACNC,SAAS,EAAE,SAAAA,CAAU/B,KAAK,EAAE;cAC1B,OAAO,GAAE,GAAIA,KAAI,GAAI,GAAG;YAC1B;UACF,CAAC;UACDgC,UAAU,EAAE,CAAC;UACbC,GAAG,EAAE,CAAC;UACNC,GAAG,EAAE;QACP,CAAC;QACDtC,MAAM,EAAED,mBAAmB,CAAC,iCAAiC,CAAC;QAC9DwC,IAAI,EAAE;UACJC,OAAO,EAAE,IAAI;UACbxC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;UAC9BwB,IAAI,EAAE;QACR;MACF;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}