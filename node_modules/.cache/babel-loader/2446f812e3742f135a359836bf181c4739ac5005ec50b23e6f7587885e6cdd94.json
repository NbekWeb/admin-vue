{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Basic area Charts\nimport { series, githubdata, dataSeries } from \"../chart-series\";\nimport moment from \"moment\";\nfunction getChartColorsArray(colors) {\n  colors = JSON.parse(colors);\n  return colors.map(function (value) {\n    var newValue = value.replace(\" \", \"\");\n    if (newValue.indexOf(\",\") === -1) {\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\n      if (color) {\n        color = color.replace(\" \", \"\");\n        return color;\n      } else return newValue;\n    } else {\n      var val = value.split(',');\n      if (val.length == 2) {\n        var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\n        rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\n        return rgbaColor;\n      } else {\n        return newValue;\n      }\n    }\n  });\n}\nconst basicAreaChart = {\n  series: [{\n    name: \"STOCK ABC\",\n    data: series.monthDataSeries1.prices\n  }],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      height: 350,\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"straight\"\n    },\n    title: {\n      text: \"Fundamental Analysis of Stocks\",\n      align: \"left\",\n      style: {\n        fontWeight: 500\n      }\n    },\n    subtitle: {\n      text: \"Price Movements\",\n      align: \"left\"\n    },\n    labels: series.monthDataSeries1.dates,\n    xaxis: {\n      type: \"datetime\"\n    },\n    yaxis: {\n      opposite: true\n    },\n    legend: {\n      horizontalAlign: \"left\"\n    },\n    colors: getChartColorsArray('[\"--vz-success\"]')\n  }\n};\n\n//  Spline Area Charts\n\nconst splineAreaChart = {\n  series: [{\n    name: \"series1\",\n    data: [31, 40, 28, 51, 42, 109, 100]\n  }, {\n    name: \"series2\",\n    data: [11, 32, 45, 32, 34, 52, 41]\n  }],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"area\"\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"smooth\"\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]'),\n    xaxis: {\n      type: \"datetime\",\n      categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\", \"2018-09-19T06:30:00.000Z\"]\n    },\n    tooltip: {\n      x: {\n        format: \"dd/MM/yy HH:mm\"\n      }\n    }\n  }\n};\n\n// Area Chart - Datetime X - Axis\n\nconst datetimeAreaChart = {\n  series: [{\n    data: [[1327359600000, 30.95], [1327446000000, 31.34], [1327532400000, 31.18], [1327618800000, 31.05], [1327878000000, 31.0], [1327964400000, 30.95], [1328050800000, 31.24], [1328137200000, 31.29], [1328223600000, 31.85], [1328482800000, 31.86], [1328569200000, 32.28], [1328655600000, 32.1], [1328742000000, 32.65], [1328828400000, 32.21], [1329087600000, 32.35], [1329174000000, 32.44], [1329260400000, 32.46], [1329346800000, 32.86], [1329433200000, 32.75], [1329778800000, 32.54], [1329865200000, 32.33], [1329951600000, 32.97], [1330038000000, 33.41], [1330297200000, 33.27], [1330383600000, 33.27], [1330470000000, 32.89], [1330556400000, 33.1], [1330642800000, 33.73], [1330902000000, 33.22], [1330988400000, 31.99], [1331074800000, 32.41], [1331161200000, 33.05], [1331247600000, 33.64], [1331506800000, 33.56], [1331593200000, 34.22], [1331679600000, 33.77], [1331766000000, 34.17], [1331852400000, 33.82], [1332111600000, 34.51], [1332198000000, 33.16], [1332284400000, 33.56], [1332370800000, 33.71], [1332457200000, 33.81], [1332712800000, 34.4], [1332799200000, 34.63], [1332885600000, 34.46], [1332972000000, 34.48], [1333058400000, 34.31], [1333317600000, 34.7], [1333404000000, 34.31], [1333490400000, 33.46], [1333576800000, 33.59], [1333922400000, 33.22], [1334008800000, 32.61], [1334095200000, 33.01], [1334181600000, 33.55], [1334268000000, 33.18], [1334527200000, 32.84], [1334613600000, 33.84], [1334700000000, 33.39], [1334786400000, 32.91], [1334872800000, 33.06], [1335132000000, 32.62], [1335218400000, 32.4], [1335304800000, 33.13], [1335391200000, 33.26], [1335477600000, 33.58], [1335736800000, 33.55], [1335823200000, 33.77], [1335909600000, 33.76], [1335996000000, 33.32], [1336082400000, 32.61], [1336341600000, 32.52], [1336428000000, 32.67], [1336514400000, 32.52], [1336600800000, 31.92], [1336687200000, 32.2], [1336946400000, 32.23], [1337032800000, 32.33], [1337119200000, 32.36], [1337205600000, 32.01], [1337292000000, 31.31], [1337551200000, 32.01], [1337637600000, 32.01], [1337724000000, 32.18], [1337810400000, 31.54], [1337896800000, 31.6], [1338242400000, 32.05], [1338328800000, 31.29], [1338415200000, 31.05], [1338501600000, 29.82], [1338760800000, 30.31], [1338847200000, 30.7], [1338933600000, 31.69], [1339020000000, 31.32], [1339106400000, 31.65], [1339365600000, 31.13], [1339452000000, 31.77], [1339538400000, 31.79], [1339624800000, 31.67], [1339711200000, 32.39], [1339970400000, 32.63], [1340056800000, 32.89], [1340143200000, 31.99], [1340229600000, 31.23], [1340316000000, 31.57], [1340575200000, 30.84], [1340661600000, 31.07], [1340748000000, 31.41], [1340834400000, 31.17], [1340920800000, 32.37], [1341180000000, 32.19], [1341266400000, 32.51], [1341439200000, 32.53], [1341525600000, 31.37], [1341784800000, 30.43], [1341871200000, 30.44], [1341957600000, 30.2], [1342044000000, 30.14], [1342130400000, 30.65], [1342389600000, 30.4], [1342476000000, 30.65], [1342562400000, 31.43], [1342648800000, 31.89], [1342735200000, 31.38], [1342994400000, 30.64], [1343080800000, 30.02], [1343167200000, 30.33], [1343253600000, 30.95], [1343340000000, 31.89], [1343599200000, 31.01], [1343685600000, 30.88], [1343772000000, 30.69], [1343858400000, 30.58], [1343944800000, 32.02], [1344204000000, 32.14], [1344290400000, 32.37], [1344376800000, 32.51], [1344463200000, 32.65], [1344549600000, 32.64], [1344808800000, 32.27], [1344895200000, 32.1], [1344981600000, 32.91], [1345068000000, 33.65], [1345154400000, 33.8], [1345413600000, 33.92], [1345500000000, 33.75], [1345586400000, 33.84], [1345672800000, 33.5], [1345759200000, 32.26], [1346018400000, 32.32], [1346104800000, 32.06], [1346191200000, 31.96], [1346277600000, 31.46], [1346364000000, 31.27], [1346709600000, 31.43], [1346796000000, 32.26], [1346882400000, 32.79], [1346968800000, 32.46], [1347228000000, 32.13], [1347314400000, 32.43], [1347400800000, 32.42], [1347487200000, 32.81], [1347573600000, 33.34], [1347832800000, 33.41], [1347919200000, 32.57], [1348005600000, 33.12], [1348092000000, 34.53], [1348178400000, 33.83], [1348437600000, 33.41], [1348524000000, 32.9], [1348610400000, 32.53], [1348696800000, 32.8], [1348783200000, 32.44], [1349042400000, 32.62], [1349128800000, 32.57], [1349215200000, 32.6], [1349301600000, 32.68], [1349388000000, 32.47], [1349647200000, 32.23], [1349733600000, 31.68], [1349820000000, 31.51], [1349906400000, 31.78], [1349992800000, 31.94], [1350252000000, 32.33], [1350338400000, 33.24], [1350424800000, 33.44], [1350511200000, 33.48], [1350597600000, 33.24], [1350856800000, 33.49], [1350943200000, 33.31], [1351029600000, 33.36], [1351116000000, 33.4], [1351202400000, 34.01], [1351638000000, 34.02], [1351724400000, 34.36], [1351810800000, 34.39], [1352070000000, 34.24], [1352156400000, 34.39], [1352242800000, 33.47], [1352329200000, 32.98], [1352415600000, 32.9], [1352674800000, 32.7], [1352761200000, 32.54], [1352847600000, 32.23], [1352934000000, 32.64], [1353020400000, 32.65], [1353279600000, 32.92], [1353366000000, 32.64], [1353452400000, 32.84], [1353625200000, 33.4], [1353884400000, 33.3], [1353970800000, 33.18], [1354057200000, 33.88], [1354143600000, 34.09], [1354230000000, 34.61], [1354489200000, 34.7], [1354575600000, 35.3], [1354662000000, 35.4], [1354748400000, 35.14], [1354834800000, 35.48], [1355094000000, 35.75], [1355180400000, 35.54], [1355266800000, 35.96], [1355353200000, 35.53], [1355439600000, 37.56], [1355698800000, 37.42], [1355785200000, 37.49], [1355871600000, 38.09], [1355958000000, 37.87], [1356044400000, 37.71], [1356303600000, 37.53], [1356476400000, 37.55], [1356562800000, 37.3], [1356649200000, 36.9], [1356908400000, 37.68], [1357081200000, 38.34], [1357167600000, 37.75], [1357254000000, 38.13], [1357513200000, 37.94], [1357599600000, 38.14], [1357686000000, 38.66], [1357772400000, 38.62], [1357858800000, 38.09], [1358118000000, 38.16], [1358204400000, 38.15], [1358290800000, 37.88], [1358377200000, 37.73], [1358463600000, 37.98], [1358809200000, 37.95], [1358895600000, 38.25], [1358982000000, 38.1], [1359068400000, 38.32], [1359327600000, 38.24], [1359414000000, 38.52], [1359500400000, 37.94], [1359586800000, 37.83], [1359673200000, 38.34], [1359932400000, 38.1], [1360018800000, 38.51], [1360105200000, 38.4], [1360191600000, 38.07], [1360278000000, 39.12], [1360537200000, 38.64], [1360623600000, 38.89], [1360710000000, 38.81], [1360796400000, 38.61], [1360882800000, 38.63], [1361228400000, 38.99], [1361314800000, 38.77], [1361401200000, 38.34], [1361487600000, 38.55], [1361746800000, 38.11], [1361833200000, 38.59], [1361919600000, 39.6]]\n  }],\n  chartOptions: {\n    chart: {\n      id: \"area-datetime\",\n      type: \"area\",\n      height: 320,\n      zoom: {\n        autoScaleYaxis: true\n      },\n      toolbar: {\n        show: false\n      }\n    },\n    colors: getChartColorsArray('[\"--vz-info\"]'),\n    annotations: {\n      yaxis: [{\n        y: 30,\n        borderColor: \"#999\",\n        label: {\n          show: true,\n          text: \"Support\",\n          style: {\n            color: \"#fff\",\n            background: \"#e83e8c\"\n          }\n        }\n      }],\n      xaxis: [{\n        x: new Date(\"14 Nov 2012\").getTime(),\n        borderColor: \"#999\",\n        yAxisIndex: 0,\n        label: {\n          show: true,\n          text: \"Rally\",\n          style: {\n            color: \"#fff\",\n            background: \"#564ab1\"\n          }\n        }\n      }]\n    },\n    dataLabels: {\n      enabled: false\n    },\n    markers: {\n      size: 0,\n      style: \"hollow\"\n    },\n    xaxis: {\n      type: \"datetime\",\n      min: new Date(\"01 Mar 2012\").getTime(),\n      tickAmount: 6\n    },\n    tooltip: {\n      x: {\n        format: \"dd MMM yyyy\"\n      }\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [20, 100, 100, 100]\n      }\n    }\n  }\n};\n\n// Area with Nagetive Values\n\nconst areaNegativeChart = {\n  series: [{\n    name: \"North\",\n    data: [{\n      x: 1996,\n      y: 322\n    }, {\n      x: 1997,\n      y: 324\n    }, {\n      x: 1998,\n      y: 329\n    }, {\n      x: 1999,\n      y: 342\n    }, {\n      x: 2000,\n      y: 348\n    }, {\n      x: 2001,\n      y: 334\n    }, {\n      x: 2002,\n      y: 325\n    }, {\n      x: 2003,\n      y: 316\n    }, {\n      x: 2004,\n      y: 318\n    }, {\n      x: 2005,\n      y: 330\n    }, {\n      x: 2006,\n      y: 355\n    }, {\n      x: 2007,\n      y: 366\n    }, {\n      x: 2008,\n      y: 337\n    }, {\n      x: 2009,\n      y: 352\n    }, {\n      x: 2010,\n      y: 377\n    }, {\n      x: 2011,\n      y: 383\n    }, {\n      x: 2012,\n      y: 344\n    }, {\n      x: 2013,\n      y: 366\n    }, {\n      x: 2014,\n      y: 389\n    }, {\n      x: 2015,\n      y: 334\n    }]\n  }, {\n    name: \"South\",\n    data: [{\n      x: 1996,\n      y: 162\n    }, {\n      x: 1997,\n      y: 90\n    }, {\n      x: 1998,\n      y: 50\n    }, {\n      x: 1999,\n      y: 77\n    }, {\n      x: 2000,\n      y: 35\n    }, {\n      x: 2001,\n      y: -45\n    }, {\n      x: 2002,\n      y: -88\n    }, {\n      x: 2003,\n      y: -120\n    }, {\n      x: 2004,\n      y: -156\n    }, {\n      x: 2005,\n      y: -123\n    }, {\n      x: 2006,\n      y: -88\n    }, {\n      x: 2007,\n      y: -66\n    }, {\n      x: 2008,\n      y: -45\n    }, {\n      x: 2009,\n      y: -29\n    }, {\n      x: 2010,\n      y: -45\n    }, {\n      x: 2011,\n      y: -88\n    }, {\n      x: 2012,\n      y: -132\n    }, {\n      x: 2013,\n      y: -146\n    }, {\n      x: 2014,\n      y: -169\n    }, {\n      x: 2015,\n      y: -184\n    }]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      height: 350\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"straight\"\n    },\n    title: {\n      text: \"Area with Negative Values\",\n      align: \"left\",\n      style: {\n        fontSize: \"14px\",\n        fontWeight: 500\n      }\n    },\n    xaxis: {\n      type: \"datetime\",\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    colors: getChartColorsArray('[\"--vz-success\", \"--vz-info\"]'),\n    yaxis: {\n      tickAmount: 4,\n      floating: false,\n      labels: {\n        style: {\n          colors: \"#3b76e1\"\n        },\n        offsetY: -7,\n        offsetX: 0\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    fill: {\n      opacity: 0.5\n    },\n    tooltip: {\n      x: {\n        format: \"yyyy\"\n      },\n      fixed: {\n        enabled: false,\n        position: \"topRight\"\n      }\n    },\n    grid: {\n      yaxis: {\n        lines: {\n          offsetX: -30\n        }\n      },\n      padding: {\n        left: 20\n      }\n    }\n  }\n};\n\n// Github Style - Area Charts\n\nconst areaMonthsChart = {\n  series: [{\n    name: \"commits\",\n    data: githubdata.series\n  }],\n  chartOptions: {\n    chart: {\n      id: \"chartyear\",\n      type: \"area\",\n      height: 130,\n      toolbar: {\n        show: false,\n        autoSelected: \"pan\"\n      },\n      events: {\n        mounted: function (chart) {\n          var commitsEl = document.querySelector(\".cmeta span.commits\");\n          var commits = chart.getSeriesTotalXRange(chart.w.globals.minX, chart.w.globals.maxX);\n          commitsEl.innerHTML = commits;\n        },\n        updated: function (chart) {\n          var commitsEl = document.querySelector(\".cmeta span.commits\");\n          var commits = chart.getSeriesTotalXRange(chart.w.globals.minX, chart.w.globals.maxX);\n          commitsEl.innerHTML = commits;\n        }\n      }\n    },\n    colors: getChartColorsArray('[\"--vz-danger\"]'),\n    stroke: {\n      width: 0,\n      curve: \"smooth\"\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      opacity: 1,\n      type: \"solid\"\n    },\n    yaxis: {\n      show: false,\n      tickAmount: 3\n    },\n    xaxis: {\n      type: \"datetime\"\n    }\n  }\n};\nconst areaYearsChart = {\n  series: [{\n    name: \"commits\",\n    data: githubdata.series\n  }],\n  chartOptions: {\n    chart: {\n      height: 170,\n      type: \"area\",\n      toolbar: {\n        autoSelected: \"selection\"\n      },\n      brush: {\n        enabled: true,\n        target: \"chartyear\"\n      },\n      selection: {\n        enabled: true,\n        xaxis: {\n          min: new Date(\"26 Jan 2014\").getTime(),\n          max: new Date(\"29 Mar 2015\").getTime()\n        }\n      }\n    },\n    colors: getChartColorsArray('[\"--vz-success\"]'),\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: 0,\n      curve: \"smooth\"\n    },\n    fill: {\n      opacity: 1,\n      type: \"solid\"\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\"\n    },\n    xaxis: {\n      type: \"datetime\"\n    }\n  }\n};\n\n// Stacked Area Charts\n\nvar generateDayWiseTimeSeries = function (baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n  while (i < count) {\n    var x = baseval;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n  return series;\n};\nconst areaStackedChart = {\n  series: [{\n    name: \"South\",\n    data: generateDayWiseTimeSeries(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: \"North\",\n    data: generateDayWiseTimeSeries(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\n      min: 10,\n      max: 20\n    })\n  }, {\n    name: \"Central\",\n    data: generateDayWiseTimeSeries(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\n      min: 10,\n      max: 15\n    })\n  }],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      height: 350,\n      stacked: true,\n      events: {\n        selection: function (chart, e) {\n          console.log(new Date(e.xaxis.min));\n        }\n      }\n    },\n    colors: getChartColorsArray('[\"--vz-success\", \"--vz-info\", \"--vz-light\"]'),\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"smooth\"\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        opacityFrom: 0.6,\n        opacityTo: 0.8\n      }\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\"\n    },\n    xaxis: {\n      type: \"datetime\"\n    }\n  }\n};\n\n// Ireegular Time Series\n\nvar ts1 = 1388534400000;\nvar ts2 = 1388620800000;\nvar ts3 = 1389052800000;\nlet dataSet = [[], [], []];\nfor (var i = 0; i < 12; i++) {\n  ts1 = ts1 + 86400000;\n  var innerArr = [ts1, dataSeries[2][i].value];\n  dataSet[0].push(innerArr);\n}\nfor (let i = 0; i < 18; i++) {\n  ts2 = ts2 + 86400000;\n  let innerArr = [ts2, dataSeries[1][i].value];\n  dataSet[1].push(innerArr);\n}\nfor (let i = 0; i < 12; i++) {\n  ts3 = ts3 + 86400000;\n  let innerArr = [ts3, dataSeries[0][i].value];\n  dataSet[2].push(innerArr);\n}\n\n//Irregular Timeseries Chart\n\nconst areaIrregularChart = {\n  series: [{\n    name: \"PRODUCT A\",\n    data: dataSet[0]\n  }, {\n    name: \"PRODUCT B\",\n    data: dataSet[1]\n  }, {\n    name: \"PRODUCT C\",\n    data: dataSet[2]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      stacked: false,\n      height: 350,\n      zoom: {\n        enabled: false\n      },\n      toolbar: {\n        show: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    markers: {\n      size: 0\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [20, 100, 100, 100]\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: \"#8e8da4\"\n        },\n        offsetX: 0,\n        formatter: function (val) {\n          return (val / 1000000).toFixed(2);\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    xaxis: {\n      type: \"datetime\",\n      tickAmount: 8,\n      min: new Date(\"01/01/2014\").getTime(),\n      max: new Date(\"01/20/2014\").getTime(),\n      labels: {\n        rotate: -15,\n        rotateAlways: true,\n        formatter: function (val, timestamp) {\n          return moment(new Date(timestamp)).format(\"DD MMM YYYY\");\n        }\n      }\n    },\n    title: {\n      text: \"Irregular Data in Time Series\",\n      align: \"left\",\n      offsetX: 14,\n      style: {\n        fontWeight: 500\n      }\n    },\n    tooltip: {\n      shared: true\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"right\",\n      offsetX: -10\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-warning\", \"--vz-success\"]')\n  }\n};\n\n// Area Chart With Null Values Chart\n\nconst areaNullValueChart = {\n  series: [{\n    name: \"Network\",\n    data: [{\n      x: \"Dec 23 2017\",\n      y: null\n    }, {\n      x: \"Dec 24 2017\",\n      y: 44\n    }, {\n      x: \"Dec 25 2017\",\n      y: 31\n    }, {\n      x: \"Dec 26 2017\",\n      y: 38\n    }, {\n      x: \"Dec 27 2017\",\n      y: null\n    }, {\n      x: \"Dec 28 2017\",\n      y: 32\n    }, {\n      x: \"Dec 29 2017\",\n      y: 55\n    }, {\n      x: \"Dec 30 2017\",\n      y: 51\n    }, {\n      x: \"Dec 31 2017\",\n      y: 67\n    }, {\n      x: \"Jan 01 2018\",\n      y: 22\n    }, {\n      x: \"Jan 02 2018\",\n      y: 34\n    }, {\n      x: \"Jan 03 2018\",\n      y: null\n    }, {\n      x: \"Jan 04 2018\",\n      y: null\n    }, {\n      x: \"Jan 05 2018\",\n      y: 11\n    }, {\n      x: \"Jan 06 2018\",\n      y: 4\n    }, {\n      x: \"Jan 07 2018\",\n      y: 15\n    }, {\n      x: \"Jan 08 2018\",\n      y: null\n    }, {\n      x: \"Jan 09 2018\",\n      y: 9\n    }, {\n      x: \"Jan 10 2018\",\n      y: 34\n    }, {\n      x: \"Jan 11 2018\",\n      y: null\n    }, {\n      x: \"Jan 12 2018\",\n      y: null\n    }, {\n      x: \"Jan 13 2018\",\n      y: 13\n    }, {\n      x: \"Jan 14 2018\",\n      y: null\n    }]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      height: 350,\n      animations: {\n        enabled: false\n      },\n      zoom: {\n        enabled: false\n      },\n      toolbar: {\n        show: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"straight\"\n    },\n    fill: {\n      opacity: 0.8,\n      type: \"pattern\",\n      pattern: {\n        style: [\"verticalLines\", \"horizontalLines\"],\n        width: 5,\n        height: 6\n      }\n    },\n    markers: {\n      size: 5,\n      hover: {\n        size: 9\n      }\n    },\n    title: {\n      text: \"Network Monitoring\",\n      style: {\n        fontWeight: 500\n      }\n    },\n    tooltip: {\n      intersect: true,\n      shared: false\n    },\n    theme: {\n      palette: \"palette1\"\n    },\n    xaxis: {\n      type: \"datetime\"\n    },\n    yaxis: {\n      title: {\n        text: \"Bytes Received\"\n      }\n    },\n    colors: getChartColorsArray('[\"--vz-success\"]')\n  }\n};\nexport { basicAreaChart, splineAreaChart, datetimeAreaChart, areaNegativeChart, areaMonthsChart, areaYearsChart, areaStackedChart, areaIrregularChart, areaNullValueChart };","map":{"version":3,"names":["series","githubdata","dataSeries","moment","getChartColorsArray","colors","JSON","parse","map","value","newValue","replace","indexOf","color","getComputedStyle","document","documentElement","getPropertyValue","val","split","length","rgbaColor","basicAreaChart","name","data","monthDataSeries1","prices","chartOptions","chart","type","height","zoom","enabled","dataLabels","stroke","curve","title","text","align","style","fontWeight","subtitle","labels","dates","xaxis","yaxis","opposite","legend","horizontalAlign","splineAreaChart","categories","tooltip","x","format","datetimeAreaChart","id","autoScaleYaxis","toolbar","show","annotations","y","borderColor","label","background","Date","getTime","yAxisIndex","markers","size","min","tickAmount","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","areaNegativeChart","fontSize","axisBorder","axisTicks","floating","offsetY","offsetX","opacity","fixed","position","grid","lines","padding","left","areaMonthsChart","autoSelected","events","mounted","commitsEl","querySelector","commits","getSeriesTotalXRange","w","globals","minX","maxX","innerHTML","updated","width","areaYearsChart","brush","target","selection","max","generateDayWiseTimeSeries","baseval","count","yrange","i","Math","floor","random","push","areaStackedChart","stacked","e","console","log","ts1","ts2","ts3","dataSet","innerArr","areaIrregularChart","formatter","toFixed","rotate","rotateAlways","timestamp","shared","areaNullValueChart","animations","pattern","hover","intersect","theme","palette"],"sources":["C:/Users/UMIDJON/Desktop/default2/src/views/charts/apex/area/data.js"],"sourcesContent":["// Basic area Charts\nimport { series, githubdata, dataSeries } from \"../chart-series\";\nimport moment from \"moment\";\n\nfunction getChartColorsArray(colors){\n  colors = JSON.parse(colors);\n  return colors.map(function (value) {\n    var newValue = value.replace(\" \", \"\");\n    if (newValue.indexOf(\",\") === -1) {\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\n          if (color) {\n          color = color.replace(\" \", \"\");\n          return color;\n          }\n          else return newValue;\n      } else {\n          var val = value.split(',');\n          if (val.length == 2) {\n              var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\n              rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\n              return rgbaColor;\n          } else {\n              return newValue;\n          }\n      }\n  });\n}\n\nconst basicAreaChart = {\n  series: [\n    {\n      name: \"STOCK ABC\",\n      data: series.monthDataSeries1.prices,\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      height: 350,\n      zoom: {\n        enabled: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"straight\",\n    },\n    title: {\n      text: \"Fundamental Analysis of Stocks\",\n      align: \"left\",\n      style: {\n        fontWeight: 500,\n      },\n    },\n    subtitle: {\n      text: \"Price Movements\",\n      align: \"left\",\n    },\n    labels: series.monthDataSeries1.dates,\n    xaxis: {\n      type: \"datetime\",\n    },\n    yaxis: {\n      opposite: true,\n    },\n    legend: {\n      horizontalAlign: \"left\",\n    },\n    colors: getChartColorsArray('[\"--vz-success\"]'),\n  },\n};\n\n//  Spline Area Charts\n\nconst splineAreaChart = {\n  series: [\n    {\n      name: \"series1\",\n      data: [31, 40, 28, 51, 42, 109, 100],\n    },\n    {\n      name: \"series2\",\n      data: [11, 32, 45, 32, 34, 52, 41],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"area\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-success\"]'),\n    xaxis: {\n      type: \"datetime\",\n      categories: [\n        \"2018-09-19T00:00:00.000Z\",\n        \"2018-09-19T01:30:00.000Z\",\n        \"2018-09-19T02:30:00.000Z\",\n        \"2018-09-19T03:30:00.000Z\",\n        \"2018-09-19T04:30:00.000Z\",\n        \"2018-09-19T05:30:00.000Z\",\n        \"2018-09-19T06:30:00.000Z\",\n      ],\n    },\n    tooltip: {\n      x: {\n        format: \"dd/MM/yy HH:mm\",\n      },\n    },\n  },\n};\n\n// Area Chart - Datetime X - Axis\n\nconst datetimeAreaChart = {\n  series: [\n    {\n      data: [\n        [1327359600000, 30.95],\n        [1327446000000, 31.34],\n        [1327532400000, 31.18],\n        [1327618800000, 31.05],\n        [1327878000000, 31.0],\n        [1327964400000, 30.95],\n        [1328050800000, 31.24],\n        [1328137200000, 31.29],\n        [1328223600000, 31.85],\n        [1328482800000, 31.86],\n        [1328569200000, 32.28],\n        [1328655600000, 32.1],\n        [1328742000000, 32.65],\n        [1328828400000, 32.21],\n        [1329087600000, 32.35],\n        [1329174000000, 32.44],\n        [1329260400000, 32.46],\n        [1329346800000, 32.86],\n        [1329433200000, 32.75],\n        [1329778800000, 32.54],\n        [1329865200000, 32.33],\n        [1329951600000, 32.97],\n        [1330038000000, 33.41],\n        [1330297200000, 33.27],\n        [1330383600000, 33.27],\n        [1330470000000, 32.89],\n        [1330556400000, 33.1],\n        [1330642800000, 33.73],\n        [1330902000000, 33.22],\n        [1330988400000, 31.99],\n        [1331074800000, 32.41],\n        [1331161200000, 33.05],\n        [1331247600000, 33.64],\n        [1331506800000, 33.56],\n        [1331593200000, 34.22],\n        [1331679600000, 33.77],\n        [1331766000000, 34.17],\n        [1331852400000, 33.82],\n        [1332111600000, 34.51],\n        [1332198000000, 33.16],\n        [1332284400000, 33.56],\n        [1332370800000, 33.71],\n        [1332457200000, 33.81],\n        [1332712800000, 34.4],\n        [1332799200000, 34.63],\n        [1332885600000, 34.46],\n        [1332972000000, 34.48],\n        [1333058400000, 34.31],\n        [1333317600000, 34.7],\n        [1333404000000, 34.31],\n        [1333490400000, 33.46],\n        [1333576800000, 33.59],\n        [1333922400000, 33.22],\n        [1334008800000, 32.61],\n        [1334095200000, 33.01],\n        [1334181600000, 33.55],\n        [1334268000000, 33.18],\n        [1334527200000, 32.84],\n        [1334613600000, 33.84],\n        [1334700000000, 33.39],\n        [1334786400000, 32.91],\n        [1334872800000, 33.06],\n        [1335132000000, 32.62],\n        [1335218400000, 32.4],\n        [1335304800000, 33.13],\n        [1335391200000, 33.26],\n        [1335477600000, 33.58],\n        [1335736800000, 33.55],\n        [1335823200000, 33.77],\n        [1335909600000, 33.76],\n        [1335996000000, 33.32],\n        [1336082400000, 32.61],\n        [1336341600000, 32.52],\n        [1336428000000, 32.67],\n        [1336514400000, 32.52],\n        [1336600800000, 31.92],\n        [1336687200000, 32.2],\n        [1336946400000, 32.23],\n        [1337032800000, 32.33],\n        [1337119200000, 32.36],\n        [1337205600000, 32.01],\n        [1337292000000, 31.31],\n        [1337551200000, 32.01],\n        [1337637600000, 32.01],\n        [1337724000000, 32.18],\n        [1337810400000, 31.54],\n        [1337896800000, 31.6],\n        [1338242400000, 32.05],\n        [1338328800000, 31.29],\n        [1338415200000, 31.05],\n        [1338501600000, 29.82],\n        [1338760800000, 30.31],\n        [1338847200000, 30.7],\n        [1338933600000, 31.69],\n        [1339020000000, 31.32],\n        [1339106400000, 31.65],\n        [1339365600000, 31.13],\n        [1339452000000, 31.77],\n        [1339538400000, 31.79],\n        [1339624800000, 31.67],\n        [1339711200000, 32.39],\n        [1339970400000, 32.63],\n        [1340056800000, 32.89],\n        [1340143200000, 31.99],\n        [1340229600000, 31.23],\n        [1340316000000, 31.57],\n        [1340575200000, 30.84],\n        [1340661600000, 31.07],\n        [1340748000000, 31.41],\n        [1340834400000, 31.17],\n        [1340920800000, 32.37],\n        [1341180000000, 32.19],\n        [1341266400000, 32.51],\n        [1341439200000, 32.53],\n        [1341525600000, 31.37],\n        [1341784800000, 30.43],\n        [1341871200000, 30.44],\n        [1341957600000, 30.2],\n        [1342044000000, 30.14],\n        [1342130400000, 30.65],\n        [1342389600000, 30.4],\n        [1342476000000, 30.65],\n        [1342562400000, 31.43],\n        [1342648800000, 31.89],\n        [1342735200000, 31.38],\n        [1342994400000, 30.64],\n        [1343080800000, 30.02],\n        [1343167200000, 30.33],\n        [1343253600000, 30.95],\n        [1343340000000, 31.89],\n        [1343599200000, 31.01],\n        [1343685600000, 30.88],\n        [1343772000000, 30.69],\n        [1343858400000, 30.58],\n        [1343944800000, 32.02],\n        [1344204000000, 32.14],\n        [1344290400000, 32.37],\n        [1344376800000, 32.51],\n        [1344463200000, 32.65],\n        [1344549600000, 32.64],\n        [1344808800000, 32.27],\n        [1344895200000, 32.1],\n        [1344981600000, 32.91],\n        [1345068000000, 33.65],\n        [1345154400000, 33.8],\n        [1345413600000, 33.92],\n        [1345500000000, 33.75],\n        [1345586400000, 33.84],\n        [1345672800000, 33.5],\n        [1345759200000, 32.26],\n        [1346018400000, 32.32],\n        [1346104800000, 32.06],\n        [1346191200000, 31.96],\n        [1346277600000, 31.46],\n        [1346364000000, 31.27],\n        [1346709600000, 31.43],\n        [1346796000000, 32.26],\n        [1346882400000, 32.79],\n        [1346968800000, 32.46],\n        [1347228000000, 32.13],\n        [1347314400000, 32.43],\n        [1347400800000, 32.42],\n        [1347487200000, 32.81],\n        [1347573600000, 33.34],\n        [1347832800000, 33.41],\n        [1347919200000, 32.57],\n        [1348005600000, 33.12],\n        [1348092000000, 34.53],\n        [1348178400000, 33.83],\n        [1348437600000, 33.41],\n        [1348524000000, 32.9],\n        [1348610400000, 32.53],\n        [1348696800000, 32.8],\n        [1348783200000, 32.44],\n        [1349042400000, 32.62],\n        [1349128800000, 32.57],\n        [1349215200000, 32.6],\n        [1349301600000, 32.68],\n        [1349388000000, 32.47],\n        [1349647200000, 32.23],\n        [1349733600000, 31.68],\n        [1349820000000, 31.51],\n        [1349906400000, 31.78],\n        [1349992800000, 31.94],\n        [1350252000000, 32.33],\n        [1350338400000, 33.24],\n        [1350424800000, 33.44],\n        [1350511200000, 33.48],\n        [1350597600000, 33.24],\n        [1350856800000, 33.49],\n        [1350943200000, 33.31],\n        [1351029600000, 33.36],\n        [1351116000000, 33.4],\n        [1351202400000, 34.01],\n        [1351638000000, 34.02],\n        [1351724400000, 34.36],\n        [1351810800000, 34.39],\n        [1352070000000, 34.24],\n        [1352156400000, 34.39],\n        [1352242800000, 33.47],\n        [1352329200000, 32.98],\n        [1352415600000, 32.9],\n        [1352674800000, 32.7],\n        [1352761200000, 32.54],\n        [1352847600000, 32.23],\n        [1352934000000, 32.64],\n        [1353020400000, 32.65],\n        [1353279600000, 32.92],\n        [1353366000000, 32.64],\n        [1353452400000, 32.84],\n        [1353625200000, 33.4],\n        [1353884400000, 33.3],\n        [1353970800000, 33.18],\n        [1354057200000, 33.88],\n        [1354143600000, 34.09],\n        [1354230000000, 34.61],\n        [1354489200000, 34.7],\n        [1354575600000, 35.3],\n        [1354662000000, 35.4],\n        [1354748400000, 35.14],\n        [1354834800000, 35.48],\n        [1355094000000, 35.75],\n        [1355180400000, 35.54],\n        [1355266800000, 35.96],\n        [1355353200000, 35.53],\n        [1355439600000, 37.56],\n        [1355698800000, 37.42],\n        [1355785200000, 37.49],\n        [1355871600000, 38.09],\n        [1355958000000, 37.87],\n        [1356044400000, 37.71],\n        [1356303600000, 37.53],\n        [1356476400000, 37.55],\n        [1356562800000, 37.3],\n        [1356649200000, 36.9],\n        [1356908400000, 37.68],\n        [1357081200000, 38.34],\n        [1357167600000, 37.75],\n        [1357254000000, 38.13],\n        [1357513200000, 37.94],\n        [1357599600000, 38.14],\n        [1357686000000, 38.66],\n        [1357772400000, 38.62],\n        [1357858800000, 38.09],\n        [1358118000000, 38.16],\n        [1358204400000, 38.15],\n        [1358290800000, 37.88],\n        [1358377200000, 37.73],\n        [1358463600000, 37.98],\n        [1358809200000, 37.95],\n        [1358895600000, 38.25],\n        [1358982000000, 38.1],\n        [1359068400000, 38.32],\n        [1359327600000, 38.24],\n        [1359414000000, 38.52],\n        [1359500400000, 37.94],\n        [1359586800000, 37.83],\n        [1359673200000, 38.34],\n        [1359932400000, 38.1],\n        [1360018800000, 38.51],\n        [1360105200000, 38.4],\n        [1360191600000, 38.07],\n        [1360278000000, 39.12],\n        [1360537200000, 38.64],\n        [1360623600000, 38.89],\n        [1360710000000, 38.81],\n        [1360796400000, 38.61],\n        [1360882800000, 38.63],\n        [1361228400000, 38.99],\n        [1361314800000, 38.77],\n        [1361401200000, 38.34],\n        [1361487600000, 38.55],\n        [1361746800000, 38.11],\n        [1361833200000, 38.59],\n        [1361919600000, 39.6],\n      ],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      id: \"area-datetime\",\n      type: \"area\",\n      height: 320,\n      zoom: {\n        autoScaleYaxis: true,\n      },\n      toolbar: {\n        show: false,\n      },\n    },\n    colors: getChartColorsArray('[\"--vz-info\"]'),\n    annotations: {\n      yaxis: [\n        {\n          y: 30,\n          borderColor: \"#999\",\n          label: {\n            show: true,\n            text: \"Support\",\n            style: {\n              color: \"#fff\",\n              background: \"#e83e8c\",\n            },\n          },\n        },\n      ],\n      xaxis: [\n        {\n          x: new Date(\"14 Nov 2012\").getTime(),\n          borderColor: \"#999\",\n          yAxisIndex: 0,\n          label: {\n            show: true,\n            text: \"Rally\",\n            style: {\n              color: \"#fff\",\n              background: \"#564ab1\",\n            },\n          },\n        },\n      ],\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    markers: {\n      size: 0,\n      style: \"hollow\",\n    },\n    xaxis: {\n      type: \"datetime\",\n      min: new Date(\"01 Mar 2012\").getTime(),\n      tickAmount: 6,\n    },\n    tooltip: {\n      x: {\n        format: \"dd MMM yyyy\",\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [20, 100, 100, 100],\n      },\n    },\n  },\n};\n\n\n// Area with Nagetive Values\n\nconst areaNegativeChart = {\n  series: [\n    {\n      name: \"North\",\n      data: [\n        {\n          x: 1996,\n          y: 322,\n        },\n        {\n          x: 1997,\n          y: 324,\n        },\n        {\n          x: 1998,\n          y: 329,\n        },\n        {\n          x: 1999,\n          y: 342,\n        },\n        {\n          x: 2000,\n          y: 348,\n        },\n        {\n          x: 2001,\n          y: 334,\n        },\n        {\n          x: 2002,\n          y: 325,\n        },\n        {\n          x: 2003,\n          y: 316,\n        },\n        {\n          x: 2004,\n          y: 318,\n        },\n        {\n          x: 2005,\n          y: 330,\n        },\n        {\n          x: 2006,\n          y: 355,\n        },\n        {\n          x: 2007,\n          y: 366,\n        },\n        {\n          x: 2008,\n          y: 337,\n        },\n        {\n          x: 2009,\n          y: 352,\n        },\n        {\n          x: 2010,\n          y: 377,\n        },\n        {\n          x: 2011,\n          y: 383,\n        },\n        {\n          x: 2012,\n          y: 344,\n        },\n        {\n          x: 2013,\n          y: 366,\n        },\n        {\n          x: 2014,\n          y: 389,\n        },\n        {\n          x: 2015,\n          y: 334,\n        },\n      ],\n    },\n    {\n      name: \"South\",\n      data: [\n        {\n          x: 1996,\n          y: 162,\n        },\n        {\n          x: 1997,\n          y: 90,\n        },\n        {\n          x: 1998,\n          y: 50,\n        },\n        {\n          x: 1999,\n          y: 77,\n        },\n        {\n          x: 2000,\n          y: 35,\n        },\n        {\n          x: 2001,\n          y: -45,\n        },\n        {\n          x: 2002,\n          y: -88,\n        },\n        {\n          x: 2003,\n          y: -120,\n        },\n        {\n          x: 2004,\n          y: -156,\n        },\n        {\n          x: 2005,\n          y: -123,\n        },\n        {\n          x: 2006,\n          y: -88,\n        },\n        {\n          x: 2007,\n          y: -66,\n        },\n        {\n          x: 2008,\n          y: -45,\n        },\n        {\n          x: 2009,\n          y: -29,\n        },\n        {\n          x: 2010,\n          y: -45,\n        },\n        {\n          x: 2011,\n          y: -88,\n        },\n        {\n          x: 2012,\n          y: -132,\n        },\n        {\n          x: 2013,\n          y: -146,\n        },\n        {\n          x: 2014,\n          y: -169,\n        },\n        {\n          x: 2015,\n          y: -184,\n        },\n      ],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      height: 350,\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"straight\",\n    },\n    title: {\n      text: \"Area with Negative Values\",\n      align: \"left\",\n\n      style: {\n        fontSize: \"14px\",\n        fontWeight: 500,\n      },\n    },\n    xaxis: {\n      type: \"datetime\",\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    colors: getChartColorsArray('[\"--vz-success\", \"--vz-info\"]'),\n    yaxis: {\n      tickAmount: 4,\n      floating: false,\n\n      labels: {\n        style: {\n          colors: \"#3b76e1\",\n        },\n        offsetY: -7,\n        offsetX: 0,\n      },\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    fill: {\n      opacity: 0.5,\n    },\n    tooltip: {\n      x: {\n        format: \"yyyy\",\n      },\n      fixed: {\n        enabled: false,\n        position: \"topRight\",\n      },\n    },\n    grid: {\n      yaxis: {\n        lines: {\n          offsetX: -30,\n        },\n      },\n      padding: {\n        left: 20,\n      },\n    },\n  },\n};\n\n// Github Style - Area Charts\n\nconst areaMonthsChart = {\n  series: [\n    {\n      name: \"commits\",\n      data: githubdata.series,\n    },\n  ],\n  chartOptions: {\n    chart: {\n      id: \"chartyear\",\n      type: \"area\",\n      height: 130,\n      toolbar: {\n        show: false,\n        autoSelected: \"pan\",\n      },\n      events: {\n        mounted: function(chart) {\n          var commitsEl = document.querySelector(\".cmeta span.commits\");\n          var commits = chart.getSeriesTotalXRange(\n            chart.w.globals.minX,\n            chart.w.globals.maxX\n          );\n\n          commitsEl.innerHTML = commits;\n        },\n        updated: function(chart) {\n          var commitsEl = document.querySelector(\".cmeta span.commits\");\n          var commits = chart.getSeriesTotalXRange(\n            chart.w.globals.minX,\n            chart.w.globals.maxX\n          );\n\n          commitsEl.innerHTML = commits;\n        },\n      },\n    },\n    colors: getChartColorsArray('[\"--vz-danger\"]'),\n    stroke: {\n      width: 0,\n      curve: \"smooth\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    fill: {\n      opacity: 1,\n      type: \"solid\",\n    },\n    yaxis: {\n      show: false,\n      tickAmount: 3,\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n  },\n};\n\nconst areaYearsChart = {\n  series: [\n    {\n      name: \"commits\",\n      data: githubdata.series,\n    },\n  ],\n  chartOptions: {\n    chart: {\n      height: 170,\n      type: \"area\",\n      toolbar: {\n        autoSelected: \"selection\",\n      },\n      brush: {\n        enabled: true,\n        target: \"chartyear\",\n      },\n      selection: {\n        enabled: true,\n        xaxis: {\n          min: new Date(\"26 Jan 2014\").getTime(),\n          max: new Date(\"29 Mar 2015\").getTime(),\n        },\n      },\n    },\n    colors: getChartColorsArray('[\"--vz-success\"]'),\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      width: 0,\n      curve: \"smooth\",\n    },\n    fill: {\n      opacity: 1,\n      type: \"solid\",\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n  },\n};\n\n// Stacked Area Charts\n\nvar generateDayWiseTimeSeries = function(baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n  while (i < count) {\n    var x = baseval;\n    var y =\n      Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n  return series;\n};\n\nconst areaStackedChart = {\n  series: [\n    {\n      name: \"South\",\n      data: generateDayWiseTimeSeries(\n        new Date(\"11 Feb 2017 GMT\").getTime(),\n        20,\n        {\n          min: 10,\n          max: 60,\n        }\n      ),\n    },\n    {\n      name: \"North\",\n      data: generateDayWiseTimeSeries(\n        new Date(\"11 Feb 2017 GMT\").getTime(),\n        20,\n        {\n          min: 10,\n          max: 20,\n        }\n      ),\n    },\n    {\n      name: \"Central\",\n      data: generateDayWiseTimeSeries(\n        new Date(\"11 Feb 2017 GMT\").getTime(),\n        20,\n        {\n          min: 10,\n          max: 15,\n        }\n      ),\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      height: 350,\n      stacked: true,\n      events: {\n        selection: function(chart, e) {\n          console.log(new Date(e.xaxis.min));\n        },\n      },\n    },\n    colors: getChartColorsArray('[\"--vz-success\", \"--vz-info\", \"--vz-light\"]'),\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        opacityFrom: 0.6,\n        opacityTo: 0.8,\n      },\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"left\",\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n  },\n};\n\n// Ireegular Time Series\n\n  var ts1 = 1388534400000;\n  var ts2 = 1388620800000;\n  var ts3 = 1389052800000;\n\n  let dataSet = [[], [], []];\n\n  for (var i = 0; i < 12; i++) {\n    ts1 = ts1 + 86400000;\n    var innerArr = [ts1, dataSeries[2][i].value];\n    dataSet[0].push(innerArr)\n  }\n  for (let i = 0; i < 18; i++) {\n    ts2 = ts2 + 86400000;\n    let innerArr = [ts2, dataSeries[1][i].value];\n    dataSet[1].push(innerArr)\n  }\n  for (let i = 0; i < 12; i++) {\n    ts3 = ts3 + 86400000;\n    let innerArr = [ts3, dataSeries[0][i].value];\n    dataSet[2].push(innerArr)\n  }\n\n//Irregular Timeseries Chart\n\nconst areaIrregularChart = {\n  series: [\n    {\n      name: \"PRODUCT A\",\n      data: dataSet[0],\n    },\n    {\n      name: \"PRODUCT B\",\n      data: dataSet[1],\n    },\n    {\n      name: \"PRODUCT C\",\n      data: dataSet[2],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      stacked: false,\n      height: 350,\n      zoom: {\n        enabled: false,\n      },\n      toolbar: {\n        show: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    markers: {\n      size: 0,\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [20, 100, 100, 100],\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: \"#8e8da4\",\n        },\n        offsetX: 0,\n        formatter: function(val) {\n          return (val / 1000000).toFixed(2);\n        },\n      },\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    xaxis: {\n      type: \"datetime\",\n      tickAmount: 8,\n      min: new Date(\"01/01/2014\").getTime(),\n      max: new Date(\"01/20/2014\").getTime(),\n      labels: {\n        rotate: -15,\n        rotateAlways: true,\n        formatter: function(val, timestamp) {\n          return moment(new Date(timestamp)).format(\"DD MMM YYYY\");\n        },\n      },\n    },\n    title: {\n      text: \"Irregular Data in Time Series\",\n      align: \"left\",\n      offsetX: 14,\n      style: {\n        fontWeight: 500,\n      },\n    },\n    tooltip: {\n      shared: true,\n    },\n    legend: {\n      position: \"top\",\n      horizontalAlign: \"right\",\n      offsetX: -10,\n    },\n    colors: getChartColorsArray('[\"--vz-primary\", \"--vz-warning\", \"--vz-success\"]'),\n  },\n};\n\n// Area Chart With Null Values Chart\n\nconst areaNullValueChart = {\n  series: [\n    {\n      name: \"Network\",\n      data: [\n        {\n          x: \"Dec 23 2017\",\n          y: null,\n        },\n        {\n          x: \"Dec 24 2017\",\n          y: 44,\n        },\n        {\n          x: \"Dec 25 2017\",\n          y: 31,\n        },\n        {\n          x: \"Dec 26 2017\",\n          y: 38,\n        },\n        {\n          x: \"Dec 27 2017\",\n          y: null,\n        },\n        {\n          x: \"Dec 28 2017\",\n          y: 32,\n        },\n        {\n          x: \"Dec 29 2017\",\n          y: 55,\n        },\n        {\n          x: \"Dec 30 2017\",\n          y: 51,\n        },\n        {\n          x: \"Dec 31 2017\",\n          y: 67,\n        },\n        {\n          x: \"Jan 01 2018\",\n          y: 22,\n        },\n        {\n          x: \"Jan 02 2018\",\n          y: 34,\n        },\n        {\n          x: \"Jan 03 2018\",\n          y: null,\n        },\n        {\n          x: \"Jan 04 2018\",\n          y: null,\n        },\n        {\n          x: \"Jan 05 2018\",\n          y: 11,\n        },\n        {\n          x: \"Jan 06 2018\",\n          y: 4,\n        },\n        {\n          x: \"Jan 07 2018\",\n          y: 15,\n        },\n        {\n          x: \"Jan 08 2018\",\n          y: null,\n        },\n        {\n          x: \"Jan 09 2018\",\n          y: 9,\n        },\n        {\n          x: \"Jan 10 2018\",\n          y: 34,\n        },\n        {\n          x: \"Jan 11 2018\",\n          y: null,\n        },\n        {\n          x: \"Jan 12 2018\",\n          y: null,\n        },\n        {\n          x: \"Jan 13 2018\",\n          y: 13,\n        },\n        {\n          x: \"Jan 14 2018\",\n          y: null,\n        },\n      ],\n    },\n  ],\n  chartOptions: {\n    chart: {\n      type: \"area\",\n      height: 350,\n      animations: {\n        enabled: false,\n      },\n      zoom: {\n        enabled: false,\n      },\n      toolbar: {\n        show: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"straight\",\n    },\n    fill: {\n      opacity: 0.8,\n      type: \"pattern\",\n      pattern: {\n        style: [\"verticalLines\", \"horizontalLines\"],\n        width: 5,\n        height: 6,\n      },\n    },\n    markers: {\n      size: 5,\n      hover: {\n        size: 9,\n      },\n    },\n    title: {\n      text: \"Network Monitoring\",\n      style: {\n        fontWeight: 500,\n      },\n    },\n    tooltip: {\n      intersect: true,\n      shared: false,\n    },\n    theme: {\n      palette: \"palette1\",\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    yaxis: {\n      title: {\n        text: \"Bytes Received\",\n      },\n    },\n    colors: getChartColorsArray('[\"--vz-success\"]'),\n  },\n};\n\nexport {\n  basicAreaChart,\n  splineAreaChart,\n  datetimeAreaChart,\n  areaNegativeChart,\n  areaMonthsChart,\n  areaYearsChart,\n  areaStackedChart,\n  areaIrregularChart,\n  areaNullValueChart,\n};\n"],"mappings":"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AE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,IAAI,CAAC,EACrB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,CAAC,EACtB,CAAC,aAAa,EAAE,KAAK,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}